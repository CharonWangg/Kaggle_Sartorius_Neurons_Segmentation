nohup: å¿½ç•¥è¾“å…¥
Command Line Args: Namespace(config_file='', dist_url='tcp://127.0.0.1:50152', eval_only=False, machine_rank=0, num_gpus=2, num_machines=1, opts=[], resume=False)
[32m[12/16 10:58:43 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (24): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (25): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (26): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (27): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (28): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (29): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (30): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (31): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (32): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (33): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (34): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (35): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2_offset): Conv2d(2048, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=2048, out_channels=2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2_offset): Conv2d(2048, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=2048, out_channels=2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2_offset): Conv2d(2048, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=2048, out_channels=2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): CascadeROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): ModuleList(
      (0): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (flatten): Flatten(start_dim=1, end_dim=-1)
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
        (fc_relu1): ReLU()
      )
      (1): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (flatten): Flatten(start_dim=1, end_dim=-1)
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
        (fc_relu1): ReLU()
      )
      (2): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (flatten): Flatten(start_dim=1, end_dim=-1)
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
        (fc_relu1): ReLU()
      )
    )
    (box_predictor): ModuleList(
      (0): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=4, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (1): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=4, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (2): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=4, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (mask_fcn5): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (mask_fcn6): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (mask_fcn7): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (mask_fcn8): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[12/16 10:58:43 d2.engine.defaults]: [0mModel:
GeneralizedRCNN(
  (backbone): FPN(
    (fpn_lateral2): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral3): Conv2d(512, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral4): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (fpn_lateral5): Conv2d(2048, 256, kernel_size=(1, 1), stride=(1, 1))
    (fpn_output5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (top_block): LastLevelMaxPool()
    (bottom_up): ResNet(
      (stem): BasicStem(
        (conv1): Conv2d(
          3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False
          (norm): FrozenBatchNorm2d(num_features=64, eps=1e-05)
        )
      )
      (res2): Sequential(
        (0): BottleneckBlock(
          (shortcut): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv1): Conv2d(
            64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (1): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
        (2): BottleneckBlock(
          (conv1): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv2): Conv2d(
            256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
          (conv3): Conv2d(
            256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=256, eps=1e-05)
          )
        )
      )
      (res3): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv1): Conv2d(
            256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv2_offset): Conv2d(512, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=512, out_channels=512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
          (conv3): Conv2d(
            512, 512, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=512, eps=1e-05)
          )
        )
      )
      (res4): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv1): Conv2d(
            512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (3): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (4): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (5): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (6): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (7): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (8): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (9): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (10): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (11): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (12): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (13): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (14): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (15): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (16): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (17): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (18): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (19): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (20): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (21): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (22): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (23): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (24): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (25): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (26): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (27): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (28): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (29): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (30): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (31): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (32): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (33): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (34): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
        (35): DeformBottleneckBlock(
          (conv1): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv2_offset): Conv2d(1024, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=1024, out_channels=1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
          (conv3): Conv2d(
            1024, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=1024, eps=1e-05)
          )
        )
      )
      (res5): Sequential(
        (0): DeformBottleneckBlock(
          (shortcut): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(2, 2), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv1): Conv2d(
            1024, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2_offset): Conv2d(2048, 18, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=2048, out_channels=2048, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (1): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2_offset): Conv2d(2048, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=2048, out_channels=2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
        (2): DeformBottleneckBlock(
          (conv1): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv2_offset): Conv2d(2048, 18, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (conv2): DeformConv(
            in_channels=2048, out_channels=2048, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), groups=32, deformable_groups=1, bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
          (conv3): Conv2d(
            2048, 2048, kernel_size=(1, 1), stride=(1, 1), bias=False
            (norm): FrozenBatchNorm2d(num_features=2048, eps=1e-05)
          )
        )
      )
    )
  )
  (proposal_generator): RPN(
    (rpn_head): StandardRPNHead(
      (conv): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1)
        (activation): ReLU()
      )
      (objectness_logits): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
      (anchor_deltas): Conv2d(256, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (anchor_generator): DefaultAnchorGenerator(
      (cell_anchors): BufferList()
    )
  )
  (roi_heads): CascadeROIHeads(
    (box_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(7, 7), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(7, 7), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(7, 7), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(7, 7), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (box_head): ModuleList(
      (0): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (flatten): Flatten(start_dim=1, end_dim=-1)
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
        (fc_relu1): ReLU()
      )
      (1): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (flatten): Flatten(start_dim=1, end_dim=-1)
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
        (fc_relu1): ReLU()
      )
      (2): FastRCNNConvFCHead(
        (conv1): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv2): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv3): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (conv4): Conv2d(
          256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
          (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
          (activation): ReLU()
        )
        (flatten): Flatten(start_dim=1, end_dim=-1)
        (fc1): Linear(in_features=12544, out_features=1024, bias=True)
        (fc_relu1): ReLU()
      )
    )
    (box_predictor): ModuleList(
      (0): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=4, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (1): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=4, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
      (2): FastRCNNOutputLayers(
        (cls_score): Linear(in_features=1024, out_features=4, bias=True)
        (bbox_pred): Linear(in_features=1024, out_features=4, bias=True)
      )
    )
    (mask_pooler): ROIPooler(
      (level_poolers): ModuleList(
        (0): ROIAlign(output_size=(14, 14), spatial_scale=0.25, sampling_ratio=0, aligned=True)
        (1): ROIAlign(output_size=(14, 14), spatial_scale=0.125, sampling_ratio=0, aligned=True)
        (2): ROIAlign(output_size=(14, 14), spatial_scale=0.0625, sampling_ratio=0, aligned=True)
        (3): ROIAlign(output_size=(14, 14), spatial_scale=0.03125, sampling_ratio=0, aligned=True)
      )
    )
    (mask_head): MaskRCNNConvUpsampleHead(
      (mask_fcn1): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (mask_fcn2): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (mask_fcn3): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (mask_fcn4): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (mask_fcn5): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (mask_fcn6): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (mask_fcn7): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (mask_fcn8): Conv2d(
        256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False
        (norm): GroupNorm(32, 256, eps=1e-05, affine=True)
        (activation): ReLU()
      )
      (deconv): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2))
      (deconv_relu): ReLU()
      (predictor): Conv2d(256, 3, kernel_size=(1, 1), stride=(1, 1))
    )
  )
)
[32m[12/16 10:58:44 d2.data.datasets.coco]: [0mLoaded 485 images in COCO format from ../cell_data/annotations_train.json
[32m[12/16 10:58:44 d2.data.datasets.coco]: [0mLoaded 485 images in COCO format from ../cell_data/annotations_train.json
[32m[12/16 10:58:45 d2.data.build]: [0mRemoved 0 images with no usable annotations. 485 images left.
[32m[12/16 10:58:45 d2.data.build]: [0mRemoved 0 images with no usable annotations. 485 images left.
[32m[12/16 10:58:45 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|   shsy5y   | 41615        |   astro    | 8122         |    cort    | 8492         |
|            |              |            |              |            |              |
|   total    | 58229        |            |              |            |              |[0m
[32m[12/16 10:58:45 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [RandomCrop(crop_type='relative_range', crop_size=[0.9, 0.9]), ResizeShortestEdge(short_edge_length=(780, 910, 1040), max_size=1440, sample_style='choice'), RandomFlip()]
[32m[12/16 10:58:45 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[12/16 10:58:45 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|   shsy5y   | 41615        |   astro    | 8122         |    cort    | 8492         |
|            |              |            |              |            |              |
|   total    | 58229        |            |              |            |              |[0m
[32m[12/16 10:58:45 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in training: [RandomCrop(crop_type='relative_range', crop_size=[0.9, 0.9]), ResizeShortestEdge(short_edge_length=(780, 910, 1040), max_size=1440, sample_style='choice'), RandomFlip()]
[32m[12/16 10:58:45 d2.data.build]: [0mUsing training sampler TrainingSampler
[32m[12/16 10:58:45 d2.data.common]: [0mSerializing 485 elements to byte tensors and concatenating them all ...
[32m[12/16 10:58:45 d2.data.common]: [0mSerializing 485 elements to byte tensors and concatenating them all ...
[32m[12/16 10:58:45 d2.data.common]: [0mSerialized dataset takes 6.75 MiB
[32m[12/16 10:58:45 d2.data.common]: [0mSerialized dataset takes 6.75 MiB
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.0.cls_score.weight' to the model due to incompatible shapes: (9, 1024) in the checkpoint but (4, 1024) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.0.cls_score.bias' to the model due to incompatible shapes: (9,) in the checkpoint but (4,) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.1.cls_score.weight' to the model due to incompatible shapes: (9, 1024) in the checkpoint but (4, 1024) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.1.cls_score.bias' to the model due to incompatible shapes: (9,) in the checkpoint but (4,) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.2.cls_score.weight' to the model due to incompatible shapes: (9, 1024) in the checkpoint but (4, 1024) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.2.cls_score.bias' to the model due to incompatible shapes: (9,) in the checkpoint but (4,) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.mask_head.predictor.weight' to the model due to incompatible shapes: (8, 256, 1, 1) in the checkpoint but (3, 256, 1, 1) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.mask_head.predictor.bias' to the model due to incompatible shapes: (8,) in the checkpoint but (3,) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Some model parameters or buffers are not found in the checkpoint:
[34mroi_heads.box_predictor.0.cls_score.{bias, weight}[0m
[34mroi_heads.box_predictor.1.cls_score.{bias, weight}[0m
[34mroi_heads.box_predictor.2.cls_score.{bias, weight}[0m
[34mroi_heads.mask_head.predictor.{bias, weight}[0m
[32m[12/16 10:58:46 d2.engine.train_loop]: [0mStarting training from iteration 0
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.0.cls_score.weight' to the model due to incompatible shapes: (9, 1024) in the checkpoint but (4, 1024) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.0.cls_score.bias' to the model due to incompatible shapes: (9,) in the checkpoint but (4,) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.1.cls_score.weight' to the model due to incompatible shapes: (9, 1024) in the checkpoint but (4, 1024) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.1.cls_score.bias' to the model due to incompatible shapes: (9,) in the checkpoint but (4,) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.2.cls_score.weight' to the model due to incompatible shapes: (9, 1024) in the checkpoint but (4, 1024) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.box_predictor.2.cls_score.bias' to the model due to incompatible shapes: (9,) in the checkpoint but (4,) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.mask_head.predictor.weight' to the model due to incompatible shapes: (8, 256, 1, 1) in the checkpoint but (3, 256, 1, 1) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Skip loading parameter 'roi_heads.mask_head.predictor.bias' to the model due to incompatible shapes: (8,) in the checkpoint but (3,) in the model! You might want to double check if this is expected.
WARNING:fvcore.common.checkpoint:Some model parameters or buffers are not found in the checkpoint:
[34mroi_heads.box_predictor.0.cls_score.{bias, weight}[0m
[34mroi_heads.box_predictor.1.cls_score.{bias, weight}[0m
[34mroi_heads.box_predictor.2.cls_score.{bias, weight}[0m
[34mroi_heads.mask_head.predictor.{bias, weight}[0m
[32m[12/16 10:58:46 d2.engine.train_loop]: [0mStarting training from iteration 0
[32m[12/16 10:59:18 d2.utils.events]: [0m eta: 3:38:51  iter: 19  total_loss: 6.993  loss_cls_stage0: 1.331  loss_box_reg_stage0: 0.4105  loss_cls_stage1: 1.426  loss_box_reg_stage1: 0.559  loss_cls_stage2: 1.423  loss_box_reg_stage2: 0.4475  loss_mask: 0.6906  loss_rpn_cls: 0.2392  loss_rpn_loc: 0.3099  time: 1.2856  data_time: 0.2677  lr: 1.9981e-05  max_mem: 9205M
[32m[12/16 10:59:49 d2.utils.events]: [0m eta: 3:54:31  iter: 39  total_loss: 6.115  loss_cls_stage0: 1.092  loss_box_reg_stage0: 0.4173  loss_cls_stage1: 1.09  loss_box_reg_stage1: 0.6266  loss_cls_stage2: 1.088  loss_box_reg_stage2: 0.608  loss_mask: 0.6676  loss_rpn_cls: 0.2134  loss_rpn_loc: 0.3254  time: 1.4223  data_time: 0.1708  lr: 3.9961e-05  max_mem: 11151M
[32m[12/16 11:00:19 d2.utils.events]: [0m eta: 3:50:14  iter: 59  total_loss: 5.085  loss_cls_stage0: 0.8376  loss_box_reg_stage0: 0.4374  loss_cls_stage1: 0.7784  loss_box_reg_stage1: 0.6025  loss_cls_stage2: 0.7206  loss_box_reg_stage2: 0.5812  loss_mask: 0.614  loss_rpn_cls: 0.2124  loss_rpn_loc: 0.2605  time: 1.4590  data_time: 0.2185  lr: 5.9941e-05  max_mem: 12806M
[32m[12/16 11:00:52 d2.utils.events]: [0m eta: 3:56:23  iter: 79  total_loss: 4.613  loss_cls_stage0: 0.7615  loss_box_reg_stage0: 0.4645  loss_cls_stage1: 0.6622  loss_box_reg_stage1: 0.5976  loss_cls_stage2: 0.5963  loss_box_reg_stage2: 0.5626  loss_mask: 0.5508  loss_rpn_cls: 0.1994  loss_rpn_loc: 0.2495  time: 1.4999  data_time: 0.2717  lr: 7.9921e-05  max_mem: 12806M
[32m[12/16 11:01:19 d2.utils.events]: [0m eta: 3:53:25  iter: 99  total_loss: 4.723  loss_cls_stage0: 0.717  loss_box_reg_stage0: 0.5104  loss_cls_stage1: 0.632  loss_box_reg_stage1: 0.7118  loss_cls_stage2: 0.5734  loss_box_reg_stage2: 0.6181  loss_mask: 0.4846  loss_rpn_cls: 0.164  loss_rpn_loc: 0.253  time: 1.4700  data_time: 0.0533  lr: 9.9901e-05  max_mem: 12806M
[32m[12/16 11:01:55 d2.utils.events]: [0m eta: 3:57:52  iter: 119  total_loss: 4.584  loss_cls_stage0: 0.6647  loss_box_reg_stage0: 0.5196  loss_cls_stage1: 0.6005  loss_box_reg_stage1: 0.7139  loss_cls_stage2: 0.5318  loss_box_reg_stage2: 0.6707  loss_mask: 0.4423  loss_rpn_cls: 0.1666  loss_rpn_loc: 0.274  time: 1.5280  data_time: 0.3790  lr: 0.00011988  max_mem: 12806M
[32m[12/16 11:02:25 d2.utils.events]: [0m eta: 3:58:37  iter: 139  total_loss: 4.528  loss_cls_stage0: 0.6233  loss_box_reg_stage0: 0.5169  loss_cls_stage1: 0.5631  loss_box_reg_stage1: 0.8253  loss_cls_stage2: 0.4983  loss_box_reg_stage2: 0.7483  loss_mask: 0.3981  loss_rpn_cls: 0.1498  loss_rpn_loc: 0.2408  time: 1.5281  data_time: 0.1318  lr: 0.00013986  max_mem: 12806M
[32m[12/16 11:02:56 d2.utils.events]: [0m eta: 3:59:22  iter: 159  total_loss: 4.567  loss_cls_stage0: 0.5731  loss_box_reg_stage0: 0.518  loss_cls_stage1: 0.5581  loss_box_reg_stage1: 0.8783  loss_cls_stage2: 0.5003  loss_box_reg_stage2: 0.7729  loss_mask: 0.3649  loss_rpn_cls: 0.1357  loss_rpn_loc: 0.2506  time: 1.5298  data_time: 0.0619  lr: 0.00015984  max_mem: 12806M
[32m[12/16 11:03:26 d2.utils.events]: [0m eta: 3:59:15  iter: 179  total_loss: 4.481  loss_cls_stage0: 0.5552  loss_box_reg_stage0: 0.5184  loss_cls_stage1: 0.5261  loss_box_reg_stage1: 0.8662  loss_cls_stage2: 0.477  loss_box_reg_stage2: 0.7883  loss_mask: 0.3514  loss_rpn_cls: 0.1384  loss_rpn_loc: 0.2108  time: 1.5271  data_time: 0.1073  lr: 0.00017982  max_mem: 12806M
[32m[12/16 11:03:57 d2.utils.events]: [0m eta: 3:59:56  iter: 199  total_loss: 4.278  loss_cls_stage0: 0.4326  loss_box_reg_stage0: 0.5248  loss_cls_stage1: 0.4288  loss_box_reg_stage1: 0.9291  loss_cls_stage2: 0.3963  loss_box_reg_stage2: 0.8913  loss_mask: 0.323  loss_rpn_cls: 0.1028  loss_rpn_loc: 0.2322  time: 1.5279  data_time: 0.0399  lr: 0.0001998  max_mem: 12806M
[32m[12/16 11:04:31 d2.utils.events]: [0m eta: 3:59:36  iter: 219  total_loss: 4.263  loss_cls_stage0: 0.469  loss_box_reg_stage0: 0.5223  loss_cls_stage1: 0.4763  loss_box_reg_stage1: 0.9052  loss_cls_stage2: 0.4408  loss_box_reg_stage2: 0.8654  loss_mask: 0.3274  loss_rpn_cls: 0.1358  loss_rpn_loc: 0.2448  time: 1.5435  data_time: 0.2460  lr: 0.00021978  max_mem: 12806M
[32m[12/16 11:05:03 d2.utils.events]: [0m eta: 3:59:38  iter: 239  total_loss: 4.247  loss_cls_stage0: 0.3867  loss_box_reg_stage0: 0.5193  loss_cls_stage1: 0.4184  loss_box_reg_stage1: 0.8858  loss_cls_stage2: 0.4204  loss_box_reg_stage2: 0.8804  loss_mask: 0.3288  loss_rpn_cls: 0.1207  loss_rpn_loc: 0.2419  time: 1.5460  data_time: 0.1376  lr: 0.00023976  max_mem: 12806M
[5m[31mWARNING[0m [32m[12/16 11:05:05 d2.engine.hooks]: [0mGiven val metric MaP IoU does not seem to be computed/stored.Will not be checkpointing based on it.
[32m[12/16 11:05:05 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:05:05 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|   shsy5y   | 10671        |   astro    | 2400         |    cort    | 2285         |
|            |              |            |              |            |              |
|   total    | 15356        |            |              |            |              |[0m
[32m[12/16 11:05:05 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:05:05 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:05:05 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:05:06 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:05:06 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 11:05:08 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:05:08 d2.data.build]: [0mDistribution of instances among all 3 categories:
[36m|  category  | #instances   |  category  | #instances   |  category  | #instances   |
|:----------:|:-------------|:----------:|:-------------|:----------:|:-------------|
|   shsy5y   | 10671        |   astro    | 2400         |    cort    | 2285         |
|            |              |            |              |            |              |
|   total    | 15356        |            |              |            |              |[0m
[32m[12/16 11:05:08 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:05:08 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:05:08 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:05:08 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:05:08 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 11:05:14 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4608 s/iter. Eval: 0.0233 s/iter. Total: 0.4854 s/iter. ETA=0:00:23
[32m[12/16 11:05:15 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0014 s/iter. Inference: 0.3546 s/iter. Eval: 0.0174 s/iter. Total: 0.3734 s/iter. ETA=0:00:18
[32m[12/16 11:05:19 d2.evaluation.evaluator]: [0mInference done 23/60. Dataloading: 0.0015 s/iter. Inference: 0.4527 s/iter. Eval: 0.0115 s/iter. Total: 0.4657 s/iter. ETA=0:00:17
[32m[12/16 11:05:20 d2.evaluation.evaluator]: [0mInference done 24/61. Dataloading: 0.0015 s/iter. Inference: 0.3687 s/iter. Eval: 0.0112 s/iter. Total: 0.3814 s/iter. ETA=0:00:14
[32m[12/16 11:05:24 d2.evaluation.evaluator]: [0mInference done 35/60. Dataloading: 0.0015 s/iter. Inference: 0.4475 s/iter. Eval: 0.0110 s/iter. Total: 0.4601 s/iter. ETA=0:00:11
[32m[12/16 11:05:25 d2.evaluation.evaluator]: [0mInference done 37/61. Dataloading: 0.0015 s/iter. Inference: 0.3734 s/iter. Eval: 0.0125 s/iter. Total: 0.3874 s/iter. ETA=0:00:09
[32m[12/16 11:05:30 d2.evaluation.evaluator]: [0mInference done 47/60. Dataloading: 0.0015 s/iter. Inference: 0.4436 s/iter. Eval: 0.0115 s/iter. Total: 0.4566 s/iter. ETA=0:00:05
[32m[12/16 11:05:30 d2.evaluation.evaluator]: [0mInference done 50/61. Dataloading: 0.0015 s/iter. Inference: 0.3731 s/iter. Eval: 0.0141 s/iter. Total: 0.3887 s/iter. ETA=0:00:04
[32m[12/16 11:05:35 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:22.060391 (0.393936 s / iter per device, on 2 devices)
[32m[12/16 11:05:35 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:20 (0.373514 s / iter per device, on 2 devices)
[32m[12/16 11:05:35 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 11:05:35 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.1900234796686087
[32m[12/16 11:05:35 d2.evaluation.evaluator]: [0mInference done 58/60. Dataloading: 0.0015 s/iter. Inference: 0.4432 s/iter. Eval: 0.0118 s/iter. Total: 0.4565 s/iter. ETA=0:00:00
[32m[12/16 11:05:36 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:25.278357 (0.459606 s / iter per device, on 2 devices)
[32m[12/16 11:05:36 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:24 (0.443168 s / iter per device, on 2 devices)
[32m[12/16 11:05:37 d2.engine.hooks]: [0mSaved first model at 0.19002 @ 241 steps
[32m[12/16 11:06:04 d2.utils.events]: [0m eta: 3:59:08  iter: 259  total_loss: 3.955  loss_cls_stage0: 0.3543  loss_box_reg_stage0: 0.5278  loss_cls_stage1: 0.3687  loss_box_reg_stage1: 0.8662  loss_cls_stage2: 0.3614  loss_box_reg_stage2: 0.8518  loss_mask: 0.3297  loss_rpn_cls: 0.1293  loss_rpn_loc: 0.2628  time: 1.5391  data_time: 0.0749  lr: 0.00025974  max_mem: 12806M
[32m[12/16 11:06:34 d2.utils.events]: [0m eta: 3:59:27  iter: 279  total_loss: 4.127  loss_cls_stage0: 0.3667  loss_box_reg_stage0: 0.5378  loss_cls_stage1: 0.3397  loss_box_reg_stage1: 0.9268  loss_cls_stage2: 0.3429  loss_box_reg_stage2: 0.9415  loss_mask: 0.3177  loss_rpn_cls: 0.08739  loss_rpn_loc: 0.1945  time: 1.5367  data_time: 0.0245  lr: 0.00027972  max_mem: 12806M
[32m[12/16 11:07:04 d2.utils.events]: [0m eta: 3:58:57  iter: 299  total_loss: 3.941  loss_cls_stage0: 0.3231  loss_box_reg_stage0: 0.5129  loss_cls_stage1: 0.3453  loss_box_reg_stage1: 0.8844  loss_cls_stage2: 0.3245  loss_box_reg_stage2: 0.9262  loss_mask: 0.2918  loss_rpn_cls: 0.1025  loss_rpn_loc: 0.2372  time: 1.5346  data_time: 0.1410  lr: 0.0002997  max_mem: 12806M
[32m[12/16 11:07:39 d2.utils.events]: [0m eta: 3:58:47  iter: 319  total_loss: 3.932  loss_cls_stage0: 0.2933  loss_box_reg_stage0: 0.5157  loss_cls_stage1: 0.3126  loss_box_reg_stage1: 0.9092  loss_cls_stage2: 0.3262  loss_box_reg_stage2: 0.9922  loss_mask: 0.2969  loss_rpn_cls: 0.08534  loss_rpn_loc: 0.2097  time: 1.5489  data_time: 0.3243  lr: 0.00031968  max_mem: 14090M
[32m[12/16 11:08:14 d2.utils.events]: [0m eta: 3:59:07  iter: 339  total_loss: 4.18  loss_cls_stage0: 0.3734  loss_box_reg_stage0: 0.5603  loss_cls_stage1: 0.3985  loss_box_reg_stage1: 0.9343  loss_cls_stage2: 0.3914  loss_box_reg_stage2: 0.8095  loss_mask: 0.3225  loss_rpn_cls: 0.1323  loss_rpn_loc: 0.2421  time: 1.5593  data_time: 0.2784  lr: 0.00033966  max_mem: 14090M
[32m[12/16 11:08:44 d2.utils.events]: [0m eta: 3:58:37  iter: 359  total_loss: 3.818  loss_cls_stage0: 0.3097  loss_box_reg_stage0: 0.522  loss_cls_stage1: 0.3124  loss_box_reg_stage1: 0.9238  loss_cls_stage2: 0.3243  loss_box_reg_stage2: 0.8979  loss_mask: 0.2982  loss_rpn_cls: 0.1246  loss_rpn_loc: 0.2336  time: 1.5555  data_time: 0.0453  lr: 0.00035964  max_mem: 14090M
[32m[12/16 11:09:18 d2.utils.events]: [0m eta: 3:58:40  iter: 379  total_loss: 4.057  loss_cls_stage0: 0.2957  loss_box_reg_stage0: 0.5479  loss_cls_stage1: 0.3231  loss_box_reg_stage1: 0.9522  loss_cls_stage2: 0.328  loss_box_reg_stage2: 0.9273  loss_mask: 0.3144  loss_rpn_cls: 0.09317  loss_rpn_loc: 0.2037  time: 1.5641  data_time: 0.2172  lr: 0.00037962  max_mem: 14090M
[32m[12/16 11:09:51 d2.utils.events]: [0m eta: 3:58:20  iter: 399  total_loss: 3.828  loss_cls_stage0: 0.2914  loss_box_reg_stage0: 0.5023  loss_cls_stage1: 0.3112  loss_box_reg_stage1: 0.8748  loss_cls_stage2: 0.317  loss_box_reg_stage2: 0.7946  loss_mask: 0.3111  loss_rpn_cls: 0.1158  loss_rpn_loc: 0.2387  time: 1.5681  data_time: 0.1494  lr: 0.0003996  max_mem: 14090M
[32m[12/16 11:10:28 d2.utils.events]: [0m eta: 3:58:37  iter: 419  total_loss: 4.106  loss_cls_stage0: 0.3252  loss_box_reg_stage0: 0.5445  loss_cls_stage1: 0.3339  loss_box_reg_stage1: 0.913  loss_cls_stage2: 0.3355  loss_box_reg_stage2: 0.924  loss_mask: 0.3054  loss_rpn_cls: 0.0959  loss_rpn_loc: 0.2801  time: 1.5820  data_time: 0.3646  lr: 0.00041958  max_mem: 14090M
[32m[12/16 11:10:59 d2.utils.events]: [0m eta: 3:58:03  iter: 439  total_loss: 3.898  loss_cls_stage0: 0.3345  loss_box_reg_stage0: 0.509  loss_cls_stage1: 0.3464  loss_box_reg_stage1: 0.9458  loss_cls_stage2: 0.3385  loss_box_reg_stage2: 0.9203  loss_mask: 0.2835  loss_rpn_cls: 0.08816  loss_rpn_loc: 0.2516  time: 1.5802  data_time: 0.0746  lr: 0.00043956  max_mem: 14090M
[32m[12/16 11:11:35 d2.utils.events]: [0m eta: 3:59:13  iter: 459  total_loss: 4.006  loss_cls_stage0: 0.325  loss_box_reg_stage0: 0.4979  loss_cls_stage1: 0.3369  loss_box_reg_stage1: 0.8917  loss_cls_stage2: 0.346  loss_box_reg_stage2: 0.8751  loss_mask: 0.2975  loss_rpn_cls: 0.1001  loss_rpn_loc: 0.2365  time: 1.5895  data_time: 0.2187  lr: 0.00045954  max_mem: 14090M
[32m[12/16 11:12:08 d2.utils.events]: [0m eta: 3:59:51  iter: 479  total_loss: 3.859  loss_cls_stage0: 0.2715  loss_box_reg_stage0: 0.5309  loss_cls_stage1: 0.2862  loss_box_reg_stage1: 0.925  loss_cls_stage2: 0.2903  loss_box_reg_stage2: 0.9003  loss_mask: 0.2998  loss_rpn_cls: 0.09966  loss_rpn_loc: 0.246  time: 1.5929  data_time: 0.1116  lr: 0.00047952  max_mem: 14090M
[32m[12/16 11:12:15 d2.engine.hooks]: [0mSaved first model at 0.14161 @ 241 steps
[32m[12/16 11:12:15 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:12:15 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:12:15 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:12:15 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:12:15 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:12:16 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 11:12:17 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:12:17 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:12:17 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:12:17 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:12:17 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:12:17 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 11:12:23 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4844 s/iter. Eval: 0.0333 s/iter. Total: 0.5190 s/iter. ETA=0:00:25
[32m[12/16 11:12:25 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.3599 s/iter. Eval: 0.0196 s/iter. Total: 0.3808 s/iter. ETA=0:00:19
[32m[12/16 11:12:29 d2.evaluation.evaluator]: [0mInference done 21/60. Dataloading: 0.0014 s/iter. Inference: 0.4712 s/iter. Eval: 0.0460 s/iter. Total: 0.5187 s/iter. ETA=0:00:20
[32m[12/16 11:12:30 d2.evaluation.evaluator]: [0mInference done 24/61. Dataloading: 0.0014 s/iter. Inference: 0.3733 s/iter. Eval: 0.0311 s/iter. Total: 0.4059 s/iter. ETA=0:00:15
[32m[12/16 11:12:34 d2.evaluation.evaluator]: [0mInference done 32/60. Dataloading: 0.0015 s/iter. Inference: 0.4636 s/iter. Eval: 0.0412 s/iter. Total: 0.5064 s/iter. ETA=0:00:14
[32m[12/16 11:12:35 d2.evaluation.evaluator]: [0mInference done 36/61. Dataloading: 0.0015 s/iter. Inference: 0.3798 s/iter. Eval: 0.0308 s/iter. Total: 0.4121 s/iter. ETA=0:00:10
[32m[12/16 11:12:39 d2.evaluation.evaluator]: [0mInference done 43/60. Dataloading: 0.0015 s/iter. Inference: 0.4550 s/iter. Eval: 0.0383 s/iter. Total: 0.4949 s/iter. ETA=0:00:08
[32m[12/16 11:12:40 d2.evaluation.evaluator]: [0mInference done 49/61. Dataloading: 0.0015 s/iter. Inference: 0.3782 s/iter. Eval: 0.0322 s/iter. Total: 0.4119 s/iter. ETA=0:00:04
[32m[12/16 11:12:44 d2.evaluation.evaluator]: [0mInference done 54/60. Dataloading: 0.0015 s/iter. Inference: 0.4532 s/iter. Eval: 0.0364 s/iter. Total: 0.4912 s/iter. ETA=0:00:02
[32m[12/16 11:12:45 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:23.190606 (0.414118 s / iter per device, on 2 devices)
[32m[12/16 11:12:45 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.377296 s / iter per device, on 2 devices)
[32m[12/16 11:12:45 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 11:12:45 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.26736511319262396
[32m[12/16 11:12:48 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.735687 (0.504285 s / iter per device, on 2 devices)
[32m[12/16 11:12:48 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.463498 s / iter per device, on 2 devices)
[32m[12/16 11:12:50 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.26737, better than last best score 0.19002 @ iteration 241.
[32m[12/16 11:13:15 d2.utils.events]: [0m eta: 4:00:01  iter: 499  total_loss: 3.999  loss_cls_stage0: 0.3343  loss_box_reg_stage0: 0.5315  loss_cls_stage1: 0.3304  loss_box_reg_stage1: 0.9482  loss_cls_stage2: 0.3402  loss_box_reg_stage2: 0.9267  loss_mask: 0.2967  loss_rpn_cls: 0.1067  loss_rpn_loc: 0.2257  time: 1.5912  data_time: 0.0544  lr: 0.0004995  max_mem: 14090M
[32m[12/16 11:13:45 d2.utils.events]: [0m eta: 3:59:43  iter: 519  total_loss: 3.91  loss_cls_stage0: 0.2853  loss_box_reg_stage0: 0.5165  loss_cls_stage1: 0.3005  loss_box_reg_stage1: 0.9535  loss_cls_stage2: 0.3064  loss_box_reg_stage2: 0.9285  loss_mask: 0.3011  loss_rpn_cls: 0.09915  loss_rpn_loc: 0.2216  time: 1.5889  data_time: 0.0666  lr: 0.00051948  max_mem: 14090M
[32m[12/16 11:14:16 d2.utils.events]: [0m eta: 3:59:21  iter: 539  total_loss: 4.035  loss_cls_stage0: 0.309  loss_box_reg_stage0: 0.5484  loss_cls_stage1: 0.3232  loss_box_reg_stage1: 0.9741  loss_cls_stage2: 0.3251  loss_box_reg_stage2: 1.026  loss_mask: 0.287  loss_rpn_cls: 0.08944  loss_rpn_loc: 0.2102  time: 1.5874  data_time: 0.0193  lr: 0.00053946  max_mem: 14090M
[32m[12/16 11:14:48 d2.utils.events]: [0m eta: 3:58:56  iter: 559  total_loss: 3.866  loss_cls_stage0: 0.2397  loss_box_reg_stage0: 0.5153  loss_cls_stage1: 0.2739  loss_box_reg_stage1: 0.9061  loss_cls_stage2: 0.2957  loss_box_reg_stage2: 0.9359  loss_mask: 0.2827  loss_rpn_cls: 0.09191  loss_rpn_loc: 0.2042  time: 1.5870  data_time: 0.1290  lr: 0.00055944  max_mem: 14090M
[32m[12/16 11:15:22 d2.utils.events]: [0m eta: 3:58:25  iter: 579  total_loss: 3.803  loss_cls_stage0: 0.3121  loss_box_reg_stage0: 0.5154  loss_cls_stage1: 0.3286  loss_box_reg_stage1: 0.8426  loss_cls_stage2: 0.3317  loss_box_reg_stage2: 0.7962  loss_mask: 0.2977  loss_rpn_cls: 0.1054  loss_rpn_loc: 0.2491  time: 1.5904  data_time: 0.2039  lr: 0.00057942  max_mem: 14090M
[32m[12/16 11:15:58 d2.utils.events]: [0m eta: 3:57:59  iter: 599  total_loss: 3.827  loss_cls_stage0: 0.2593  loss_box_reg_stage0: 0.5048  loss_cls_stage1: 0.2793  loss_box_reg_stage1: 0.8899  loss_cls_stage2: 0.2863  loss_box_reg_stage2: 0.9454  loss_mask: 0.2981  loss_rpn_cls: 0.09284  loss_rpn_loc: 0.2238  time: 1.5974  data_time: 0.2838  lr: 0.0005994  max_mem: 14090M
[32m[12/16 11:16:29 d2.utils.events]: [0m eta: 3:57:33  iter: 619  total_loss: 4.011  loss_cls_stage0: 0.3108  loss_box_reg_stage0: 0.5548  loss_cls_stage1: 0.3216  loss_box_reg_stage1: 0.9478  loss_cls_stage2: 0.3233  loss_box_reg_stage2: 0.9081  loss_mask: 0.2937  loss_rpn_cls: 0.1038  loss_rpn_loc: 0.2228  time: 1.5971  data_time: 0.1056  lr: 0.00061938  max_mem: 14090M
[32m[12/16 11:17:06 d2.utils.events]: [0m eta: 3:57:09  iter: 639  total_loss: 3.999  loss_cls_stage0: 0.277  loss_box_reg_stage0: 0.5338  loss_cls_stage1: 0.3048  loss_box_reg_stage1: 0.9239  loss_cls_stage2: 0.3102  loss_box_reg_stage2: 0.9339  loss_mask: 0.2993  loss_rpn_cls: 0.1046  loss_rpn_loc: 0.2521  time: 1.6044  data_time: 0.3456  lr: 0.00063936  max_mem: 14090M
[32m[12/16 11:17:38 d2.utils.events]: [0m eta: 3:56:47  iter: 659  total_loss: 3.931  loss_cls_stage0: 0.3088  loss_box_reg_stage0: 0.5045  loss_cls_stage1: 0.3122  loss_box_reg_stage1: 0.908  loss_cls_stage2: 0.326  loss_box_reg_stage2: 0.9241  loss_mask: 0.2791  loss_rpn_cls: 0.1149  loss_rpn_loc: 0.2212  time: 1.6042  data_time: 0.0380  lr: 0.00065934  max_mem: 14090M
[32m[12/16 11:18:14 d2.utils.events]: [0m eta: 3:56:48  iter: 679  total_loss: 4.048  loss_cls_stage0: 0.3188  loss_box_reg_stage0: 0.5461  loss_cls_stage1: 0.3205  loss_box_reg_stage1: 1.005  loss_cls_stage2: 0.3089  loss_box_reg_stage2: 1.007  loss_mask: 0.285  loss_rpn_cls: 0.1004  loss_rpn_loc: 0.2089  time: 1.6102  data_time: 0.2301  lr: 0.00067932  max_mem: 14854M
[32m[12/16 11:18:44 d2.utils.events]: [0m eta: 3:56:23  iter: 699  total_loss: 4.066  loss_cls_stage0: 0.2927  loss_box_reg_stage0: 0.539  loss_cls_stage1: 0.3141  loss_box_reg_stage1: 0.974  loss_cls_stage2: 0.3323  loss_box_reg_stage2: 0.9342  loss_mask: 0.3251  loss_rpn_cls: 0.1064  loss_rpn_loc: 0.2472  time: 1.6069  data_time: 0.0368  lr: 0.0006993  max_mem: 14854M
[32m[12/16 11:19:18 d2.utils.events]: [0m eta: 3:56:02  iter: 719  total_loss: 4.066  loss_cls_stage0: 0.2949  loss_box_reg_stage0: 0.5189  loss_cls_stage1: 0.3149  loss_box_reg_stage1: 0.9605  loss_cls_stage2: 0.3215  loss_box_reg_stage2: 0.9025  loss_mask: 0.2954  loss_rpn_cls: 0.1206  loss_rpn_loc: 0.2463  time: 1.6098  data_time: 0.1876  lr: 0.00071928  max_mem: 14854M
[32m[12/16 11:19:27 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.21267, better than last best score 0.14161 @ iteration 241.
[32m[12/16 11:19:28 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:19:28 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:19:28 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:19:28 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:19:28 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:19:28 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 11:19:30 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:19:30 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:19:30 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:19:30 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:19:30 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:19:30 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 11:19:36 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0012 s/iter. Inference: 0.5042 s/iter. Eval: 0.0360 s/iter. Total: 0.5414 s/iter. ETA=0:00:26
[32m[12/16 11:19:37 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.3627 s/iter. Eval: 0.0254 s/iter. Total: 0.3894 s/iter. ETA=0:00:19
[32m[12/16 11:19:42 d2.evaluation.evaluator]: [0mInference done 22/60. Dataloading: 0.0015 s/iter. Inference: 0.4666 s/iter. Eval: 0.0429 s/iter. Total: 0.5111 s/iter. ETA=0:00:19
[32m[12/16 11:19:43 d2.evaluation.evaluator]: [0mInference done 24/61. Dataloading: 0.0015 s/iter. Inference: 0.3747 s/iter. Eval: 0.0334 s/iter. Total: 0.4096 s/iter. ETA=0:00:15
[32m[12/16 11:19:47 d2.evaluation.evaluator]: [0mInference done 33/60. Dataloading: 0.0015 s/iter. Inference: 0.4620 s/iter. Eval: 0.0410 s/iter. Total: 0.5046 s/iter. ETA=0:00:13
[32m[12/16 11:19:48 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3899 s/iter. Eval: 0.0360 s/iter. Total: 0.4274 s/iter. ETA=0:00:11
[32m[12/16 11:19:53 d2.evaluation.evaluator]: [0mInference done 45/60. Dataloading: 0.0015 s/iter. Inference: 0.4475 s/iter. Eval: 0.0399 s/iter. Total: 0.4890 s/iter. ETA=0:00:07
[32m[12/16 11:19:53 d2.evaluation.evaluator]: [0mInference done 48/61. Dataloading: 0.0015 s/iter. Inference: 0.3848 s/iter. Eval: 0.0361 s/iter. Total: 0.4225 s/iter. ETA=0:00:05
[32m[12/16 11:19:58 d2.evaluation.evaluator]: [0mInference done 55/60. Dataloading: 0.0015 s/iter. Inference: 0.4535 s/iter. Eval: 0.0376 s/iter. Total: 0.4927 s/iter. ETA=0:00:02
[32m[12/16 11:19:58 d2.evaluation.evaluator]: [0mInference done 61/61. Dataloading: 0.0015 s/iter. Inference: 0.3828 s/iter. Eval: 0.0361 s/iter. Total: 0.4205 s/iter. ETA=0:00:00
[32m[12/16 11:19:59 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:23.713662 (0.423458 s / iter per device, on 2 devices)
[32m[12/16 11:19:59 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.382833 s / iter per device, on 2 devices)
[32m[12/16 11:19:59 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 11:19:59 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.2741778343871189
[32m[12/16 11:20:00 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.218675 (0.494885 s / iter per device, on 2 devices)
[32m[12/16 11:20:00 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:24 (0.452711 s / iter per device, on 2 devices)
[32m[12/16 11:20:02 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.27418, better than last best score 0.26737 @ iteration 483.
[32m[12/16 11:20:30 d2.utils.events]: [0m eta: 3:55:22  iter: 739  total_loss: 4.023  loss_cls_stage0: 0.3141  loss_box_reg_stage0: 0.5395  loss_cls_stage1: 0.325  loss_box_reg_stage1: 0.9396  loss_cls_stage2: 0.3333  loss_box_reg_stage2: 0.8979  loss_mask: 0.2902  loss_rpn_cls: 0.101  loss_rpn_loc: 0.232  time: 1.6161  data_time: 0.4162  lr: 0.00073926  max_mem: 14854M
[32m[12/16 11:21:01 d2.utils.events]: [0m eta: 3:54:46  iter: 759  total_loss: 3.83  loss_cls_stage0: 0.2661  loss_box_reg_stage0: 0.4944  loss_cls_stage1: 0.2753  loss_box_reg_stage1: 0.9177  loss_cls_stage2: 0.2847  loss_box_reg_stage2: 0.9227  loss_mask: 0.2935  loss_rpn_cls: 0.1021  loss_rpn_loc: 0.2465  time: 1.6142  data_time: 0.0710  lr: 0.00075924  max_mem: 14854M
[32m[12/16 11:21:33 d2.utils.events]: [0m eta: 3:54:16  iter: 779  total_loss: 4.034  loss_cls_stage0: 0.3079  loss_box_reg_stage0: 0.5111  loss_cls_stage1: 0.3148  loss_box_reg_stage1: 0.9607  loss_cls_stage2: 0.3339  loss_box_reg_stage2: 0.988  loss_mask: 0.301  loss_rpn_cls: 0.09344  loss_rpn_loc: 0.2313  time: 1.6143  data_time: 0.1355  lr: 0.00077922  max_mem: 14854M
[32m[12/16 11:22:05 d2.utils.events]: [0m eta: 3:53:51  iter: 799  total_loss: 4.023  loss_cls_stage0: 0.2959  loss_box_reg_stage0: 0.5365  loss_cls_stage1: 0.3063  loss_box_reg_stage1: 0.9459  loss_cls_stage2: 0.2987  loss_box_reg_stage2: 0.9636  loss_mask: 0.295  loss_rpn_cls: 0.1003  loss_rpn_loc: 0.1989  time: 1.6133  data_time: 0.1342  lr: 0.0007992  max_mem: 14854M
[32m[12/16 11:22:38 d2.utils.events]: [0m eta: 3:53:37  iter: 819  total_loss: 3.953  loss_cls_stage0: 0.2707  loss_box_reg_stage0: 0.5169  loss_cls_stage1: 0.3012  loss_box_reg_stage1: 0.9201  loss_cls_stage2: 0.3283  loss_box_reg_stage2: 0.9457  loss_mask: 0.3041  loss_rpn_cls: 0.1029  loss_rpn_loc: 0.2498  time: 1.6149  data_time: 0.1078  lr: 0.00081918  max_mem: 14854M
[32m[12/16 11:23:19 d2.utils.events]: [0m eta: 3:53:47  iter: 839  total_loss: 3.853  loss_cls_stage0: 0.2824  loss_box_reg_stage0: 0.4969  loss_cls_stage1: 0.3048  loss_box_reg_stage1: 0.924  loss_cls_stage2: 0.3297  loss_box_reg_stage2: 0.8899  loss_mask: 0.299  loss_rpn_cls: 0.1081  loss_rpn_loc: 0.2401  time: 1.6247  data_time: 0.4906  lr: 0.00083916  max_mem: 14854M
[32m[12/16 11:23:51 d2.utils.events]: [0m eta: 3:53:17  iter: 859  total_loss: 4.056  loss_cls_stage0: 0.261  loss_box_reg_stage0: 0.5  loss_cls_stage1: 0.2771  loss_box_reg_stage1: 1.048  loss_cls_stage2: 0.2886  loss_box_reg_stage2: 1.06  loss_mask: 0.2913  loss_rpn_cls: 0.07477  loss_rpn_loc: 0.1954  time: 1.6247  data_time: 0.1607  lr: 0.00085914  max_mem: 14854M
[32m[12/16 11:24:23 d2.utils.events]: [0m eta: 3:53:00  iter: 879  total_loss: 3.754  loss_cls_stage0: 0.2854  loss_box_reg_stage0: 0.541  loss_cls_stage1: 0.3096  loss_box_reg_stage1: 0.9126  loss_cls_stage2: 0.3148  loss_box_reg_stage2: 0.8167  loss_mask: 0.29  loss_rpn_cls: 0.09273  loss_rpn_loc: 0.2393  time: 1.6237  data_time: 0.0532  lr: 0.00087912  max_mem: 14854M
[32m[12/16 11:24:56 d2.utils.events]: [0m eta: 3:52:52  iter: 899  total_loss: 4.165  loss_cls_stage0: 0.3553  loss_box_reg_stage0: 0.5415  loss_cls_stage1: 0.3509  loss_box_reg_stage1: 0.9568  loss_cls_stage2: 0.3442  loss_box_reg_stage2: 0.9469  loss_mask: 0.2925  loss_rpn_cls: 0.1235  loss_rpn_loc: 0.2395  time: 1.6248  data_time: 0.0471  lr: 0.0008991  max_mem: 14854M
[32m[12/16 11:25:27 d2.utils.events]: [0m eta: 3:51:59  iter: 919  total_loss: 4.149  loss_cls_stage0: 0.312  loss_box_reg_stage0: 0.5111  loss_cls_stage1: 0.3354  loss_box_reg_stage1: 0.9443  loss_cls_stage2: 0.3417  loss_box_reg_stage2: 0.9519  loss_mask: 0.2809  loss_rpn_cls: 0.09583  loss_rpn_loc: 0.2398  time: 1.6226  data_time: 0.1159  lr: 0.00091908  max_mem: 14854M
[32m[12/16 11:26:00 d2.utils.events]: [0m eta: 3:51:59  iter: 939  total_loss: 3.924  loss_cls_stage0: 0.3049  loss_box_reg_stage0: 0.513  loss_cls_stage1: 0.3196  loss_box_reg_stage1: 0.8968  loss_cls_stage2: 0.3203  loss_box_reg_stage2: 0.9233  loss_mask: 0.288  loss_rpn_cls: 0.112  loss_rpn_loc: 0.2336  time: 1.6238  data_time: 0.0387  lr: 0.00093906  max_mem: 14854M
[32m[12/16 11:26:34 d2.utils.events]: [0m eta: 3:51:36  iter: 959  total_loss: 3.954  loss_cls_stage0: 0.2389  loss_box_reg_stage0: 0.5043  loss_cls_stage1: 0.256  loss_box_reg_stage1: 0.9397  loss_cls_stage2: 0.291  loss_box_reg_stage2: 0.9566  loss_mask: 0.2828  loss_rpn_cls: 0.06448  loss_rpn_loc: 0.2101  time: 1.6247  data_time: 0.0230  lr: 0.00095904  max_mem: 14854M
[32m[12/16 11:26:46 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.21677, better than last best score 0.21267 @ iteration 483.
[32m[12/16 11:26:46 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:26:46 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:26:46 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:26:47 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:26:47 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:26:47 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 11:26:48 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:26:48 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:26:48 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:26:49 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:26:49 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:26:49 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 11:26:55 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0012 s/iter. Inference: 0.5179 s/iter. Eval: 0.0389 s/iter. Total: 0.5581 s/iter. ETA=0:00:27
[32m[12/16 11:26:56 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.3923 s/iter. Eval: 0.0274 s/iter. Total: 0.4210 s/iter. ETA=0:00:21
[32m[12/16 11:27:01 d2.evaluation.evaluator]: [0mInference done 22/60. Dataloading: 0.0014 s/iter. Inference: 0.4553 s/iter. Eval: 0.0521 s/iter. Total: 0.5088 s/iter. ETA=0:00:19
[32m[12/16 11:27:01 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0015 s/iter. Inference: 0.3861 s/iter. Eval: 0.0345 s/iter. Total: 0.4221 s/iter. ETA=0:00:16
[32m[12/16 11:27:06 d2.evaluation.evaluator]: [0mInference done 32/60. Dataloading: 0.0014 s/iter. Inference: 0.4597 s/iter. Eval: 0.0479 s/iter. Total: 0.5091 s/iter. ETA=0:00:14
[32m[12/16 11:27:06 d2.evaluation.evaluator]: [0mInference done 34/61. Dataloading: 0.0015 s/iter. Inference: 0.3944 s/iter. Eval: 0.0393 s/iter. Total: 0.4353 s/iter. ETA=0:00:11
[32m[12/16 11:27:11 d2.evaluation.evaluator]: [0mInference done 43/60. Dataloading: 0.0015 s/iter. Inference: 0.4561 s/iter. Eval: 0.0445 s/iter. Total: 0.5022 s/iter. ETA=0:00:08
[32m[12/16 11:27:11 d2.evaluation.evaluator]: [0mInference done 46/61. Dataloading: 0.0015 s/iter. Inference: 0.3892 s/iter. Eval: 0.0394 s/iter. Total: 0.4302 s/iter. ETA=0:00:06
[32m[12/16 11:27:16 d2.evaluation.evaluator]: [0mInference done 54/60. Dataloading: 0.0015 s/iter. Inference: 0.4556 s/iter. Eval: 0.0420 s/iter. Total: 0.4991 s/iter. ETA=0:00:02
[32m[12/16 11:27:17 d2.evaluation.evaluator]: [0mInference done 58/61. Dataloading: 0.0015 s/iter. Inference: 0.3922 s/iter. Eval: 0.0382 s/iter. Total: 0.4320 s/iter. ETA=0:00:01
[32m[12/16 11:27:18 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.330505 (0.434473 s / iter per device, on 2 devices)
[32m[12/16 11:27:18 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.391328 s / iter per device, on 2 devices)
[32m[12/16 11:27:18 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 11:27:18 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.2863869689718398
[32m[12/16 11:27:20 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.802014 (0.505491 s / iter per device, on 2 devices)
[32m[12/16 11:27:20 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.457815 s / iter per device, on 2 devices)
[32m[12/16 11:27:22 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.28639, better than last best score 0.27418 @ iteration 725.
[32m[12/16 11:27:45 d2.utils.events]: [0m eta: 3:51:05  iter: 979  total_loss: 3.671  loss_cls_stage0: 0.2752  loss_box_reg_stage0: 0.4745  loss_cls_stage1: 0.2875  loss_box_reg_stage1: 0.8064  loss_cls_stage2: 0.2926  loss_box_reg_stage2: 0.8554  loss_mask: 0.2958  loss_rpn_cls: 0.08267  loss_rpn_loc: 0.2112  time: 1.6269  data_time: 0.2401  lr: 0.00097902  max_mem: 14854M
[32m[12/16 11:28:15 d2.utils.events]: [0m eta: 3:50:34  iter: 999  total_loss: 3.876  loss_cls_stage0: 0.2137  loss_box_reg_stage0: 0.503  loss_cls_stage1: 0.2529  loss_box_reg_stage1: 0.9494  loss_cls_stage2: 0.2739  loss_box_reg_stage2: 0.9654  loss_mask: 0.2779  loss_rpn_cls: 0.08511  loss_rpn_loc: 0.2469  time: 1.6250  data_time: 0.0321  lr: 0.000999  max_mem: 14854M
[32m[12/16 11:28:45 d2.utils.events]: [0m eta: 3:51:00  iter: 1019  total_loss: 3.882  loss_cls_stage0: 0.2796  loss_box_reg_stage0: 0.5437  loss_cls_stage1: 0.3134  loss_box_reg_stage1: 0.9024  loss_cls_stage2: 0.3144  loss_box_reg_stage2: 0.8999  loss_mask: 0.2931  loss_rpn_cls: 0.0928  loss_rpn_loc: 0.2191  time: 1.6226  data_time: 0.0243  lr: 0.001  max_mem: 14854M
[32m[12/16 11:29:18 d2.utils.events]: [0m eta: 3:50:35  iter: 1039  total_loss: 3.912  loss_cls_stage0: 0.2816  loss_box_reg_stage0: 0.5049  loss_cls_stage1: 0.2954  loss_box_reg_stage1: 0.9423  loss_cls_stage2: 0.3187  loss_box_reg_stage2: 0.8783  loss_mask: 0.3007  loss_rpn_cls: 0.09294  loss_rpn_loc: 0.251  time: 1.6224  data_time: 0.1462  lr: 0.001  max_mem: 14854M
[32m[12/16 11:29:50 d2.utils.events]: [0m eta: 3:50:44  iter: 1059  total_loss: 3.928  loss_cls_stage0: 0.3008  loss_box_reg_stage0: 0.5182  loss_cls_stage1: 0.3261  loss_box_reg_stage1: 0.9022  loss_cls_stage2: 0.3037  loss_box_reg_stage2: 0.9029  loss_mask: 0.2967  loss_rpn_cls: 0.1046  loss_rpn_loc: 0.2174  time: 1.6224  data_time: 0.1149  lr: 0.001  max_mem: 14854M
[32m[12/16 11:30:21 d2.utils.events]: [0m eta: 3:51:01  iter: 1079  total_loss: 3.93  loss_cls_stage0: 0.2645  loss_box_reg_stage0: 0.4949  loss_cls_stage1: 0.3038  loss_box_reg_stage1: 0.9465  loss_cls_stage2: 0.2968  loss_box_reg_stage2: 0.9824  loss_mask: 0.2831  loss_rpn_cls: 0.08782  loss_rpn_loc: 0.2208  time: 1.6214  data_time: 0.0569  lr: 0.001  max_mem: 14854M
[32m[12/16 11:30:53 d2.utils.events]: [0m eta: 3:51:19  iter: 1099  total_loss: 3.985  loss_cls_stage0: 0.2291  loss_box_reg_stage0: 0.4957  loss_cls_stage1: 0.2378  loss_box_reg_stage1: 0.9926  loss_cls_stage2: 0.2801  loss_box_reg_stage2: 1.047  loss_mask: 0.2947  loss_rpn_cls: 0.06848  loss_rpn_loc: 0.2334  time: 1.6209  data_time: 0.0225  lr: 0.001  max_mem: 14854M
[32m[12/16 11:31:28 d2.utils.events]: [0m eta: 3:50:49  iter: 1119  total_loss: 3.816  loss_cls_stage0: 0.2386  loss_box_reg_stage0: 0.5089  loss_cls_stage1: 0.2494  loss_box_reg_stage1: 0.9428  loss_cls_stage2: 0.2821  loss_box_reg_stage2: 0.9751  loss_mask: 0.2845  loss_rpn_cls: 0.0828  loss_rpn_loc: 0.2314  time: 1.6225  data_time: 0.2698  lr: 0.001  max_mem: 14854M
[32m[12/16 11:31:59 d2.utils.events]: [0m eta: 3:50:54  iter: 1139  total_loss: 4.135  loss_cls_stage0: 0.2667  loss_box_reg_stage0: 0.5222  loss_cls_stage1: 0.3035  loss_box_reg_stage1: 0.9611  loss_cls_stage2: 0.3167  loss_box_reg_stage2: 0.9757  loss_mask: 0.3027  loss_rpn_cls: 0.114  loss_rpn_loc: 0.2418  time: 1.6217  data_time: 0.0344  lr: 0.001  max_mem: 14854M
[32m[12/16 11:32:31 d2.utils.events]: [0m eta: 3:50:21  iter: 1159  total_loss: 3.96  loss_cls_stage0: 0.3177  loss_box_reg_stage0: 0.5163  loss_cls_stage1: 0.3152  loss_box_reg_stage1: 0.9254  loss_cls_stage2: 0.3116  loss_box_reg_stage2: 0.9563  loss_mask: 0.2884  loss_rpn_cls: 0.1027  loss_rpn_loc: 0.2314  time: 1.6208  data_time: 0.0400  lr: 0.001  max_mem: 14854M
[32m[12/16 11:33:03 d2.utils.events]: [0m eta: 3:49:57  iter: 1179  total_loss: 3.927  loss_cls_stage0: 0.2974  loss_box_reg_stage0: 0.4911  loss_cls_stage1: 0.2957  loss_box_reg_stage1: 0.8963  loss_cls_stage2: 0.3059  loss_box_reg_stage2: 0.8821  loss_mask: 0.2943  loss_rpn_cls: 0.08692  loss_rpn_loc: 0.2048  time: 1.6210  data_time: 0.1053  lr: 0.001  max_mem: 14854M
[32m[12/16 11:33:41 d2.utils.events]: [0m eta: 3:49:37  iter: 1199  total_loss: 3.891  loss_cls_stage0: 0.3364  loss_box_reg_stage0: 0.5135  loss_cls_stage1: 0.3632  loss_box_reg_stage1: 0.849  loss_cls_stage2: 0.3368  loss_box_reg_stage2: 0.8733  loss_mask: 0.297  loss_rpn_cls: 0.129  loss_rpn_loc: 0.2548  time: 1.6253  data_time: 0.3546  lr: 0.001  max_mem: 14854M
[32m[12/16 11:33:55 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.23465, better than last best score 0.21677 @ iteration 725.
[32m[12/16 11:33:56 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:33:56 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:33:56 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:33:56 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:33:56 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:33:56 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 11:33:58 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:33:58 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:33:58 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:33:58 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:33:58 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:33:58 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 11:34:04 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4983 s/iter. Eval: 0.0359 s/iter. Total: 0.5354 s/iter. ETA=0:00:26
[32m[12/16 11:34:06 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0014 s/iter. Inference: 0.4024 s/iter. Eval: 0.0240 s/iter. Total: 0.4278 s/iter. ETA=0:00:21
[32m[12/16 11:34:10 d2.evaluation.evaluator]: [0mInference done 22/60. Dataloading: 0.0015 s/iter. Inference: 0.4551 s/iter. Eval: 0.0475 s/iter. Total: 0.5041 s/iter. ETA=0:00:19
[32m[12/16 11:34:11 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0015 s/iter. Inference: 0.3870 s/iter. Eval: 0.0318 s/iter. Total: 0.4204 s/iter. ETA=0:00:15
[32m[12/16 11:34:15 d2.evaluation.evaluator]: [0mInference done 32/60. Dataloading: 0.0015 s/iter. Inference: 0.4593 s/iter. Eval: 0.0446 s/iter. Total: 0.5054 s/iter. ETA=0:00:14
[32m[12/16 11:34:16 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3840 s/iter. Eval: 0.0364 s/iter. Total: 0.4220 s/iter. ETA=0:00:10
[32m[12/16 11:34:20 d2.evaluation.evaluator]: [0mInference done 43/60. Dataloading: 0.0015 s/iter. Inference: 0.4505 s/iter. Eval: 0.0414 s/iter. Total: 0.4935 s/iter. ETA=0:00:08
[32m[12/16 11:34:21 d2.evaluation.evaluator]: [0mInference done 48/61. Dataloading: 0.0015 s/iter. Inference: 0.3801 s/iter. Eval: 0.0363 s/iter. Total: 0.4180 s/iter. ETA=0:00:05
[32m[12/16 11:34:25 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4595 s/iter. Eval: 0.0394 s/iter. Total: 0.5005 s/iter. ETA=0:00:03
[32m[12/16 11:34:26 d2.evaluation.evaluator]: [0mInference done 60/61. Dataloading: 0.0015 s/iter. Inference: 0.3812 s/iter. Eval: 0.0361 s/iter. Total: 0.4189 s/iter. ETA=0:00:00
[32m[12/16 11:34:27 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:23.634469 (0.422044 s / iter per device, on 2 devices)
[32m[12/16 11:34:27 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.381076 s / iter per device, on 2 devices)
[32m[12/16 11:34:27 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 11:34:27 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.2817711039664302
[32m[12/16 11:34:29 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.905986 (0.507382 s / iter per device, on 2 devices)
[32m[12/16 11:34:29 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.463058 s / iter per device, on 2 devices)
[32m[12/16 11:34:29 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.28177, not better than best score 0.28639 @ iteration 967.
[32m[12/16 11:34:45 d2.utils.events]: [0m eta: 3:48:57  iter: 1219  total_loss: 3.744  loss_cls_stage0: 0.2511  loss_box_reg_stage0: 0.5254  loss_cls_stage1: 0.268  loss_box_reg_stage1: 0.9281  loss_cls_stage2: 0.2791  loss_box_reg_stage2: 0.9062  loss_mask: 0.2891  loss_rpn_cls: 0.08377  loss_rpn_loc: 0.1912  time: 1.6238  data_time: 0.0298  lr: 0.001  max_mem: 14854M
[32m[12/16 11:35:22 d2.utils.events]: [0m eta: 3:48:34  iter: 1239  total_loss: 3.902  loss_cls_stage0: 0.2612  loss_box_reg_stage0: 0.5138  loss_cls_stage1: 0.2711  loss_box_reg_stage1: 0.9828  loss_cls_stage2: 0.2871  loss_box_reg_stage2: 1.03  loss_mask: 0.2981  loss_rpn_cls: 0.07727  loss_rpn_loc: 0.2267  time: 1.6271  data_time: 0.2472  lr: 0.001  max_mem: 14854M
[32m[12/16 11:35:54 d2.utils.events]: [0m eta: 3:48:36  iter: 1259  total_loss: 4.036  loss_cls_stage0: 0.2722  loss_box_reg_stage0: 0.5206  loss_cls_stage1: 0.3163  loss_box_reg_stage1: 0.9909  loss_cls_stage2: 0.3122  loss_box_reg_stage2: 0.8955  loss_mask: 0.2849  loss_rpn_cls: 0.1113  loss_rpn_loc: 0.2344  time: 1.6273  data_time: 0.1650  lr: 0.001  max_mem: 14854M
[32m[12/16 11:36:27 d2.utils.events]: [0m eta: 3:48:29  iter: 1279  total_loss: 3.883  loss_cls_stage0: 0.2674  loss_box_reg_stage0: 0.5208  loss_cls_stage1: 0.2717  loss_box_reg_stage1: 0.9509  loss_cls_stage2: 0.3032  loss_box_reg_stage2: 0.9176  loss_mask: 0.2912  loss_rpn_cls: 0.07923  loss_rpn_loc: 0.2381  time: 1.6270  data_time: 0.0633  lr: 0.001  max_mem: 14854M
[32m[12/16 11:36:59 d2.utils.events]: [0m eta: 3:48:08  iter: 1299  total_loss: 3.861  loss_cls_stage0: 0.2936  loss_box_reg_stage0: 0.51  loss_cls_stage1: 0.3102  loss_box_reg_stage1: 0.93  loss_cls_stage2: 0.319  loss_box_reg_stage2: 0.8588  loss_mask: 0.2812  loss_rpn_cls: 0.09992  loss_rpn_loc: 0.2421  time: 1.6267  data_time: 0.1465  lr: 0.001  max_mem: 14854M
[32m[12/16 11:37:34 d2.utils.events]: [0m eta: 3:48:35  iter: 1319  total_loss: 3.954  loss_cls_stage0: 0.2545  loss_box_reg_stage0: 0.4877  loss_cls_stage1: 0.2693  loss_box_reg_stage1: 0.9641  loss_cls_stage2: 0.3058  loss_box_reg_stage2: 0.9705  loss_mask: 0.2737  loss_rpn_cls: 0.07522  loss_rpn_loc: 0.2313  time: 1.6284  data_time: 0.0924  lr: 0.001  max_mem: 14854M
[32m[12/16 11:38:04 d2.utils.events]: [0m eta: 3:48:04  iter: 1339  total_loss: 3.96  loss_cls_stage0: 0.2574  loss_box_reg_stage0: 0.4758  loss_cls_stage1: 0.2737  loss_box_reg_stage1: 0.8891  loss_cls_stage2: 0.3105  loss_box_reg_stage2: 1.029  loss_mask: 0.2766  loss_rpn_cls: 0.08562  loss_rpn_loc: 0.2211  time: 1.6265  data_time: 0.0289  lr: 0.001  max_mem: 14854M
[32m[12/16 11:38:38 d2.utils.events]: [0m eta: 3:47:57  iter: 1359  total_loss: 3.834  loss_cls_stage0: 0.3048  loss_box_reg_stage0: 0.5265  loss_cls_stage1: 0.3115  loss_box_reg_stage1: 0.8733  loss_cls_stage2: 0.3191  loss_box_reg_stage2: 0.8785  loss_mask: 0.3019  loss_rpn_cls: 0.1033  loss_rpn_loc: 0.2569  time: 1.6276  data_time: 0.1294  lr: 0.001  max_mem: 14854M
[32m[12/16 11:39:09 d2.utils.events]: [0m eta: 3:47:37  iter: 1379  total_loss: 3.742  loss_cls_stage0: 0.2565  loss_box_reg_stage0: 0.5106  loss_cls_stage1: 0.2768  loss_box_reg_stage1: 0.9303  loss_cls_stage2: 0.278  loss_box_reg_stage2: 0.9067  loss_mask: 0.3089  loss_rpn_cls: 0.09689  loss_rpn_loc: 0.193  time: 1.6269  data_time: 0.0442  lr: 0.001  max_mem: 14854M
[32m[12/16 11:39:40 d2.utils.events]: [0m eta: 3:47:07  iter: 1399  total_loss: 3.876  loss_cls_stage0: 0.2571  loss_box_reg_stage0: 0.4995  loss_cls_stage1: 0.2762  loss_box_reg_stage1: 0.9378  loss_cls_stage2: 0.2994  loss_box_reg_stage2: 1.01  loss_mask: 0.2667  loss_rpn_cls: 0.05789  loss_rpn_loc: 0.1887  time: 1.6259  data_time: 0.0650  lr: 0.001  max_mem: 14854M
[32m[12/16 11:40:17 d2.utils.events]: [0m eta: 3:46:34  iter: 1419  total_loss: 3.867  loss_cls_stage0: 0.2736  loss_box_reg_stage0: 0.4852  loss_cls_stage1: 0.3001  loss_box_reg_stage1: 0.9228  loss_cls_stage2: 0.3128  loss_box_reg_stage2: 0.9402  loss_mask: 0.2747  loss_rpn_cls: 0.08907  loss_rpn_loc: 0.2252  time: 1.6288  data_time: 0.4213  lr: 0.001  max_mem: 14854M
[32m[12/16 11:40:49 d2.utils.events]: [0m eta: 3:46:03  iter: 1439  total_loss: 3.922  loss_cls_stage0: 0.2537  loss_box_reg_stage0: 0.5013  loss_cls_stage1: 0.2836  loss_box_reg_stage1: 0.9419  loss_cls_stage2: 0.2994  loss_box_reg_stage2: 0.9756  loss_mask: 0.2899  loss_rpn_cls: 0.08188  loss_rpn_loc: 0.2275  time: 1.6283  data_time: 0.0940  lr: 0.001  max_mem: 14854M
[32m[12/16 11:41:07 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.22945, not better than best score 0.23465 @ iteration 967.
[32m[12/16 11:41:08 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:41:08 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:41:08 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:41:08 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:41:08 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:41:08 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 11:41:10 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:41:10 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:41:10 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:41:10 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:41:10 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:41:10 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 11:41:16 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4913 s/iter. Eval: 0.0335 s/iter. Total: 0.5260 s/iter. ETA=0:00:25
[32m[12/16 11:41:17 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.3722 s/iter. Eval: 0.0247 s/iter. Total: 0.3983 s/iter. ETA=0:00:19
[32m[12/16 11:41:21 d2.evaluation.evaluator]: [0mInference done 20/60. Dataloading: 0.0014 s/iter. Inference: 0.4992 s/iter. Eval: 0.0488 s/iter. Total: 0.5495 s/iter. ETA=0:00:21
[32m[12/16 11:41:23 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0015 s/iter. Inference: 0.3893 s/iter. Eval: 0.0321 s/iter. Total: 0.4229 s/iter. ETA=0:00:16
[32m[12/16 11:41:27 d2.evaluation.evaluator]: [0mInference done 30/60. Dataloading: 0.0015 s/iter. Inference: 0.5080 s/iter. Eval: 0.0451 s/iter. Total: 0.5546 s/iter. ETA=0:00:16
[32m[12/16 11:41:28 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3858 s/iter. Eval: 0.0369 s/iter. Total: 0.4242 s/iter. ETA=0:00:11
[32m[12/16 11:41:32 d2.evaluation.evaluator]: [0mInference done 41/60. Dataloading: 0.0015 s/iter. Inference: 0.4861 s/iter. Eval: 0.0420 s/iter. Total: 0.5296 s/iter. ETA=0:00:10
[32m[12/16 11:41:33 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3861 s/iter. Eval: 0.0366 s/iter. Total: 0.4243 s/iter. ETA=0:00:05
[32m[12/16 11:41:37 d2.evaluation.evaluator]: [0mInference done 51/60. Dataloading: 0.0015 s/iter. Inference: 0.4904 s/iter. Eval: 0.0398 s/iter. Total: 0.5317 s/iter. ETA=0:00:04
[32m[12/16 11:41:38 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3852 s/iter. Eval: 0.0362 s/iter. Total: 0.4229 s/iter. ETA=0:00:00
[32m[12/16 11:41:39 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:23.831509 (0.425563 s / iter per device, on 2 devices)
[32m[12/16 11:41:39 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.384740 s / iter per device, on 2 devices)
[32m[12/16 11:41:39 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 11:41:39 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.3005405742889246
[32m[12/16 11:41:42 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:28.918512 (0.525791 s / iter per device, on 2 devices)
[32m[12/16 11:41:42 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:26 (0.481025 s / iter per device, on 2 devices)
[32m[12/16 11:41:43 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.30054, better than last best score 0.28639 @ iteration 967.
[32m[12/16 11:41:55 d2.utils.events]: [0m eta: 3:44:59  iter: 1459  total_loss: 3.864  loss_cls_stage0: 0.2636  loss_box_reg_stage0: 0.4906  loss_cls_stage1: 0.2894  loss_box_reg_stage1: 0.9248  loss_cls_stage2: 0.3107  loss_box_reg_stage2: 0.842  loss_mask: 0.2867  loss_rpn_cls: 0.08738  loss_rpn_loc: 0.2106  time: 1.6266  data_time: 0.0343  lr: 0.001  max_mem: 14854M
[32m[12/16 11:42:28 d2.utils.events]: [0m eta: 3:44:47  iter: 1479  total_loss: 3.813  loss_cls_stage0: 0.2464  loss_box_reg_stage0: 0.4954  loss_cls_stage1: 0.2929  loss_box_reg_stage1: 0.9175  loss_cls_stage2: 0.3269  loss_box_reg_stage2: 0.9505  loss_mask: 0.2778  loss_rpn_cls: 0.07573  loss_rpn_loc: 0.1981  time: 1.6267  data_time: 0.0674  lr: 0.001  max_mem: 14854M
[32m[12/16 11:43:01 d2.utils.events]: [0m eta: 3:44:05  iter: 1499  total_loss: 3.889  loss_cls_stage0: 0.2724  loss_box_reg_stage0: 0.5205  loss_cls_stage1: 0.2903  loss_box_reg_stage1: 0.9813  loss_cls_stage2: 0.2823  loss_box_reg_stage2: 1.05  loss_mask: 0.2735  loss_rpn_cls: 0.07136  loss_rpn_loc: 0.2171  time: 1.6273  data_time: 0.1596  lr: 0.001  max_mem: 14854M
[32m[12/16 11:43:36 d2.utils.events]: [0m eta: 3:43:43  iter: 1519  total_loss: 3.743  loss_cls_stage0: 0.2685  loss_box_reg_stage0: 0.4865  loss_cls_stage1: 0.2969  loss_box_reg_stage1: 0.9257  loss_cls_stage2: 0.3025  loss_box_reg_stage2: 0.9408  loss_mask: 0.2703  loss_rpn_cls: 0.08367  loss_rpn_loc: 0.2073  time: 1.6286  data_time: 0.1527  lr: 0.001  max_mem: 14854M
[32m[12/16 11:44:09 d2.utils.events]: [0m eta: 3:42:39  iter: 1539  total_loss: 3.813  loss_cls_stage0: 0.2177  loss_box_reg_stage0: 0.49  loss_cls_stage1: 0.25  loss_box_reg_stage1: 0.9528  loss_cls_stage2: 0.2708  loss_box_reg_stage2: 1.043  loss_mask: 0.2856  loss_rpn_cls: 0.07754  loss_rpn_loc: 0.239  time: 1.6289  data_time: 0.1938  lr: 0.001  max_mem: 14854M
[32m[12/16 11:44:41 d2.utils.events]: [0m eta: 3:42:30  iter: 1559  total_loss: 3.979  loss_cls_stage0: 0.2435  loss_box_reg_stage0: 0.4971  loss_cls_stage1: 0.2685  loss_box_reg_stage1: 0.9712  loss_cls_stage2: 0.2971  loss_box_reg_stage2: 0.9639  loss_mask: 0.2774  loss_rpn_cls: 0.08017  loss_rpn_loc: 0.2352  time: 1.6284  data_time: 0.0639  lr: 0.001  max_mem: 14854M
[32m[12/16 11:45:12 d2.utils.events]: [0m eta: 3:42:20  iter: 1579  total_loss: 3.9  loss_cls_stage0: 0.2109  loss_box_reg_stage0: 0.5102  loss_cls_stage1: 0.2452  loss_box_reg_stage1: 0.9773  loss_cls_stage2: 0.2832  loss_box_reg_stage2: 0.9923  loss_mask: 0.2872  loss_rpn_cls: 0.07853  loss_rpn_loc: 0.1964  time: 1.6274  data_time: 0.0489  lr: 0.001  max_mem: 14854M
[32m[12/16 11:45:45 d2.utils.events]: [0m eta: 3:41:54  iter: 1599  total_loss: 3.671  loss_cls_stage0: 0.3063  loss_box_reg_stage0: 0.516  loss_cls_stage1: 0.3055  loss_box_reg_stage1: 0.8491  loss_cls_stage2: 0.3111  loss_box_reg_stage2: 0.7863  loss_mask: 0.2975  loss_rpn_cls: 0.1008  loss_rpn_loc: 0.2353  time: 1.6278  data_time: 0.2162  lr: 0.001  max_mem: 14854M
[32m[12/16 11:46:25 d2.utils.events]: [0m eta: 3:41:31  iter: 1619  total_loss: 3.72  loss_cls_stage0: 0.2424  loss_box_reg_stage0: 0.509  loss_cls_stage1: 0.2639  loss_box_reg_stage1: 0.8933  loss_cls_stage2: 0.2769  loss_box_reg_stage2: 0.8358  loss_mask: 0.3061  loss_rpn_cls: 0.1017  loss_rpn_loc: 0.2276  time: 1.6324  data_time: 0.4445  lr: 0.001  max_mem: 14854M
[32m[12/16 11:46:57 d2.utils.events]: [0m eta: 3:41:09  iter: 1639  total_loss: 4.043  loss_cls_stage0: 0.2374  loss_box_reg_stage0: 0.5192  loss_cls_stage1: 0.2539  loss_box_reg_stage1: 0.9511  loss_cls_stage2: 0.2819  loss_box_reg_stage2: 1.004  loss_mask: 0.3033  loss_rpn_cls: 0.08916  loss_rpn_loc: 0.2316  time: 1.6321  data_time: 0.0480  lr: 0.001  max_mem: 14854M
[32m[12/16 11:47:30 d2.utils.events]: [0m eta: 3:40:32  iter: 1659  total_loss: 3.919  loss_cls_stage0: 0.2773  loss_box_reg_stage0: 0.4974  loss_cls_stage1: 0.2878  loss_box_reg_stage1: 0.969  loss_cls_stage2: 0.2875  loss_box_reg_stage2: 1.099  loss_mask: 0.2768  loss_rpn_cls: 0.06368  loss_rpn_loc: 0.2076  time: 1.6324  data_time: 0.0895  lr: 0.001  max_mem: 14854M
[32m[12/16 11:48:03 d2.utils.events]: [0m eta: 3:39:55  iter: 1679  total_loss: 3.954  loss_cls_stage0: 0.2889  loss_box_reg_stage0: 0.5131  loss_cls_stage1: 0.2949  loss_box_reg_stage1: 0.9811  loss_cls_stage2: 0.3042  loss_box_reg_stage2: 1.03  loss_mask: 0.2859  loss_rpn_cls: 0.08477  loss_rpn_loc: 0.1897  time: 1.6323  data_time: 0.0289  lr: 0.001  max_mem: 14854M
[32m[12/16 11:48:26 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.24418, better than last best score 0.23465 @ iteration 967.
[32m[12/16 11:48:26 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:48:26 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:48:26 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:48:26 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:48:27 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:48:27 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 11:48:28 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:48:28 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:48:28 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:48:28 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:48:29 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:48:29 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 11:48:35 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4656 s/iter. Eval: 0.0341 s/iter. Total: 0.5010 s/iter. ETA=0:00:24
[32m[12/16 11:48:36 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.3698 s/iter. Eval: 0.0218 s/iter. Total: 0.3929 s/iter. ETA=0:00:19
[32m[12/16 11:48:40 d2.evaluation.evaluator]: [0mInference done 21/60. Dataloading: 0.0015 s/iter. Inference: 0.4671 s/iter. Eval: 0.0487 s/iter. Total: 0.5173 s/iter. ETA=0:00:20
[32m[12/16 11:48:41 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0014 s/iter. Inference: 0.3843 s/iter. Eval: 0.0297 s/iter. Total: 0.4154 s/iter. ETA=0:00:15
[32m[12/16 11:48:45 d2.evaluation.evaluator]: [0mInference done 32/60. Dataloading: 0.0015 s/iter. Inference: 0.4521 s/iter. Eval: 0.0431 s/iter. Total: 0.4967 s/iter. ETA=0:00:13
[32m[12/16 11:48:46 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3857 s/iter. Eval: 0.0331 s/iter. Total: 0.4204 s/iter. ETA=0:00:10
[32m[12/16 11:48:50 d2.evaluation.evaluator]: [0mInference done 42/60. Dataloading: 0.0015 s/iter. Inference: 0.4582 s/iter. Eval: 0.0404 s/iter. Total: 0.5002 s/iter. ETA=0:00:09
[32m[12/16 11:48:51 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3863 s/iter. Eval: 0.0340 s/iter. Total: 0.4218 s/iter. ETA=0:00:05
[32m[12/16 11:48:55 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4556 s/iter. Eval: 0.0376 s/iter. Total: 0.4948 s/iter. ETA=0:00:03
[32m[12/16 11:48:56 d2.evaluation.evaluator]: [0mInference done 60/61. Dataloading: 0.0015 s/iter. Inference: 0.3840 s/iter. Eval: 0.0339 s/iter. Total: 0.4195 s/iter. ETA=0:00:00
[32m[12/16 11:48:57 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:23.654493 (0.422402 s / iter per device, on 2 devices)
[32m[12/16 11:48:57 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.383802 s / iter per device, on 2 devices)
[32m[12/16 11:48:57 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 11:48:57 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.2953409250200298
[32m[12/16 11:48:59 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.440564 (0.498919 s / iter per device, on 2 devices)
[32m[12/16 11:48:59 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.456099 s / iter per device, on 2 devices)
[32m[12/16 11:48:59 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.29534, not better than best score 0.30054 @ iteration 1451.
[32m[12/16 11:49:08 d2.utils.events]: [0m eta: 3:39:24  iter: 1699  total_loss: 4.067  loss_cls_stage0: 0.2513  loss_box_reg_stage0: 0.54  loss_cls_stage1: 0.297  loss_box_reg_stage1: 0.9921  loss_cls_stage2: 0.308  loss_box_reg_stage2: 0.9279  loss_mask: 0.2912  loss_rpn_cls: 0.1025  loss_rpn_loc: 0.2172  time: 1.6319  data_time: 0.0462  lr: 0.001  max_mem: 14854M
[32m[12/16 11:49:40 d2.utils.events]: [0m eta: 3:38:52  iter: 1719  total_loss: 4.048  loss_cls_stage0: 0.2517  loss_box_reg_stage0: 0.5306  loss_cls_stage1: 0.2844  loss_box_reg_stage1: 0.9806  loss_cls_stage2: 0.301  loss_box_reg_stage2: 0.9957  loss_mask: 0.288  loss_rpn_cls: 0.07457  loss_rpn_loc: 0.2117  time: 1.6318  data_time: 0.1000  lr: 0.001  max_mem: 14854M
[32m[12/16 11:50:14 d2.utils.events]: [0m eta: 3:38:39  iter: 1739  total_loss: 3.95  loss_cls_stage0: 0.241  loss_box_reg_stage0: 0.4909  loss_cls_stage1: 0.2969  loss_box_reg_stage1: 0.9617  loss_cls_stage2: 0.3181  loss_box_reg_stage2: 1.001  loss_mask: 0.2818  loss_rpn_cls: 0.07327  loss_rpn_loc: 0.2077  time: 1.6323  data_time: 0.0624  lr: 0.001  max_mem: 14854M
[32m[12/16 11:50:49 d2.utils.events]: [0m eta: 3:38:14  iter: 1759  total_loss: 3.8  loss_cls_stage0: 0.2715  loss_box_reg_stage0: 0.5159  loss_cls_stage1: 0.2751  loss_box_reg_stage1: 0.8652  loss_cls_stage2: 0.2958  loss_box_reg_stage2: 0.8842  loss_mask: 0.2938  loss_rpn_cls: 0.09794  loss_rpn_loc: 0.237  time: 1.6335  data_time: 0.2215  lr: 0.001  max_mem: 14854M
[32m[12/16 11:51:22 d2.utils.events]: [0m eta: 3:38:18  iter: 1779  total_loss: 3.827  loss_cls_stage0: 0.2735  loss_box_reg_stage0: 0.4769  loss_cls_stage1: 0.2896  loss_box_reg_stage1: 0.9238  loss_cls_stage2: 0.3346  loss_box_reg_stage2: 0.9653  loss_mask: 0.2843  loss_rpn_cls: 0.08512  loss_rpn_loc: 0.2193  time: 1.6336  data_time: 0.0572  lr: 0.001  max_mem: 14854M
[32m[12/16 11:51:54 d2.utils.events]: [0m eta: 3:38:08  iter: 1799  total_loss: 3.86  loss_cls_stage0: 0.2826  loss_box_reg_stage0: 0.4809  loss_cls_stage1: 0.3073  loss_box_reg_stage1: 0.9725  loss_cls_stage2: 0.3141  loss_box_reg_stage2: 0.955  loss_mask: 0.2813  loss_rpn_cls: 0.08695  loss_rpn_loc: 0.2274  time: 1.6335  data_time: 0.0893  lr: 0.001  max_mem: 14854M
[32m[12/16 11:52:25 d2.utils.events]: [0m eta: 3:37:11  iter: 1819  total_loss: 3.681  loss_cls_stage0: 0.246  loss_box_reg_stage0: 0.4995  loss_cls_stage1: 0.2588  loss_box_reg_stage1: 0.9255  loss_cls_stage2: 0.2907  loss_box_reg_stage2: 0.9781  loss_mask: 0.2836  loss_rpn_cls: 0.07787  loss_rpn_loc: 0.1987  time: 1.6328  data_time: 0.0713  lr: 0.001  max_mem: 14854M
[32m[12/16 11:52:57 d2.utils.events]: [0m eta: 3:36:42  iter: 1839  total_loss: 4.1  loss_cls_stage0: 0.2618  loss_box_reg_stage0: 0.4834  loss_cls_stage1: 0.2866  loss_box_reg_stage1: 0.9767  loss_cls_stage2: 0.3194  loss_box_reg_stage2: 1.016  loss_mask: 0.2902  loss_rpn_cls: 0.08602  loss_rpn_loc: 0.2106  time: 1.6319  data_time: 0.0276  lr: 0.001  max_mem: 14854M
[32m[12/16 11:53:33 d2.utils.events]: [0m eta: 3:36:10  iter: 1859  total_loss: 3.672  loss_cls_stage0: 0.2614  loss_box_reg_stage0: 0.4807  loss_cls_stage1: 0.3016  loss_box_reg_stage1: 0.8591  loss_cls_stage2: 0.3022  loss_box_reg_stage2: 0.8802  loss_mask: 0.2982  loss_rpn_cls: 0.1061  loss_rpn_loc: 0.2312  time: 1.6341  data_time: 0.3544  lr: 0.001  max_mem: 14854M
[32m[12/16 11:54:05 d2.utils.events]: [0m eta: 3:35:40  iter: 1879  total_loss: 3.962  loss_cls_stage0: 0.2499  loss_box_reg_stage0: 0.4941  loss_cls_stage1: 0.2878  loss_box_reg_stage1: 0.8929  loss_cls_stage2: 0.3057  loss_box_reg_stage2: 0.9352  loss_mask: 0.2695  loss_rpn_cls: 0.08368  loss_rpn_loc: 0.1972  time: 1.6334  data_time: 0.0735  lr: 0.001  max_mem: 14854M
[32m[12/16 11:54:37 d2.utils.events]: [0m eta: 3:35:04  iter: 1899  total_loss: 3.81  loss_cls_stage0: 0.2415  loss_box_reg_stage0: 0.4741  loss_cls_stage1: 0.2583  loss_box_reg_stage1: 0.9272  loss_cls_stage2: 0.2722  loss_box_reg_stage2: 1.047  loss_mask: 0.2791  loss_rpn_cls: 0.06721  loss_rpn_loc: 0.2153  time: 1.6332  data_time: 0.0402  lr: 0.001  max_mem: 14854M
[32m[12/16 11:55:11 d2.utils.events]: [0m eta: 3:35:02  iter: 1919  total_loss: 3.766  loss_cls_stage0: 0.2505  loss_box_reg_stage0: 0.4882  loss_cls_stage1: 0.2805  loss_box_reg_stage1: 0.9194  loss_cls_stage2: 0.2933  loss_box_reg_stage2: 0.981  loss_mask: 0.2747  loss_rpn_cls: 0.0778  loss_rpn_loc: 0.2171  time: 1.6339  data_time: 0.1395  lr: 0.001  max_mem: 14854M
[32m[12/16 11:55:38 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.23665, not better than best score 0.24418 @ iteration 1451.
[32m[12/16 11:55:38 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:55:38 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:55:38 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:55:38 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:55:38 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:55:38 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 11:55:40 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:55:40 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 11:55:40 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 11:55:40 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 11:55:40 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 11:55:41 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 11:55:47 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4752 s/iter. Eval: 0.0377 s/iter. Total: 0.5142 s/iter. ETA=0:00:25
[32m[12/16 11:55:48 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0012 s/iter. Inference: 0.3626 s/iter. Eval: 0.0237 s/iter. Total: 0.3875 s/iter. ETA=0:00:19
[32m[12/16 11:55:52 d2.evaluation.evaluator]: [0mInference done 22/60. Dataloading: 0.0015 s/iter. Inference: 0.4456 s/iter. Eval: 0.0493 s/iter. Total: 0.4964 s/iter. ETA=0:00:18
[32m[12/16 11:55:53 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0014 s/iter. Inference: 0.3782 s/iter. Eval: 0.0307 s/iter. Total: 0.4103 s/iter. ETA=0:00:15
[32m[12/16 11:55:57 d2.evaluation.evaluator]: [0mInference done 33/60. Dataloading: 0.0015 s/iter. Inference: 0.4408 s/iter. Eval: 0.0446 s/iter. Total: 0.4869 s/iter. ETA=0:00:13
[32m[12/16 11:55:58 d2.evaluation.evaluator]: [0mInference done 34/61. Dataloading: 0.0015 s/iter. Inference: 0.3918 s/iter. Eval: 0.0353 s/iter. Total: 0.4286 s/iter. ETA=0:00:11
[32m[12/16 11:56:02 d2.evaluation.evaluator]: [0mInference done 42/60. Dataloading: 0.0015 s/iter. Inference: 0.4618 s/iter. Eval: 0.0423 s/iter. Total: 0.5057 s/iter. ETA=0:00:09
[32m[12/16 11:56:03 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3859 s/iter. Eval: 0.0360 s/iter. Total: 0.4235 s/iter. ETA=0:00:05
[32m[12/16 11:56:08 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4620 s/iter. Eval: 0.0393 s/iter. Total: 0.5029 s/iter. ETA=0:00:03
[32m[12/16 11:56:08 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3927 s/iter. Eval: 0.0356 s/iter. Total: 0.4298 s/iter. ETA=0:00:00
[32m[12/16 11:56:10 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.329075 (0.434448 s / iter per device, on 2 devices)
[32m[12/16 11:56:10 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:22 (0.394185 s / iter per device, on 2 devices)
[32m[12/16 11:56:10 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 11:56:10 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.30281303880823435
[32m[12/16 11:56:12 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:28.356003 (0.515564 s / iter per device, on 2 devices)
[32m[12/16 11:56:12 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.470639 s / iter per device, on 2 devices)
[32m[12/16 11:56:14 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.30281, better than last best score 0.30054 @ iteration 1451.
[32m[12/16 11:56:19 d2.utils.events]: [0m eta: 3:34:11  iter: 1939  total_loss: 3.683  loss_cls_stage0: 0.2448  loss_box_reg_stage0: 0.485  loss_cls_stage1: 0.2505  loss_box_reg_stage1: 0.8846  loss_cls_stage2: 0.2794  loss_box_reg_stage2: 0.948  loss_mask: 0.281  loss_rpn_cls: 0.08525  loss_rpn_loc: 0.2218  time: 1.6338  data_time: 0.1650  lr: 0.001  max_mem: 14854M
[32m[12/16 11:56:49 d2.utils.events]: [0m eta: 3:32:55  iter: 1959  total_loss: 3.908  loss_cls_stage0: 0.2564  loss_box_reg_stage0: 0.5018  loss_cls_stage1: 0.2708  loss_box_reg_stage1: 0.9428  loss_cls_stage2: 0.2928  loss_box_reg_stage2: 0.9739  loss_mask: 0.281  loss_rpn_cls: 0.09616  loss_rpn_loc: 0.2113  time: 1.6323  data_time: 0.0693  lr: 0.001  max_mem: 14854M
[32m[12/16 11:57:23 d2.utils.events]: [0m eta: 3:32:56  iter: 1979  total_loss: 3.786  loss_cls_stage0: 0.2442  loss_box_reg_stage0: 0.4674  loss_cls_stage1: 0.2663  loss_box_reg_stage1: 0.9777  loss_cls_stage2: 0.2913  loss_box_reg_stage2: 1.027  loss_mask: 0.2724  loss_rpn_cls: 0.08597  loss_rpn_loc: 0.2097  time: 1.6327  data_time: 0.1942  lr: 0.001  max_mem: 14854M
[32m[12/16 11:58:01 d2.utils.events]: [0m eta: 3:33:01  iter: 1999  total_loss: 3.902  loss_cls_stage0: 0.2844  loss_box_reg_stage0: 0.4868  loss_cls_stage1: 0.3064  loss_box_reg_stage1: 0.9649  loss_cls_stage2: 0.3067  loss_box_reg_stage2: 0.9638  loss_mask: 0.2991  loss_rpn_cls: 0.06668  loss_rpn_loc: 0.2276  time: 1.6357  data_time: 0.3110  lr: 0.001  max_mem: 14854M
[32m[12/16 11:58:34 d2.utils.events]: [0m eta: 3:32:29  iter: 2019  total_loss: 3.827  loss_cls_stage0: 0.2643  loss_box_reg_stage0: 0.5033  loss_cls_stage1: 0.2912  loss_box_reg_stage1: 0.8928  loss_cls_stage2: 0.3037  loss_box_reg_stage2: 0.9579  loss_mask: 0.2889  loss_rpn_cls: 0.0816  loss_rpn_loc: 0.2074  time: 1.6357  data_time: 0.0849  lr: 0.001  max_mem: 14854M
[32m[12/16 11:59:06 d2.utils.events]: [0m eta: 3:32:26  iter: 2039  total_loss: 3.811  loss_cls_stage0: 0.253  loss_box_reg_stage0: 0.4972  loss_cls_stage1: 0.3023  loss_box_reg_stage1: 0.9  loss_cls_stage2: 0.3075  loss_box_reg_stage2: 0.9386  loss_mask: 0.2792  loss_rpn_cls: 0.07788  loss_rpn_loc: 0.2219  time: 1.6354  data_time: 0.0376  lr: 0.001  max_mem: 14854M
[32m[12/16 11:59:41 d2.utils.events]: [0m eta: 3:31:48  iter: 2059  total_loss: 3.712  loss_cls_stage0: 0.2174  loss_box_reg_stage0: 0.482  loss_cls_stage1: 0.249  loss_box_reg_stage1: 0.9464  loss_cls_stage2: 0.2752  loss_box_reg_stage2: 0.9973  loss_mask: 0.2756  loss_rpn_cls: 0.0738  loss_rpn_loc: 0.2094  time: 1.6364  data_time: 0.2383  lr: 0.001  max_mem: 14854M
[32m[12/16 12:00:15 d2.utils.events]: [0m eta: 3:31:45  iter: 2079  total_loss: 3.738  loss_cls_stage0: 0.2571  loss_box_reg_stage0: 0.4944  loss_cls_stage1: 0.2824  loss_box_reg_stage1: 0.8615  loss_cls_stage2: 0.2872  loss_box_reg_stage2: 0.8745  loss_mask: 0.2952  loss_rpn_cls: 0.07173  loss_rpn_loc: 0.2178  time: 1.6368  data_time: 0.0302  lr: 0.001  max_mem: 14854M
[32m[12/16 12:00:53 d2.utils.events]: [0m eta: 3:31:08  iter: 2099  total_loss: 3.87  loss_cls_stage0: 0.2439  loss_box_reg_stage0: 0.5283  loss_cls_stage1: 0.2631  loss_box_reg_stage1: 0.9474  loss_cls_stage2: 0.2846  loss_box_reg_stage2: 0.9379  loss_mask: 0.2917  loss_rpn_cls: 0.08127  loss_rpn_loc: 0.2072  time: 1.6394  data_time: 0.3294  lr: 0.001  max_mem: 14854M
[32m[12/16 12:01:24 d2.utils.events]: [0m eta: 3:30:29  iter: 2119  total_loss: 3.884  loss_cls_stage0: 0.2587  loss_box_reg_stage0: 0.5118  loss_cls_stage1: 0.2783  loss_box_reg_stage1: 0.9533  loss_cls_stage2: 0.2827  loss_box_reg_stage2: 0.9636  loss_mask: 0.2776  loss_rpn_cls: 0.09949  loss_rpn_loc: 0.2053  time: 1.6386  data_time: 0.1053  lr: 0.001  max_mem: 14854M
[32m[12/16 12:01:55 d2.utils.events]: [0m eta: 3:29:54  iter: 2139  total_loss: 3.803  loss_cls_stage0: 0.2304  loss_box_reg_stage0: 0.4876  loss_cls_stage1: 0.2569  loss_box_reg_stage1: 0.925  loss_cls_stage2: 0.2951  loss_box_reg_stage2: 1.056  loss_mask: 0.2704  loss_rpn_cls: 0.07586  loss_rpn_loc: 0.1994  time: 1.6381  data_time: 0.0433  lr: 0.001  max_mem: 14854M
[32m[12/16 12:02:32 d2.utils.events]: [0m eta: 3:29:22  iter: 2159  total_loss: 3.816  loss_cls_stage0: 0.2658  loss_box_reg_stage0: 0.5112  loss_cls_stage1: 0.2931  loss_box_reg_stage1: 0.8754  loss_cls_stage2: 0.313  loss_box_reg_stage2: 0.9827  loss_mask: 0.2925  loss_rpn_cls: 0.08391  loss_rpn_loc: 0.2047  time: 1.6400  data_time: 0.2899  lr: 0.001  max_mem: 14854M
[32m[12/16 12:03:02 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.24647, better than last best score 0.24418 @ iteration 1451.
[32m[12/16 12:03:02 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:03:02 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:03:02 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:03:02 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:03:03 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:03:03 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 12:03:04 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:03:04 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:03:04 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:03:04 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:03:05 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:03:05 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 12:03:11 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0012 s/iter. Inference: 0.4855 s/iter. Eval: 0.0359 s/iter. Total: 0.5226 s/iter. ETA=0:00:25
[32m[12/16 12:03:12 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0012 s/iter. Inference: 0.3915 s/iter. Eval: 0.0255 s/iter. Total: 0.4183 s/iter. ETA=0:00:20
[32m[12/16 12:03:16 d2.evaluation.evaluator]: [0mInference done 21/60. Dataloading: 0.0014 s/iter. Inference: 0.4833 s/iter. Eval: 0.0514 s/iter. Total: 0.5362 s/iter. ETA=0:00:20
[32m[12/16 12:03:17 d2.evaluation.evaluator]: [0mInference done 24/61. Dataloading: 0.0015 s/iter. Inference: 0.3828 s/iter. Eval: 0.0339 s/iter. Total: 0.4182 s/iter. ETA=0:00:15
[32m[12/16 12:03:21 d2.evaluation.evaluator]: [0mInference done 31/60. Dataloading: 0.0015 s/iter. Inference: 0.4756 s/iter. Eval: 0.0468 s/iter. Total: 0.5238 s/iter. ETA=0:00:15
[32m[12/16 12:03:23 d2.evaluation.evaluator]: [0mInference done 37/61. Dataloading: 0.0015 s/iter. Inference: 0.3785 s/iter. Eval: 0.0360 s/iter. Total: 0.4160 s/iter. ETA=0:00:09
[32m[12/16 12:03:26 d2.evaluation.evaluator]: [0mInference done 42/60. Dataloading: 0.0015 s/iter. Inference: 0.4692 s/iter. Eval: 0.0427 s/iter. Total: 0.5134 s/iter. ETA=0:00:09
[32m[12/16 12:03:28 d2.evaluation.evaluator]: [0mInference done 49/61. Dataloading: 0.0015 s/iter. Inference: 0.3828 s/iter. Eval: 0.0366 s/iter. Total: 0.4210 s/iter. ETA=0:00:05
[32m[12/16 12:03:32 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4617 s/iter. Eval: 0.0395 s/iter. Total: 0.5028 s/iter. ETA=0:00:03
[32m[12/16 12:03:33 d2.evaluation.evaluator]: [0mInference done 61/61. Dataloading: 0.0015 s/iter. Inference: 0.3826 s/iter. Eval: 0.0363 s/iter. Total: 0.4205 s/iter. ETA=0:00:00
[32m[12/16 12:03:33 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:23.741163 (0.423949 s / iter per device, on 2 devices)
[32m[12/16 12:03:33 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.382572 s / iter per device, on 2 devices)
[32m[12/16 12:03:33 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 12:03:33 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.2969029775030339
[32m[12/16 12:03:35 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.857193 (0.506494 s / iter per device, on 2 devices)
[32m[12/16 12:03:35 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.461621 s / iter per device, on 2 devices)
[32m[12/16 12:03:35 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.29690, not better than best score 0.30281 @ iteration 1935.
[32m[12/16 12:03:39 d2.utils.events]: [0m eta: 3:29:05  iter: 2179  total_loss: 4.021  loss_cls_stage0: 0.2593  loss_box_reg_stage0: 0.4824  loss_cls_stage1: 0.2739  loss_box_reg_stage1: 1.016  loss_cls_stage2: 0.2858  loss_box_reg_stage2: 0.9841  loss_mask: 0.3046  loss_rpn_cls: 0.09332  loss_rpn_loc: 0.2685  time: 1.6400  data_time: 0.0341  lr: 0.001  max_mem: 14854M
[32m[12/16 12:04:09 d2.utils.events]: [0m eta: 3:28:26  iter: 2199  total_loss: 3.766  loss_cls_stage0: 0.2012  loss_box_reg_stage0: 0.5257  loss_cls_stage1: 0.2373  loss_box_reg_stage1: 0.9721  loss_cls_stage2: 0.2811  loss_box_reg_stage2: 0.9594  loss_mask: 0.2826  loss_rpn_cls: 0.05281  loss_rpn_loc: 0.1969  time: 1.6390  data_time: 0.0282  lr: 0.001  max_mem: 14854M
[32m[12/16 12:04:47 d2.utils.events]: [0m eta: 3:28:06  iter: 2219  total_loss: 3.78  loss_cls_stage0: 0.2684  loss_box_reg_stage0: 0.4714  loss_cls_stage1: 0.2998  loss_box_reg_stage1: 0.9537  loss_cls_stage2: 0.3166  loss_box_reg_stage2: 0.947  loss_mask: 0.2678  loss_rpn_cls: 0.08765  loss_rpn_loc: 0.2179  time: 1.6412  data_time: 0.3936  lr: 0.001  max_mem: 14854M
[32m[12/16 12:05:20 d2.utils.events]: [0m eta: 3:27:28  iter: 2239  total_loss: 3.834  loss_cls_stage0: 0.2406  loss_box_reg_stage0: 0.5028  loss_cls_stage1: 0.2825  loss_box_reg_stage1: 0.9188  loss_cls_stage2: 0.3033  loss_box_reg_stage2: 0.9562  loss_mask: 0.282  loss_rpn_cls: 0.09415  loss_rpn_loc: 0.2281  time: 1.6411  data_time: 0.1841  lr: 0.001  max_mem: 14854M
[32m[12/16 12:05:51 d2.utils.events]: [0m eta: 3:27:18  iter: 2259  total_loss: 3.583  loss_cls_stage0: 0.2283  loss_box_reg_stage0: 0.4781  loss_cls_stage1: 0.2308  loss_box_reg_stage1: 0.9233  loss_cls_stage2: 0.2628  loss_box_reg_stage2: 0.8795  loss_mask: 0.281  loss_rpn_cls: 0.08917  loss_rpn_loc: 0.1849  time: 1.6407  data_time: 0.0439  lr: 0.001  max_mem: 14854M
[32m[12/16 12:06:26 d2.utils.events]: [0m eta: 3:26:57  iter: 2279  total_loss: 3.809  loss_cls_stage0: 0.245  loss_box_reg_stage0: 0.473  loss_cls_stage1: 0.2689  loss_box_reg_stage1: 0.9115  loss_cls_stage2: 0.2849  loss_box_reg_stage2: 0.8996  loss_mask: 0.2886  loss_rpn_cls: 0.08522  loss_rpn_loc: 0.2271  time: 1.6414  data_time: 0.1611  lr: 0.001  max_mem: 14854M
[32m[12/16 12:06:57 d2.utils.events]: [0m eta: 3:26:40  iter: 2299  total_loss: 3.815  loss_cls_stage0: 0.2707  loss_box_reg_stage0: 0.5118  loss_cls_stage1: 0.2933  loss_box_reg_stage1: 0.9154  loss_cls_stage2: 0.2993  loss_box_reg_stage2: 0.9462  loss_mask: 0.2808  loss_rpn_cls: 0.07893  loss_rpn_loc: 0.2059  time: 1.6407  data_time: 0.0625  lr: 0.001  max_mem: 14854M
[32m[12/16 12:07:29 d2.utils.events]: [0m eta: 3:26:01  iter: 2319  total_loss: 3.665  loss_cls_stage0: 0.215  loss_box_reg_stage0: 0.4565  loss_cls_stage1: 0.2401  loss_box_reg_stage1: 0.9381  loss_cls_stage2: 0.271  loss_box_reg_stage2: 1.058  loss_mask: 0.2877  loss_rpn_cls: 0.06475  loss_rpn_loc: 0.1886  time: 1.6402  data_time: 0.0278  lr: 0.001  max_mem: 14854M
[32m[12/16 12:08:01 d2.utils.events]: [0m eta: 3:25:36  iter: 2339  total_loss: 3.679  loss_cls_stage0: 0.2243  loss_box_reg_stage0: 0.4528  loss_cls_stage1: 0.255  loss_box_reg_stage1: 0.8869  loss_cls_stage2: 0.2765  loss_box_reg_stage2: 0.9544  loss_mask: 0.282  loss_rpn_cls: 0.07569  loss_rpn_loc: 0.2208  time: 1.6400  data_time: 0.1121  lr: 0.001  max_mem: 14854M
[32m[12/16 12:08:32 d2.utils.events]: [0m eta: 3:25:04  iter: 2359  total_loss: 3.821  loss_cls_stage0: 0.2804  loss_box_reg_stage0: 0.5119  loss_cls_stage1: 0.2954  loss_box_reg_stage1: 0.9261  loss_cls_stage2: 0.3085  loss_box_reg_stage2: 0.9119  loss_mask: 0.2882  loss_rpn_cls: 0.09584  loss_rpn_loc: 0.2262  time: 1.6391  data_time: 0.0333  lr: 0.001  max_mem: 14854M
[32m[12/16 12:09:02 d2.utils.events]: [0m eta: 3:24:31  iter: 2379  total_loss: 3.865  loss_cls_stage0: 0.2622  loss_box_reg_stage0: 0.5253  loss_cls_stage1: 0.281  loss_box_reg_stage1: 0.956  loss_cls_stage2: 0.3015  loss_box_reg_stage2: 1.006  loss_mask: 0.2812  loss_rpn_cls: 0.07294  loss_rpn_loc: 0.1984  time: 1.6379  data_time: 0.1484  lr: 0.001  max_mem: 14854M
[32m[12/16 12:09:36 d2.utils.events]: [0m eta: 3:24:01  iter: 2399  total_loss: 3.756  loss_cls_stage0: 0.2741  loss_box_reg_stage0: 0.4894  loss_cls_stage1: 0.2723  loss_box_reg_stage1: 0.9745  loss_cls_stage2: 0.293  loss_box_reg_stage2: 0.9836  loss_mask: 0.2763  loss_rpn_cls: 0.08384  loss_rpn_loc: 0.2179  time: 1.6385  data_time: 0.1273  lr: 0.001  max_mem: 14854M
[32m[12/16 12:10:08 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.23510, not better than best score 0.24647 @ iteration 1935.
[32m[12/16 12:10:09 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:10:09 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:10:09 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:10:09 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:10:09 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:10:09 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 12:10:11 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:10:11 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:10:11 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:10:11 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:10:11 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:10:11 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 12:10:17 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4162 s/iter. Eval: 0.0377 s/iter. Total: 0.4553 s/iter. ETA=0:00:22
[32m[12/16 12:10:18 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0012 s/iter. Inference: 0.3693 s/iter. Eval: 0.0276 s/iter. Total: 0.3981 s/iter. ETA=0:00:19
[32m[12/16 12:10:22 d2.evaluation.evaluator]: [0mInference done 21/60. Dataloading: 0.0014 s/iter. Inference: 0.4359 s/iter. Eval: 0.0525 s/iter. Total: 0.4899 s/iter. ETA=0:00:19
[32m[12/16 12:10:23 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0015 s/iter. Inference: 0.3786 s/iter. Eval: 0.0333 s/iter. Total: 0.4134 s/iter. ETA=0:00:15
[32m[12/16 12:10:27 d2.evaluation.evaluator]: [0mInference done 31/60. Dataloading: 0.0015 s/iter. Inference: 0.4506 s/iter. Eval: 0.0478 s/iter. Total: 0.4999 s/iter. ETA=0:00:14
[32m[12/16 12:10:28 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3795 s/iter. Eval: 0.0376 s/iter. Total: 0.4187 s/iter. ETA=0:00:10
[32m[12/16 12:10:33 d2.evaluation.evaluator]: [0mInference done 42/60. Dataloading: 0.0015 s/iter. Inference: 0.4545 s/iter. Eval: 0.0440 s/iter. Total: 0.5000 s/iter. ETA=0:00:09
[32m[12/16 12:10:34 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3869 s/iter. Eval: 0.0382 s/iter. Total: 0.4266 s/iter. ETA=0:00:05
[32m[12/16 12:10:38 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4516 s/iter. Eval: 0.0410 s/iter. Total: 0.4941 s/iter. ETA=0:00:03
[32m[12/16 12:10:39 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3861 s/iter. Eval: 0.0378 s/iter. Total: 0.4255 s/iter. ETA=0:00:00
[32m[12/16 12:10:40 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.018036 (0.428893 s / iter per device, on 2 devices)
[32m[12/16 12:10:40 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.386492 s / iter per device, on 2 devices)
[32m[12/16 12:10:40 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 12:10:40 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.2904614737053178
[32m[12/16 12:10:42 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.412045 (0.498401 s / iter per device, on 2 devices)
[32m[12/16 12:10:42 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:24 (0.451891 s / iter per device, on 2 devices)
[32m[12/16 12:10:42 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.29046, not better than best score 0.30281 @ iteration 1935.
[32m[12/16 12:10:42 d2.utils.events]: [0m eta: 3:23:31  iter: 2419  total_loss: 3.803  loss_cls_stage0: 0.2686  loss_box_reg_stage0: 0.489  loss_cls_stage1: 0.2975  loss_box_reg_stage1: 0.8825  loss_cls_stage2: 0.2969  loss_box_reg_stage2: 0.8953  loss_mask: 0.3037  loss_rpn_cls: 0.1031  loss_rpn_loc: 0.2313  time: 1.6384  data_time: 0.0422  lr: 0.001  max_mem: 14854M
[32m[12/16 12:11:13 d2.utils.events]: [0m eta: 3:23:01  iter: 2439  total_loss: 3.843  loss_cls_stage0: 0.2632  loss_box_reg_stage0: 0.4773  loss_cls_stage1: 0.2842  loss_box_reg_stage1: 0.8982  loss_cls_stage2: 0.3084  loss_box_reg_stage2: 1.026  loss_mask: 0.2895  loss_rpn_cls: 0.08986  loss_rpn_loc: 0.2278  time: 1.6378  data_time: 0.0442  lr: 0.001  max_mem: 14854M
[32m[12/16 12:11:46 d2.utils.events]: [0m eta: 3:22:57  iter: 2459  total_loss: 3.571  loss_cls_stage0: 0.2332  loss_box_reg_stage0: 0.4802  loss_cls_stage1: 0.2412  loss_box_reg_stage1: 0.9255  loss_cls_stage2: 0.2609  loss_box_reg_stage2: 1.048  loss_mask: 0.2673  loss_rpn_cls: 0.05284  loss_rpn_loc: 0.2075  time: 1.6378  data_time: 0.0759  lr: 0.001  max_mem: 14854M
[32m[12/16 12:12:16 d2.utils.events]: [0m eta: 3:21:54  iter: 2479  total_loss: 3.691  loss_cls_stage0: 0.2501  loss_box_reg_stage0: 0.4788  loss_cls_stage1: 0.2653  loss_box_reg_stage1: 0.8965  loss_cls_stage2: 0.2826  loss_box_reg_stage2: 0.9595  loss_mask: 0.2847  loss_rpn_cls: 0.08307  loss_rpn_loc: 0.1781  time: 1.6368  data_time: 0.0301  lr: 0.001  max_mem: 14854M
[32m[12/16 12:12:50 d2.utils.events]: [0m eta: 3:21:34  iter: 2499  total_loss: 3.719  loss_cls_stage0: 0.2561  loss_box_reg_stage0: 0.479  loss_cls_stage1: 0.2556  loss_box_reg_stage1: 0.8739  loss_cls_stage2: 0.2799  loss_box_reg_stage2: 0.9252  loss_mask: 0.2859  loss_rpn_cls: 0.0888  loss_rpn_loc: 0.2281  time: 1.6374  data_time: 0.2201  lr: 0.001  max_mem: 14854M
[32m[12/16 12:13:26 d2.utils.events]: [0m eta: 3:21:02  iter: 2519  total_loss: 3.809  loss_cls_stage0: 0.2829  loss_box_reg_stage0: 0.521  loss_cls_stage1: 0.3042  loss_box_reg_stage1: 0.9497  loss_cls_stage2: 0.316  loss_box_reg_stage2: 0.8883  loss_mask: 0.2973  loss_rpn_cls: 0.09494  loss_rpn_loc: 0.2229  time: 1.6384  data_time: 0.1858  lr: 0.001  max_mem: 14854M
[32m[12/16 12:14:00 d2.utils.events]: [0m eta: 3:20:53  iter: 2539  total_loss: 3.947  loss_cls_stage0: 0.2985  loss_box_reg_stage0: 0.4923  loss_cls_stage1: 0.3092  loss_box_reg_stage1: 0.9045  loss_cls_stage2: 0.3132  loss_box_reg_stage2: 0.9807  loss_mask: 0.2807  loss_rpn_cls: 0.07651  loss_rpn_loc: 0.2011  time: 1.6389  data_time: 0.0393  lr: 0.001  max_mem: 14854M
[32m[12/16 12:14:33 d2.utils.events]: [0m eta: 3:20:21  iter: 2559  total_loss: 3.704  loss_cls_stage0: 0.2146  loss_box_reg_stage0: 0.4623  loss_cls_stage1: 0.2443  loss_box_reg_stage1: 0.8759  loss_cls_stage2: 0.2639  loss_box_reg_stage2: 0.9549  loss_mask: 0.2872  loss_rpn_cls: 0.0674  loss_rpn_loc: 0.1892  time: 1.6390  data_time: 0.2155  lr: 0.001  max_mem: 14854M
[32m[12/16 12:15:06 d2.utils.events]: [0m eta: 3:19:25  iter: 2579  total_loss: 3.87  loss_cls_stage0: 0.2564  loss_box_reg_stage0: 0.4863  loss_cls_stage1: 0.268  loss_box_reg_stage1: 0.9422  loss_cls_stage2: 0.2906  loss_box_reg_stage2: 0.9816  loss_mask: 0.301  loss_rpn_cls: 0.09241  loss_rpn_loc: 0.2309  time: 1.6391  data_time: 0.1942  lr: 0.001  max_mem: 14854M
[32m[12/16 12:15:38 d2.utils.events]: [0m eta: 3:18:41  iter: 2599  total_loss: 4.017  loss_cls_stage0: 0.2864  loss_box_reg_stage0: 0.4997  loss_cls_stage1: 0.3012  loss_box_reg_stage1: 0.9421  loss_cls_stage2: 0.3181  loss_box_reg_stage2: 0.9966  loss_mask: 0.2808  loss_rpn_cls: 0.1007  loss_rpn_loc: 0.2152  time: 1.6391  data_time: 0.2118  lr: 0.001  max_mem: 14854M
[32m[12/16 12:16:11 d2.utils.events]: [0m eta: 3:18:05  iter: 2619  total_loss: 3.947  loss_cls_stage0: 0.2635  loss_box_reg_stage0: 0.5044  loss_cls_stage1: 0.2846  loss_box_reg_stage1: 0.9079  loss_cls_stage2: 0.296  loss_box_reg_stage2: 0.983  loss_mask: 0.2775  loss_rpn_cls: 0.08462  loss_rpn_loc: 0.2133  time: 1.6391  data_time: 0.1057  lr: 0.001  max_mem: 14854M
[32m[12/16 12:16:43 d2.utils.events]: [0m eta: 3:17:14  iter: 2639  total_loss: 3.937  loss_cls_stage0: 0.273  loss_box_reg_stage0: 0.513  loss_cls_stage1: 0.2806  loss_box_reg_stage1: 0.9599  loss_cls_stage2: 0.2958  loss_box_reg_stage2: 0.9722  loss_mask: 0.2907  loss_rpn_cls: 0.07722  loss_rpn_loc: 0.199  time: 1.6385  data_time: 0.0337  lr: 0.001  max_mem: 14854M
[32m[12/16 12:17:16 d2.utils.events]: [0m eta: 3:16:54  iter: 2659  total_loss: 3.903  loss_cls_stage0: 0.2533  loss_box_reg_stage0: 0.4962  loss_cls_stage1: 0.2601  loss_box_reg_stage1: 0.974  loss_cls_stage2: 0.2813  loss_box_reg_stage2: 1.089  loss_mask: 0.2755  loss_rpn_cls: 0.08185  loss_rpn_loc: 0.2093  time: 1.6390  data_time: 0.1002  lr: 0.001  max_mem: 14854M
[32m[12/16 12:17:19 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.23755, not better than best score 0.24647 @ iteration 1935.
[32m[12/16 12:17:20 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:17:20 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:17:20 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:17:20 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:17:20 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:17:20 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 12:17:22 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:17:22 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:17:22 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:17:22 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:17:22 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:17:22 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 12:17:29 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.5706 s/iter. Eval: 0.0373 s/iter. Total: 0.6093 s/iter. ETA=0:00:29
[32m[12/16 12:17:30 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.4004 s/iter. Eval: 0.0249 s/iter. Total: 0.4266 s/iter. ETA=0:00:21
[32m[12/16 12:17:34 d2.evaluation.evaluator]: [0mInference done 21/60. Dataloading: 0.0015 s/iter. Inference: 0.5007 s/iter. Eval: 0.0519 s/iter. Total: 0.5542 s/iter. ETA=0:00:21
[32m[12/16 12:17:35 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0015 s/iter. Inference: 0.3911 s/iter. Eval: 0.0319 s/iter. Total: 0.4245 s/iter. ETA=0:00:16
[32m[12/16 12:17:39 d2.evaluation.evaluator]: [0mInference done 32/60. Dataloading: 0.0015 s/iter. Inference: 0.4817 s/iter. Eval: 0.0464 s/iter. Total: 0.5296 s/iter. ETA=0:00:14
[32m[12/16 12:17:40 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3934 s/iter. Eval: 0.0366 s/iter. Total: 0.4316 s/iter. ETA=0:00:11
[32m[12/16 12:17:45 d2.evaluation.evaluator]: [0mInference done 43/60. Dataloading: 0.0015 s/iter. Inference: 0.4732 s/iter. Eval: 0.0426 s/iter. Total: 0.5173 s/iter. ETA=0:00:08
[32m[12/16 12:17:45 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3895 s/iter. Eval: 0.0370 s/iter. Total: 0.4281 s/iter. ETA=0:00:05
[32m[12/16 12:17:50 d2.evaluation.evaluator]: [0mInference done 54/60. Dataloading: 0.0015 s/iter. Inference: 0.4638 s/iter. Eval: 0.0397 s/iter. Total: 0.5051 s/iter. ETA=0:00:03
[32m[12/16 12:17:50 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3903 s/iter. Eval: 0.0367 s/iter. Total: 0.4286 s/iter. ETA=0:00:00
[32m[12/16 12:17:51 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.198666 (0.432119 s / iter per device, on 2 devices)
[32m[12/16 12:17:51 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.390473 s / iter per device, on 2 devices)
[32m[12/16 12:17:51 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 12:17:51 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.30944418950848324
[32m[12/16 12:17:53 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:28.066600 (0.510302 s / iter per device, on 2 devices)
[32m[12/16 12:17:53 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.465010 s / iter per device, on 2 devices)
[32m[12/16 12:17:55 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.30944, better than last best score 0.30281 @ iteration 1935.
[32m[12/16 12:18:28 d2.utils.events]: [0m eta: 3:15:48  iter: 2679  total_loss: 3.676  loss_cls_stage0: 0.2134  loss_box_reg_stage0: 0.4515  loss_cls_stage1: 0.2244  loss_box_reg_stage1: 0.9273  loss_cls_stage2: 0.2665  loss_box_reg_stage2: 1.093  loss_mask: 0.2599  loss_rpn_cls: 0.06736  loss_rpn_loc: 0.2161  time: 1.6400  data_time: 0.3204  lr: 0.001  max_mem: 14854M
[32m[12/16 12:19:06 d2.utils.events]: [0m eta: 3:15:16  iter: 2699  total_loss: 3.707  loss_cls_stage0: 0.2597  loss_box_reg_stage0: 0.484  loss_cls_stage1: 0.2815  loss_box_reg_stage1: 0.9131  loss_cls_stage2: 0.3127  loss_box_reg_stage2: 0.9255  loss_mask: 0.2798  loss_rpn_cls: 0.09945  loss_rpn_loc: 0.2048  time: 1.6420  data_time: 0.3019  lr: 0.001  max_mem: 14854M
[32m[12/16 12:19:36 d2.utils.events]: [0m eta: 3:14:27  iter: 2719  total_loss: 3.883  loss_cls_stage0: 0.2419  loss_box_reg_stage0: 0.4823  loss_cls_stage1: 0.2523  loss_box_reg_stage1: 0.9604  loss_cls_stage2: 0.2797  loss_box_reg_stage2: 1.056  loss_mask: 0.2642  loss_rpn_cls: 0.07961  loss_rpn_loc: 0.222  time: 1.6407  data_time: 0.0397  lr: 0.001  max_mem: 14854M
[32m[12/16 12:20:08 d2.utils.events]: [0m eta: 3:13:50  iter: 2739  total_loss: 3.765  loss_cls_stage0: 0.2183  loss_box_reg_stage0: 0.4825  loss_cls_stage1: 0.2508  loss_box_reg_stage1: 0.8799  loss_cls_stage2: 0.2782  loss_box_reg_stage2: 0.9843  loss_mask: 0.2756  loss_rpn_cls: 0.0934  loss_rpn_loc: 0.2189  time: 1.6406  data_time: 0.0408  lr: 0.001  max_mem: 14854M
[32m[12/16 12:20:44 d2.utils.events]: [0m eta: 3:12:58  iter: 2759  total_loss: 3.83  loss_cls_stage0: 0.2565  loss_box_reg_stage0: 0.4638  loss_cls_stage1: 0.2861  loss_box_reg_stage1: 0.9314  loss_cls_stage2: 0.3062  loss_box_reg_stage2: 0.9348  loss_mask: 0.2731  loss_rpn_cls: 0.08832  loss_rpn_loc: 0.2374  time: 1.6416  data_time: 0.3032  lr: 0.001  max_mem: 14854M
[32m[12/16 12:21:15 d2.utils.events]: [0m eta: 3:12:09  iter: 2779  total_loss: 3.748  loss_cls_stage0: 0.215  loss_box_reg_stage0: 0.4616  loss_cls_stage1: 0.2377  loss_box_reg_stage1: 0.956  loss_cls_stage2: 0.2636  loss_box_reg_stage2: 1.023  loss_mask: 0.2574  loss_rpn_cls: 0.06874  loss_rpn_loc: 0.1992  time: 1.6411  data_time: 0.0401  lr: 0.001  max_mem: 14854M
[32m[12/16 12:21:50 d2.utils.events]: [0m eta: 3:11:48  iter: 2799  total_loss: 3.629  loss_cls_stage0: 0.2423  loss_box_reg_stage0: 0.4638  loss_cls_stage1: 0.2676  loss_box_reg_stage1: 0.9016  loss_cls_stage2: 0.285  loss_box_reg_stage2: 0.9559  loss_mask: 0.2722  loss_rpn_cls: 0.08259  loss_rpn_loc: 0.2176  time: 1.6419  data_time: 0.0897  lr: 0.001  max_mem: 14854M
[32m[12/16 12:22:22 d2.utils.events]: [0m eta: 3:12:04  iter: 2819  total_loss: 3.847  loss_cls_stage0: 0.2426  loss_box_reg_stage0: 0.4973  loss_cls_stage1: 0.2521  loss_box_reg_stage1: 0.9448  loss_cls_stage2: 0.2768  loss_box_reg_stage2: 1.056  loss_mask: 0.2765  loss_rpn_cls: 0.07769  loss_rpn_loc: 0.1987  time: 1.6417  data_time: 0.0310  lr: 0.001  max_mem: 14854M
[32m[12/16 12:23:00 d2.utils.events]: [0m eta: 3:11:36  iter: 2839  total_loss: 3.778  loss_cls_stage0: 0.2606  loss_box_reg_stage0: 0.4515  loss_cls_stage1: 0.3032  loss_box_reg_stage1: 0.9153  loss_cls_stage2: 0.3163  loss_box_reg_stage2: 0.9758  loss_mask: 0.2781  loss_rpn_cls: 0.08267  loss_rpn_loc: 0.2062  time: 1.6435  data_time: 0.3942  lr: 0.001  max_mem: 14854M
[32m[12/16 12:23:33 d2.utils.events]: [0m eta: 3:11:10  iter: 2859  total_loss: 3.819  loss_cls_stage0: 0.2347  loss_box_reg_stage0: 0.5028  loss_cls_stage1: 0.2429  loss_box_reg_stage1: 0.9753  loss_cls_stage2: 0.276  loss_box_reg_stage2: 1.021  loss_mask: 0.2788  loss_rpn_cls: 0.03714  loss_rpn_loc: 0.1625  time: 1.6435  data_time: 0.0950  lr: 0.001  max_mem: 14854M
[32m[12/16 12:24:05 d2.utils.events]: [0m eta: 3:10:44  iter: 2879  total_loss: 3.829  loss_cls_stage0: 0.2438  loss_box_reg_stage0: 0.4868  loss_cls_stage1: 0.2692  loss_box_reg_stage1: 0.9437  loss_cls_stage2: 0.2936  loss_box_reg_stage2: 0.9358  loss_mask: 0.2886  loss_rpn_cls: 0.07777  loss_rpn_loc: 0.2225  time: 1.6430  data_time: 0.0426  lr: 0.001  max_mem: 14854M
[32m[12/16 12:24:36 d2.utils.events]: [0m eta: 3:09:59  iter: 2899  total_loss: 3.851  loss_cls_stage0: 0.2314  loss_box_reg_stage0: 0.509  loss_cls_stage1: 0.2645  loss_box_reg_stage1: 0.908  loss_cls_stage2: 0.278  loss_box_reg_stage2: 0.9255  loss_mask: 0.2903  loss_rpn_cls: 0.07064  loss_rpn_loc: 0.2438  time: 1.6425  data_time: 0.0232  lr: 0.001  max_mem: 14854M
[32m[12/16 12:24:44 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.25018, better than last best score 0.24647 @ iteration 1935.
[32m[12/16 12:24:44 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:24:45 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:24:45 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:24:45 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:24:45 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:24:45 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 12:24:46 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:24:47 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:24:47 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:24:47 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:24:47 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:24:47 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 12:24:53 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4847 s/iter. Eval: 0.0373 s/iter. Total: 0.5233 s/iter. ETA=0:00:25
[32m[12/16 12:24:54 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0012 s/iter. Inference: 0.3994 s/iter. Eval: 0.0234 s/iter. Total: 0.4240 s/iter. ETA=0:00:21
[32m[12/16 12:24:58 d2.evaluation.evaluator]: [0mInference done 21/60. Dataloading: 0.0015 s/iter. Inference: 0.4617 s/iter. Eval: 0.0522 s/iter. Total: 0.5155 s/iter. ETA=0:00:20
[32m[12/16 12:25:00 d2.evaluation.evaluator]: [0mInference done 24/61. Dataloading: 0.0014 s/iter. Inference: 0.3855 s/iter. Eval: 0.0329 s/iter. Total: 0.4198 s/iter. ETA=0:00:15
[32m[12/16 12:25:03 d2.evaluation.evaluator]: [0mInference done 31/60. Dataloading: 0.0015 s/iter. Inference: 0.4676 s/iter. Eval: 0.0471 s/iter. Total: 0.5162 s/iter. ETA=0:00:14
[32m[12/16 12:25:05 d2.evaluation.evaluator]: [0mInference done 36/61. Dataloading: 0.0014 s/iter. Inference: 0.3871 s/iter. Eval: 0.0344 s/iter. Total: 0.4230 s/iter. ETA=0:00:10
[32m[12/16 12:25:09 d2.evaluation.evaluator]: [0mInference done 42/60. Dataloading: 0.0015 s/iter. Inference: 0.4619 s/iter. Eval: 0.0429 s/iter. Total: 0.5064 s/iter. ETA=0:00:09
[32m[12/16 12:25:10 d2.evaluation.evaluator]: [0mInference done 48/61. Dataloading: 0.0015 s/iter. Inference: 0.3892 s/iter. Eval: 0.0353 s/iter. Total: 0.4261 s/iter. ETA=0:00:05
[32m[12/16 12:25:14 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4546 s/iter. Eval: 0.0396 s/iter. Total: 0.4958 s/iter. ETA=0:00:03
[32m[12/16 12:25:15 d2.evaluation.evaluator]: [0mInference done 60/61. Dataloading: 0.0015 s/iter. Inference: 0.3919 s/iter. Eval: 0.0355 s/iter. Total: 0.4290 s/iter. ETA=0:00:00
[32m[12/16 12:25:16 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.212070 (0.432358 s / iter per device, on 2 devices)
[32m[12/16 12:25:16 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.391775 s / iter per device, on 2 devices)
[32m[12/16 12:25:16 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 12:25:16 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.3085354393022622
[32m[12/16 12:25:18 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.720096 (0.504002 s / iter per device, on 2 devices)
[32m[12/16 12:25:18 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.458800 s / iter per device, on 2 devices)
[32m[12/16 12:25:18 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.30854, not better than best score 0.30944 @ iteration 2661.
[32m[12/16 12:25:43 d2.utils.events]: [0m eta: 3:09:23  iter: 2919  total_loss: 3.693  loss_cls_stage0: 0.2357  loss_box_reg_stage0: 0.4939  loss_cls_stage1: 0.2531  loss_box_reg_stage1: 0.9556  loss_cls_stage2: 0.2828  loss_box_reg_stage2: 0.9544  loss_mask: 0.2766  loss_rpn_cls: 0.07019  loss_rpn_loc: 0.1971  time: 1.6427  data_time: 0.0900  lr: 0.001  max_mem: 14854M
[32m[12/16 12:26:13 d2.utils.events]: [0m eta: 3:08:52  iter: 2939  total_loss: 3.789  loss_cls_stage0: 0.2427  loss_box_reg_stage0: 0.46  loss_cls_stage1: 0.2579  loss_box_reg_stage1: 0.9227  loss_cls_stage2: 0.2805  loss_box_reg_stage2: 1.021  loss_mask: 0.2736  loss_rpn_cls: 0.07402  loss_rpn_loc: 0.1823  time: 1.6418  data_time: 0.0567  lr: 0.001  max_mem: 14854M
[32m[12/16 12:26:44 d2.utils.events]: [0m eta: 3:08:20  iter: 2959  total_loss: 3.876  loss_cls_stage0: 0.2503  loss_box_reg_stage0: 0.4689  loss_cls_stage1: 0.2847  loss_box_reg_stage1: 0.9622  loss_cls_stage2: 0.3104  loss_box_reg_stage2: 0.9638  loss_mask: 0.2934  loss_rpn_cls: 0.07834  loss_rpn_loc: 0.2251  time: 1.6412  data_time: 0.0813  lr: 0.001  max_mem: 14854M
[32m[12/16 12:27:16 d2.utils.events]: [0m eta: 3:07:27  iter: 2979  total_loss: 3.998  loss_cls_stage0: 0.236  loss_box_reg_stage0: 0.4881  loss_cls_stage1: 0.2617  loss_box_reg_stage1: 0.9496  loss_cls_stage2: 0.2878  loss_box_reg_stage2: 1.063  loss_mask: 0.2812  loss_rpn_cls: 0.0725  loss_rpn_loc: 0.1975  time: 1.6407  data_time: 0.0238  lr: 0.001  max_mem: 14854M
[32m[12/16 12:27:52 d2.utils.events]: [0m eta: 3:06:46  iter: 2999  total_loss: 3.877  loss_cls_stage0: 0.2584  loss_box_reg_stage0: 0.4896  loss_cls_stage1: 0.2657  loss_box_reg_stage1: 0.9502  loss_cls_stage2: 0.2768  loss_box_reg_stage2: 1.035  loss_mask: 0.2771  loss_rpn_cls: 0.08843  loss_rpn_loc: 0.2077  time: 1.6419  data_time: 0.2486  lr: 0.001  max_mem: 14854M
[32m[12/16 12:28:27 d2.utils.events]: [0m eta: 3:06:09  iter: 3019  total_loss: 3.881  loss_cls_stage0: 0.225  loss_box_reg_stage0: 0.4888  loss_cls_stage1: 0.253  loss_box_reg_stage1: 0.9657  loss_cls_stage2: 0.2865  loss_box_reg_stage2: 0.9871  loss_mask: 0.274  loss_rpn_cls: 0.09394  loss_rpn_loc: 0.211  time: 1.6426  data_time: 0.2652  lr: 0.001  max_mem: 14854M
[32m[12/16 12:29:00 d2.utils.events]: [0m eta: 3:05:31  iter: 3039  total_loss: 3.616  loss_cls_stage0: 0.2158  loss_box_reg_stage0: 0.4445  loss_cls_stage1: 0.2321  loss_box_reg_stage1: 0.909  loss_cls_stage2: 0.2475  loss_box_reg_stage2: 1.027  loss_mask: 0.2664  loss_rpn_cls: 0.06603  loss_rpn_loc: 0.2311  time: 1.6425  data_time: 0.0290  lr: 0.001  max_mem: 14854M
[32m[12/16 12:29:33 d2.utils.events]: [0m eta: 3:05:16  iter: 3059  total_loss: 3.686  loss_cls_stage0: 0.2451  loss_box_reg_stage0: 0.491  loss_cls_stage1: 0.2642  loss_box_reg_stage1: 0.8959  loss_cls_stage2: 0.2816  loss_box_reg_stage2: 0.9579  loss_mask: 0.2829  loss_rpn_cls: 0.08571  loss_rpn_loc: 0.2028  time: 1.6428  data_time: 0.1382  lr: 0.001  max_mem: 14854M
[32m[12/16 12:30:10 d2.utils.events]: [0m eta: 3:04:00  iter: 3079  total_loss: 3.843  loss_cls_stage0: 0.2317  loss_box_reg_stage0: 0.4855  loss_cls_stage1: 0.247  loss_box_reg_stage1: 0.9416  loss_cls_stage2: 0.2844  loss_box_reg_stage2: 1.072  loss_mask: 0.2769  loss_rpn_cls: 0.06203  loss_rpn_loc: 0.22  time: 1.6440  data_time: 0.2974  lr: 0.001  max_mem: 14854M
[32m[12/16 12:30:44 d2.utils.events]: [0m eta: 3:03:14  iter: 3099  total_loss: 3.745  loss_cls_stage0: 0.2751  loss_box_reg_stage0: 0.4585  loss_cls_stage1: 0.2958  loss_box_reg_stage1: 0.834  loss_cls_stage2: 0.3092  loss_box_reg_stage2: 0.8464  loss_mask: 0.281  loss_rpn_cls: 0.1188  loss_rpn_loc: 0.2535  time: 1.6443  data_time: 0.1613  lr: 0.001  max_mem: 14854M
[32m[12/16 12:31:17 d2.utils.events]: [0m eta: 3:03:06  iter: 3119  total_loss: 3.788  loss_cls_stage0: 0.2514  loss_box_reg_stage0: 0.4724  loss_cls_stage1: 0.2837  loss_box_reg_stage1: 0.94  loss_cls_stage2: 0.3049  loss_box_reg_stage2: 1.016  loss_mask: 0.2721  loss_rpn_cls: 0.08538  loss_rpn_loc: 0.2207  time: 1.6443  data_time: 0.0325  lr: 0.001  max_mem: 14854M
[32m[12/16 12:31:49 d2.utils.events]: [0m eta: 3:02:34  iter: 3139  total_loss: 3.587  loss_cls_stage0: 0.2436  loss_box_reg_stage0: 0.4646  loss_cls_stage1: 0.2678  loss_box_reg_stage1: 0.8938  loss_cls_stage2: 0.2812  loss_box_reg_stage2: 0.9836  loss_mask: 0.28  loss_rpn_cls: 0.0813  loss_rpn_loc: 0.2402  time: 1.6440  data_time: 0.0484  lr: 0.001  max_mem: 14854M
[32m[12/16 12:31:58 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.25069, better than last best score 0.25018 @ iteration 2661.
[32m[12/16 12:31:58 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:31:59 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:31:59 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:31:59 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:31:59 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:31:59 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 12:32:00 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:32:00 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:32:00 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:32:00 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:32:01 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:32:01 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 12:32:07 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4403 s/iter. Eval: 0.0387 s/iter. Total: 0.4803 s/iter. ETA=0:00:23
[32m[12/16 12:32:08 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.3891 s/iter. Eval: 0.0271 s/iter. Total: 0.4175 s/iter. ETA=0:00:20
[32m[12/16 12:32:12 d2.evaluation.evaluator]: [0mInference done 21/60. Dataloading: 0.0015 s/iter. Inference: 0.4489 s/iter. Eval: 0.0534 s/iter. Total: 0.5038 s/iter. ETA=0:00:19
[32m[12/16 12:32:13 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0015 s/iter. Inference: 0.3966 s/iter. Eval: 0.0329 s/iter. Total: 0.4309 s/iter. ETA=0:00:16
[32m[12/16 12:32:17 d2.evaluation.evaluator]: [0mInference done 32/60. Dataloading: 0.0015 s/iter. Inference: 0.4409 s/iter. Eval: 0.0473 s/iter. Total: 0.4898 s/iter. ETA=0:00:13
[32m[12/16 12:32:18 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3895 s/iter. Eval: 0.0378 s/iter. Total: 0.4288 s/iter. ETA=0:00:11
[32m[12/16 12:32:22 d2.evaluation.evaluator]: [0mInference done 43/60. Dataloading: 0.0015 s/iter. Inference: 0.4421 s/iter. Eval: 0.0437 s/iter. Total: 0.4874 s/iter. ETA=0:00:08
[32m[12/16 12:32:24 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3932 s/iter. Eval: 0.0378 s/iter. Total: 0.4325 s/iter. ETA=0:00:06
[32m[12/16 12:32:28 d2.evaluation.evaluator]: [0mInference done 54/60. Dataloading: 0.0015 s/iter. Inference: 0.4448 s/iter. Eval: 0.0410 s/iter. Total: 0.4874 s/iter. ETA=0:00:02
[32m[12/16 12:32:29 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3923 s/iter. Eval: 0.0373 s/iter. Total: 0.4312 s/iter. ETA=0:00:00
[32m[12/16 12:32:30 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.343743 (0.434710 s / iter per device, on 2 devices)
[32m[12/16 12:32:30 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.392352 s / iter per device, on 2 devices)
[32m[12/16 12:32:30 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 12:32:30 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.2941364998626658
[32m[12/16 12:32:31 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.144895 (0.493544 s / iter per device, on 2 devices)
[32m[12/16 12:32:31 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:24 (0.446283 s / iter per device, on 2 devices)
[32m[12/16 12:32:31 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.29414, not better than best score 0.30944 @ iteration 2661.
[32m[12/16 12:32:54 d2.utils.events]: [0m eta: 3:01:44  iter: 3159  total_loss: 3.71  loss_cls_stage0: 0.2314  loss_box_reg_stage0: 0.5057  loss_cls_stage1: 0.248  loss_box_reg_stage1: 0.9134  loss_cls_stage2: 0.2653  loss_box_reg_stage2: 0.9664  loss_mask: 0.2813  loss_rpn_cls: 0.0689  loss_rpn_loc: 0.2119  time: 1.6440  data_time: 0.0463  lr: 0.001  max_mem: 14854M
[32m[12/16 12:33:26 d2.utils.events]: [0m eta: 3:00:54  iter: 3179  total_loss: 4.111  loss_cls_stage0: 0.2655  loss_box_reg_stage0: 0.5197  loss_cls_stage1: 0.2806  loss_box_reg_stage1: 0.9649  loss_cls_stage2: 0.3057  loss_box_reg_stage2: 1.031  loss_mask: 0.2838  loss_rpn_cls: 0.08856  loss_rpn_loc: 0.2328  time: 1.6436  data_time: 0.1181  lr: 0.001  max_mem: 14854M
[32m[12/16 12:33:58 d2.utils.events]: [0m eta: 3:00:19  iter: 3199  total_loss: 3.93  loss_cls_stage0: 0.2116  loss_box_reg_stage0: 0.4772  loss_cls_stage1: 0.2345  loss_box_reg_stage1: 0.9774  loss_cls_stage2: 0.2863  loss_box_reg_stage2: 1.153  loss_mask: 0.269  loss_rpn_cls: 0.05195  loss_rpn_loc: 0.2224  time: 1.6433  data_time: 0.0289  lr: 0.001  max_mem: 14854M
[32m[12/16 12:34:32 d2.utils.events]: [0m eta: 3:00:01  iter: 3219  total_loss: 3.91  loss_cls_stage0: 0.2401  loss_box_reg_stage0: 0.4624  loss_cls_stage1: 0.2695  loss_box_reg_stage1: 0.946  loss_cls_stage2: 0.2948  loss_box_reg_stage2: 1.022  loss_mask: 0.2891  loss_rpn_cls: 0.06571  loss_rpn_loc: 0.222  time: 1.6436  data_time: 0.0618  lr: 0.001  max_mem: 14854M
[32m[12/16 12:35:05 d2.utils.events]: [0m eta: 2:59:29  iter: 3239  total_loss: 3.804  loss_cls_stage0: 0.2678  loss_box_reg_stage0: 0.4705  loss_cls_stage1: 0.2977  loss_box_reg_stage1: 0.8988  loss_cls_stage2: 0.2896  loss_box_reg_stage2: 0.9579  loss_mask: 0.285  loss_rpn_cls: 0.075  loss_rpn_loc: 0.2084  time: 1.6438  data_time: 0.1992  lr: 0.001  max_mem: 14854M
[32m[12/16 12:35:39 d2.utils.events]: [0m eta: 2:59:04  iter: 3259  total_loss: 3.553  loss_cls_stage0: 0.2443  loss_box_reg_stage0: 0.4453  loss_cls_stage1: 0.2529  loss_box_reg_stage1: 0.887  loss_cls_stage2: 0.2662  loss_box_reg_stage2: 0.9727  loss_mask: 0.2721  loss_rpn_cls: 0.07913  loss_rpn_loc: 0.1715  time: 1.6439  data_time: 0.1146  lr: 0.001  max_mem: 14854M
[32m[12/16 12:36:10 d2.utils.events]: [0m eta: 2:58:20  iter: 3279  total_loss: 3.843  loss_cls_stage0: 0.2179  loss_box_reg_stage0: 0.4563  loss_cls_stage1: 0.2378  loss_box_reg_stage1: 0.9462  loss_cls_stage2: 0.2628  loss_box_reg_stage2: 1.084  loss_mask: 0.26  loss_rpn_cls: 0.08447  loss_rpn_loc: 0.1969  time: 1.6435  data_time: 0.0552  lr: 0.001  max_mem: 14854M
[32m[12/16 12:36:41 d2.utils.events]: [0m eta: 2:57:50  iter: 3299  total_loss: 3.598  loss_cls_stage0: 0.2248  loss_box_reg_stage0: 0.4508  loss_cls_stage1: 0.25  loss_box_reg_stage1: 0.8847  loss_cls_stage2: 0.2623  loss_box_reg_stage2: 0.9825  loss_mask: 0.2713  loss_rpn_cls: 0.08826  loss_rpn_loc: 0.1868  time: 1.6428  data_time: 0.0234  lr: 0.001  max_mem: 14854M
[32m[12/16 12:37:13 d2.utils.events]: [0m eta: 2:57:18  iter: 3319  total_loss: 3.744  loss_cls_stage0: 0.2555  loss_box_reg_stage0: 0.4866  loss_cls_stage1: 0.2625  loss_box_reg_stage1: 0.9214  loss_cls_stage2: 0.3104  loss_box_reg_stage2: 1.029  loss_mask: 0.2882  loss_rpn_cls: 0.08667  loss_rpn_loc: 0.1998  time: 1.6425  data_time: 0.0544  lr: 0.001  max_mem: 14854M
[32m[12/16 12:37:44 d2.utils.events]: [0m eta: 2:56:46  iter: 3339  total_loss: 3.724  loss_cls_stage0: 0.2415  loss_box_reg_stage0: 0.4687  loss_cls_stage1: 0.2554  loss_box_reg_stage1: 0.9029  loss_cls_stage2: 0.2856  loss_box_reg_stage2: 1.021  loss_mask: 0.273  loss_rpn_cls: 0.08059  loss_rpn_loc: 0.2108  time: 1.6419  data_time: 0.0309  lr: 0.001  max_mem: 14854M
[32m[12/16 12:38:18 d2.utils.events]: [0m eta: 2:56:33  iter: 3359  total_loss: 3.711  loss_cls_stage0: 0.2482  loss_box_reg_stage0: 0.447  loss_cls_stage1: 0.2874  loss_box_reg_stage1: 0.9271  loss_cls_stage2: 0.2958  loss_box_reg_stage2: 0.9681  loss_mask: 0.2781  loss_rpn_cls: 0.08557  loss_rpn_loc: 0.2104  time: 1.6425  data_time: 0.1984  lr: 0.001  max_mem: 14854M
[32m[12/16 12:38:50 d2.utils.events]: [0m eta: 2:56:10  iter: 3379  total_loss: 3.701  loss_cls_stage0: 0.2385  loss_box_reg_stage0: 0.4608  loss_cls_stage1: 0.2592  loss_box_reg_stage1: 0.8997  loss_cls_stage2: 0.279  loss_box_reg_stage2: 0.9788  loss_mask: 0.2885  loss_rpn_cls: 0.06939  loss_rpn_loc: 0.2085  time: 1.6421  data_time: 0.0931  lr: 0.001  max_mem: 14854M
[32m[12/16 12:39:03 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.23950, not better than best score 0.25069 @ iteration 2903.
[32m[12/16 12:39:03 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:39:04 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:39:04 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:39:04 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:39:04 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:39:04 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 12:39:05 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:39:06 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:39:06 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:39:06 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:39:06 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:39:06 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 12:39:12 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4760 s/iter. Eval: 0.0348 s/iter. Total: 0.5121 s/iter. ETA=0:00:25
[32m[12/16 12:39:13 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.4000 s/iter. Eval: 0.0288 s/iter. Total: 0.4301 s/iter. ETA=0:00:21
[32m[12/16 12:39:17 d2.evaluation.evaluator]: [0mInference done 22/60. Dataloading: 0.0015 s/iter. Inference: 0.4422 s/iter. Eval: 0.0479 s/iter. Total: 0.4916 s/iter. ETA=0:00:18
[32m[12/16 12:39:18 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0014 s/iter. Inference: 0.3926 s/iter. Eval: 0.0340 s/iter. Total: 0.4282 s/iter. ETA=0:00:16
[32m[12/16 12:39:22 d2.evaluation.evaluator]: [0mInference done 33/60. Dataloading: 0.0015 s/iter. Inference: 0.4374 s/iter. Eval: 0.0447 s/iter. Total: 0.4836 s/iter. ETA=0:00:13
[32m[12/16 12:39:24 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3878 s/iter. Eval: 0.0386 s/iter. Total: 0.4280 s/iter. ETA=0:00:11
[32m[12/16 12:39:27 d2.evaluation.evaluator]: [0mInference done 42/60. Dataloading: 0.0015 s/iter. Inference: 0.4593 s/iter. Eval: 0.0425 s/iter. Total: 0.5034 s/iter. ETA=0:00:09
[32m[12/16 12:39:29 d2.evaluation.evaluator]: [0mInference done 46/61. Dataloading: 0.0015 s/iter. Inference: 0.3959 s/iter. Eval: 0.0385 s/iter. Total: 0.4360 s/iter. ETA=0:00:06
[32m[12/16 12:39:33 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4592 s/iter. Eval: 0.0398 s/iter. Total: 0.5006 s/iter. ETA=0:00:03
[32m[12/16 12:39:34 d2.evaluation.evaluator]: [0mInference done 58/61. Dataloading: 0.0015 s/iter. Inference: 0.3978 s/iter. Eval: 0.0369 s/iter. Total: 0.4362 s/iter. ETA=0:00:01
[32m[12/16 12:39:35 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.574761 (0.438835 s / iter per device, on 2 devices)
[32m[12/16 12:39:35 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:22 (0.396987 s / iter per device, on 2 devices)
[32m[12/16 12:39:35 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 12:39:35 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.2810483299878568
[32m[12/16 12:39:36 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.490550 (0.499828 s / iter per device, on 2 devices)
[32m[12/16 12:39:36 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:24 (0.454223 s / iter per device, on 2 devices)
[32m[12/16 12:39:36 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.28105, not better than best score 0.30944 @ iteration 2661.
[32m[12/16 12:39:54 d2.utils.events]: [0m eta: 2:55:21  iter: 3399  total_loss: 3.72  loss_cls_stage0: 0.2478  loss_box_reg_stage0: 0.4659  loss_cls_stage1: 0.2757  loss_box_reg_stage1: 0.8936  loss_cls_stage2: 0.2855  loss_box_reg_stage2: 0.9397  loss_mask: 0.2917  loss_rpn_cls: 0.08139  loss_rpn_loc: 0.2525  time: 1.6416  data_time: 0.0480  lr: 0.001  max_mem: 14854M
[32m[12/16 12:40:27 d2.utils.events]: [0m eta: 2:55:10  iter: 3419  total_loss: 3.77  loss_cls_stage0: 0.2364  loss_box_reg_stage0: 0.4482  loss_cls_stage1: 0.2439  loss_box_reg_stage1: 0.929  loss_cls_stage2: 0.2778  loss_box_reg_stage2: 0.973  loss_mask: 0.2693  loss_rpn_cls: 0.055  loss_rpn_loc: 0.1738  time: 1.6416  data_time: 0.0238  lr: 0.001  max_mem: 14854M
[32m[12/16 12:41:01 d2.utils.events]: [0m eta: 2:54:44  iter: 3439  total_loss: 3.725  loss_cls_stage0: 0.2373  loss_box_reg_stage0: 0.4638  loss_cls_stage1: 0.2711  loss_box_reg_stage1: 0.9334  loss_cls_stage2: 0.3038  loss_box_reg_stage2: 0.9647  loss_mask: 0.2669  loss_rpn_cls: 0.09917  loss_rpn_loc: 0.2252  time: 1.6418  data_time: 0.2059  lr: 0.001  max_mem: 14854M
[32m[12/16 12:41:34 d2.utils.events]: [0m eta: 2:54:18  iter: 3459  total_loss: 3.709  loss_cls_stage0: 0.2331  loss_box_reg_stage0: 0.4582  loss_cls_stage1: 0.2411  loss_box_reg_stage1: 0.867  loss_cls_stage2: 0.2711  loss_box_reg_stage2: 0.9575  loss_mask: 0.2748  loss_rpn_cls: 0.08029  loss_rpn_loc: 0.2088  time: 1.6421  data_time: 0.0358  lr: 0.001  max_mem: 14854M
[32m[12/16 12:42:09 d2.utils.events]: [0m eta: 2:54:04  iter: 3479  total_loss: 3.93  loss_cls_stage0: 0.2583  loss_box_reg_stage0: 0.4914  loss_cls_stage1: 0.2689  loss_box_reg_stage1: 0.9992  loss_cls_stage2: 0.2977  loss_box_reg_stage2: 1.042  loss_mask: 0.2823  loss_rpn_cls: 0.08099  loss_rpn_loc: 0.2083  time: 1.6427  data_time: 0.1846  lr: 0.001  max_mem: 14854M
[32m[12/16 12:42:42 d2.utils.events]: [0m eta: 2:53:25  iter: 3499  total_loss: 3.555  loss_cls_stage0: 0.2353  loss_box_reg_stage0: 0.4832  loss_cls_stage1: 0.2786  loss_box_reg_stage1: 0.8862  loss_cls_stage2: 0.2801  loss_box_reg_stage2: 0.9006  loss_mask: 0.2718  loss_rpn_cls: 0.09843  loss_rpn_loc: 0.1946  time: 1.6425  data_time: 0.1344  lr: 0.001  max_mem: 14854M
[32m[12/16 12:43:19 d2.utils.events]: [0m eta: 2:52:32  iter: 3519  total_loss: 3.574  loss_cls_stage0: 0.213  loss_box_reg_stage0: 0.457  loss_cls_stage1: 0.2608  loss_box_reg_stage1: 0.8709  loss_cls_stage2: 0.2773  loss_box_reg_stage2: 0.9611  loss_mask: 0.2774  loss_rpn_cls: 0.07297  loss_rpn_loc: 0.2003  time: 1.6438  data_time: 0.3674  lr: 0.001  max_mem: 14854M
[32m[12/16 12:43:52 d2.utils.events]: [0m eta: 2:52:01  iter: 3539  total_loss: 3.858  loss_cls_stage0: 0.2511  loss_box_reg_stage0: 0.5144  loss_cls_stage1: 0.2901  loss_box_reg_stage1: 0.9201  loss_cls_stage2: 0.2968  loss_box_reg_stage2: 0.9676  loss_mask: 0.3021  loss_rpn_cls: 0.07365  loss_rpn_loc: 0.2209  time: 1.6437  data_time: 0.0500  lr: 0.001  max_mem: 14854M
[32m[12/16 12:44:24 d2.utils.events]: [0m eta: 2:51:38  iter: 3559  total_loss: 3.684  loss_cls_stage0: 0.1975  loss_box_reg_stage0: 0.4833  loss_cls_stage1: 0.2343  loss_box_reg_stage1: 0.8959  loss_cls_stage2: 0.2694  loss_box_reg_stage2: 0.9731  loss_mask: 0.2923  loss_rpn_cls: 0.07556  loss_rpn_loc: 0.2227  time: 1.6436  data_time: 0.0366  lr: 0.001  max_mem: 14854M
[32m[12/16 12:44:56 d2.utils.events]: [0m eta: 2:51:25  iter: 3579  total_loss: 3.702  loss_cls_stage0: 0.2974  loss_box_reg_stage0: 0.4839  loss_cls_stage1: 0.2985  loss_box_reg_stage1: 0.9132  loss_cls_stage2: 0.2826  loss_box_reg_stage2: 1.061  loss_mask: 0.2797  loss_rpn_cls: 0.07311  loss_rpn_loc: 0.2337  time: 1.6434  data_time: 0.0440  lr: 0.001  max_mem: 14854M
[32m[12/16 12:45:30 d2.utils.events]: [0m eta: 2:50:57  iter: 3599  total_loss: 3.7  loss_cls_stage0: 0.2432  loss_box_reg_stage0: 0.4817  loss_cls_stage1: 0.2805  loss_box_reg_stage1: 0.836  loss_cls_stage2: 0.2932  loss_box_reg_stage2: 1.004  loss_mask: 0.265  loss_rpn_cls: 0.09812  loss_rpn_loc: 0.216  time: 1.6438  data_time: 0.2748  lr: 0.001  max_mem: 14854M
[32m[12/16 12:46:05 d2.utils.events]: [0m eta: 2:50:24  iter: 3619  total_loss: 3.674  loss_cls_stage0: 0.2325  loss_box_reg_stage0: 0.4551  loss_cls_stage1: 0.2567  loss_box_reg_stage1: 0.848  loss_cls_stage2: 0.3007  loss_box_reg_stage2: 0.9355  loss_mask: 0.2913  loss_rpn_cls: 0.08795  loss_rpn_loc: 0.2174  time: 1.6442  data_time: 0.1982  lr: 0.001  max_mem: 14854M
[32m[12/16 12:46:21 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.22802, not better than best score 0.25069 @ iteration 2903.
[32m[12/16 12:46:21 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:46:21 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:46:21 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:46:21 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:46:21 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:46:22 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 12:46:23 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:46:23 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:46:23 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:46:23 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:46:24 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:46:24 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 12:46:30 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4822 s/iter. Eval: 0.0351 s/iter. Total: 0.5186 s/iter. ETA=0:00:25
[32m[12/16 12:46:31 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.4020 s/iter. Eval: 0.0260 s/iter. Total: 0.4292 s/iter. ETA=0:00:21
[32m[12/16 12:46:35 d2.evaluation.evaluator]: [0mInference done 22/60. Dataloading: 0.0015 s/iter. Inference: 0.4483 s/iter. Eval: 0.0495 s/iter. Total: 0.4992 s/iter. ETA=0:00:18
[32m[12/16 12:46:36 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0014 s/iter. Inference: 0.3967 s/iter. Eval: 0.0322 s/iter. Total: 0.4304 s/iter. ETA=0:00:16
[32m[12/16 12:46:40 d2.evaluation.evaluator]: [0mInference done 32/60. Dataloading: 0.0015 s/iter. Inference: 0.4568 s/iter. Eval: 0.0453 s/iter. Total: 0.5037 s/iter. ETA=0:00:14
[32m[12/16 12:46:41 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3939 s/iter. Eval: 0.0367 s/iter. Total: 0.4321 s/iter. ETA=0:00:11
[32m[12/16 12:46:45 d2.evaluation.evaluator]: [0mInference done 43/60. Dataloading: 0.0015 s/iter. Inference: 0.4486 s/iter. Eval: 0.0419 s/iter. Total: 0.4920 s/iter. ETA=0:00:08
[32m[12/16 12:46:47 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3957 s/iter. Eval: 0.0368 s/iter. Total: 0.4341 s/iter. ETA=0:00:06
[32m[12/16 12:46:50 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4524 s/iter. Eval: 0.0398 s/iter. Total: 0.4938 s/iter. ETA=0:00:03
[32m[12/16 12:46:52 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3931 s/iter. Eval: 0.0362 s/iter. Total: 0.4309 s/iter. ETA=0:00:00
[32m[12/16 12:46:53 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.329856 (0.434462 s / iter per device, on 2 devices)
[32m[12/16 12:46:53 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:22 (0.393477 s / iter per device, on 2 devices)
[32m[12/16 12:46:53 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 12:46:53 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.3046839256887489
[32m[12/16 12:46:54 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.380448 (0.497826 s / iter per device, on 2 devices)
[32m[12/16 12:46:54 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:24 (0.452447 s / iter per device, on 2 devices)
[32m[12/16 12:46:54 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.30468, not better than best score 0.30944 @ iteration 2661.
[32m[12/16 12:47:10 d2.utils.events]: [0m eta: 2:49:53  iter: 3639  total_loss: 3.725  loss_cls_stage0: 0.2359  loss_box_reg_stage0: 0.4889  loss_cls_stage1: 0.2576  loss_box_reg_stage1: 0.9173  loss_cls_stage2: 0.28  loss_box_reg_stage2: 0.9684  loss_mask: 0.2857  loss_rpn_cls: 0.06768  loss_rpn_loc: 0.2209  time: 1.6438  data_time: 0.0888  lr: 0.001  max_mem: 14854M
[32m[12/16 12:47:41 d2.utils.events]: [0m eta: 2:49:02  iter: 3659  total_loss: 3.583  loss_cls_stage0: 0.2403  loss_box_reg_stage0: 0.4636  loss_cls_stage1: 0.2422  loss_box_reg_stage1: 0.8815  loss_cls_stage2: 0.2579  loss_box_reg_stage2: 1.023  loss_mask: 0.2586  loss_rpn_cls: 0.07874  loss_rpn_loc: 0.1943  time: 1.6434  data_time: 0.1501  lr: 0.001  max_mem: 14854M
[32m[12/16 12:48:15 d2.utils.events]: [0m eta: 2:48:45  iter: 3679  total_loss: 3.677  loss_cls_stage0: 0.2587  loss_box_reg_stage0: 0.4576  loss_cls_stage1: 0.2662  loss_box_reg_stage1: 0.883  loss_cls_stage2: 0.2831  loss_box_reg_stage2: 0.9174  loss_mask: 0.2832  loss_rpn_cls: 0.07116  loss_rpn_loc: 0.2244  time: 1.6438  data_time: 0.1484  lr: 0.001  max_mem: 14854M
[32m[12/16 12:48:50 d2.utils.events]: [0m eta: 2:48:18  iter: 3699  total_loss: 3.887  loss_cls_stage0: 0.252  loss_box_reg_stage0: 0.5199  loss_cls_stage1: 0.2762  loss_box_reg_stage1: 0.9614  loss_cls_stage2: 0.2856  loss_box_reg_stage2: 1.034  loss_mask: 0.2894  loss_rpn_cls: 0.06299  loss_rpn_loc: 0.1966  time: 1.6444  data_time: 0.0754  lr: 0.001  max_mem: 14854M
[32m[12/16 12:49:25 d2.utils.events]: [0m eta: 2:48:04  iter: 3719  total_loss: 3.826  loss_cls_stage0: 0.2373  loss_box_reg_stage0: 0.4789  loss_cls_stage1: 0.2496  loss_box_reg_stage1: 0.9678  loss_cls_stage2: 0.2668  loss_box_reg_stage2: 1.089  loss_mask: 0.2883  loss_rpn_cls: 0.06205  loss_rpn_loc: 0.2104  time: 1.6449  data_time: 0.2090  lr: 0.001  max_mem: 14854M
[32m[12/16 12:49:59 d2.utils.events]: [0m eta: 2:47:30  iter: 3739  total_loss: 3.812  loss_cls_stage0: 0.2811  loss_box_reg_stage0: 0.4779  loss_cls_stage1: 0.2928  loss_box_reg_stage1: 0.922  loss_cls_stage2: 0.3078  loss_box_reg_stage2: 0.9987  loss_mask: 0.2722  loss_rpn_cls: 0.07788  loss_rpn_loc: 0.2171  time: 1.6450  data_time: 0.0820  lr: 0.001  max_mem: 14854M
[32m[12/16 12:50:28 d2.utils.events]: [0m eta: 2:46:57  iter: 3759  total_loss: 3.953  loss_cls_stage0: 0.2665  loss_box_reg_stage0: 0.4792  loss_cls_stage1: 0.2814  loss_box_reg_stage1: 0.9799  loss_cls_stage2: 0.2788  loss_box_reg_stage2: 1.057  loss_mask: 0.2796  loss_rpn_cls: 0.06834  loss_rpn_loc: 0.1966  time: 1.6441  data_time: 0.0211  lr: 0.001  max_mem: 14854M
[32m[12/16 12:51:01 d2.utils.events]: [0m eta: 2:46:13  iter: 3779  total_loss: 3.442  loss_cls_stage0: 0.2356  loss_box_reg_stage0: 0.4314  loss_cls_stage1: 0.2422  loss_box_reg_stage1: 0.8194  loss_cls_stage2: 0.2588  loss_box_reg_stage2: 0.9335  loss_mask: 0.264  loss_rpn_cls: 0.06207  loss_rpn_loc: 0.1988  time: 1.6440  data_time: 0.0539  lr: 0.001  max_mem: 14854M
[32m[12/16 12:51:37 d2.utils.events]: [0m eta: 2:45:33  iter: 3799  total_loss: 3.707  loss_cls_stage0: 0.2278  loss_box_reg_stage0: 0.4684  loss_cls_stage1: 0.2795  loss_box_reg_stage1: 0.8731  loss_cls_stage2: 0.285  loss_box_reg_stage2: 0.9229  loss_mask: 0.2818  loss_rpn_cls: 0.08809  loss_rpn_loc: 0.2107  time: 1.6449  data_time: 0.3083  lr: 0.001  max_mem: 14854M
[32m[12/16 12:52:08 d2.utils.events]: [0m eta: 2:44:16  iter: 3819  total_loss: 3.593  loss_cls_stage0: 0.2298  loss_box_reg_stage0: 0.472  loss_cls_stage1: 0.2539  loss_box_reg_stage1: 0.8733  loss_cls_stage2: 0.2889  loss_box_reg_stage2: 0.9792  loss_mask: 0.2782  loss_rpn_cls: 0.09171  loss_rpn_loc: 0.1971  time: 1.6443  data_time: 0.0217  lr: 0.001  max_mem: 14854M
[32m[12/16 12:52:39 d2.utils.events]: [0m eta: 2:43:23  iter: 3839  total_loss: 3.591  loss_cls_stage0: 0.2231  loss_box_reg_stage0: 0.4728  loss_cls_stage1: 0.237  loss_box_reg_stage1: 0.8887  loss_cls_stage2: 0.2661  loss_box_reg_stage2: 0.928  loss_mask: 0.2847  loss_rpn_cls: 0.07904  loss_rpn_loc: 0.1865  time: 1.6440  data_time: 0.1101  lr: 0.001  max_mem: 14854M
[32m[12/16 12:53:11 d2.utils.events]: [0m eta: 2:42:54  iter: 3859  total_loss: 3.847  loss_cls_stage0: 0.2321  loss_box_reg_stage0: 0.4835  loss_cls_stage1: 0.2764  loss_box_reg_stage1: 0.964  loss_cls_stage2: 0.2913  loss_box_reg_stage2: 1.103  loss_mask: 0.268  loss_rpn_cls: 0.06268  loss_rpn_loc: 0.2006  time: 1.6437  data_time: 0.0485  lr: 0.001  max_mem: 14854M
[32m[12/16 12:53:29 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.25268, better than last best score 0.25069 @ iteration 2903.
[32m[12/16 12:53:29 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:53:30 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:53:30 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:53:30 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:53:30 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:53:30 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 12:53:31 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:53:32 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 12:53:32 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 12:53:32 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 12:53:32 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 12:53:32 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 12:53:38 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4949 s/iter. Eval: 0.0364 s/iter. Total: 0.5326 s/iter. ETA=0:00:26
[32m[12/16 12:53:39 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.3883 s/iter. Eval: 0.0283 s/iter. Total: 0.4179 s/iter. ETA=0:00:20
[32m[12/16 12:53:43 d2.evaluation.evaluator]: [0mInference done 20/60. Dataloading: 0.0014 s/iter. Inference: 0.5171 s/iter. Eval: 0.0500 s/iter. Total: 0.5685 s/iter. ETA=0:00:22
[32m[12/16 12:53:45 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0015 s/iter. Inference: 0.3956 s/iter. Eval: 0.0323 s/iter. Total: 0.4294 s/iter. ETA=0:00:16
[32m[12/16 12:53:48 d2.evaluation.evaluator]: [0mInference done 31/60. Dataloading: 0.0015 s/iter. Inference: 0.4782 s/iter. Eval: 0.0467 s/iter. Total: 0.5265 s/iter. ETA=0:00:15
[32m[12/16 12:53:50 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3905 s/iter. Eval: 0.0357 s/iter. Total: 0.4278 s/iter. ETA=0:00:11
[32m[12/16 12:53:54 d2.evaluation.evaluator]: [0mInference done 42/60. Dataloading: 0.0015 s/iter. Inference: 0.4678 s/iter. Eval: 0.0428 s/iter. Total: 0.5122 s/iter. ETA=0:00:09
[32m[12/16 12:53:55 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3914 s/iter. Eval: 0.0363 s/iter. Total: 0.4293 s/iter. ETA=0:00:06
[32m[12/16 12:53:59 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4659 s/iter. Eval: 0.0396 s/iter. Total: 0.5070 s/iter. ETA=0:00:03
[32m[12/16 12:54:00 d2.evaluation.evaluator]: [0mInference done 60/61. Dataloading: 0.0015 s/iter. Inference: 0.3895 s/iter. Eval: 0.0358 s/iter. Total: 0.4269 s/iter. ETA=0:00:00
[32m[12/16 12:54:01 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.136980 (0.431017 s / iter per device, on 2 devices)
[32m[12/16 12:54:01 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.389821 s / iter per device, on 2 devices)
[32m[12/16 12:54:01 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 12:54:01 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.30467178242099346
[32m[12/16 12:54:03 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.980169 (0.508730 s / iter per device, on 2 devices)
[32m[12/16 12:54:03 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.463734 s / iter per device, on 2 devices)
[32m[12/16 12:54:03 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.30467, not better than best score 0.30944 @ iteration 2661.
[32m[12/16 12:54:16 d2.utils.events]: [0m eta: 2:42:17  iter: 3879  total_loss: 3.607  loss_cls_stage0: 0.2431  loss_box_reg_stage0: 0.4463  loss_cls_stage1: 0.2682  loss_box_reg_stage1: 0.8458  loss_cls_stage2: 0.2799  loss_box_reg_stage2: 0.9487  loss_mask: 0.273  loss_rpn_cls: 0.08996  loss_rpn_loc: 0.2157  time: 1.6433  data_time: 0.0895  lr: 0.001  max_mem: 14854M
[32m[12/16 12:54:51 d2.utils.events]: [0m eta: 2:42:25  iter: 3899  total_loss: 3.556  loss_cls_stage0: 0.2476  loss_box_reg_stage0: 0.4811  loss_cls_stage1: 0.294  loss_box_reg_stage1: 0.8335  loss_cls_stage2: 0.3076  loss_box_reg_stage2: 0.8713  loss_mask: 0.2848  loss_rpn_cls: 0.08811  loss_rpn_loc: 0.2392  time: 1.6439  data_time: 0.2122  lr: 0.001  max_mem: 14854M
[32m[12/16 12:55:22 d2.utils.events]: [0m eta: 2:41:27  iter: 3919  total_loss: 3.704  loss_cls_stage0: 0.2483  loss_box_reg_stage0: 0.4611  loss_cls_stage1: 0.2644  loss_box_reg_stage1: 0.8563  loss_cls_stage2: 0.2755  loss_box_reg_stage2: 0.9501  loss_mask: 0.273  loss_rpn_cls: 0.07369  loss_rpn_loc: 0.1968  time: 1.6435  data_time: 0.0616  lr: 0.001  max_mem: 14854M
[32m[12/16 12:55:57 d2.utils.events]: [0m eta: 2:40:55  iter: 3939  total_loss: 3.846  loss_cls_stage0: 0.2114  loss_box_reg_stage0: 0.4501  loss_cls_stage1: 0.2316  loss_box_reg_stage1: 1.013  loss_cls_stage2: 0.2598  loss_box_reg_stage2: 1.112  loss_mask: 0.2748  loss_rpn_cls: 0.05982  loss_rpn_loc: 0.2104  time: 1.6440  data_time: 0.2280  lr: 0.001  max_mem: 14854M
[32m[12/16 12:56:30 d2.utils.events]: [0m eta: 2:40:37  iter: 3959  total_loss: 3.834  loss_cls_stage0: 0.2225  loss_box_reg_stage0: 0.4873  loss_cls_stage1: 0.2628  loss_box_reg_stage1: 0.9205  loss_cls_stage2: 0.2762  loss_box_reg_stage2: 1.01  loss_mask: 0.2765  loss_rpn_cls: 0.05962  loss_rpn_loc: 0.1897  time: 1.6441  data_time: 0.0990  lr: 0.001  max_mem: 14854M
[32m[12/16 12:57:03 d2.utils.events]: [0m eta: 2:40:05  iter: 3979  total_loss: 3.522  loss_cls_stage0: 0.2057  loss_box_reg_stage0: 0.4343  loss_cls_stage1: 0.2175  loss_box_reg_stage1: 0.906  loss_cls_stage2: 0.2441  loss_box_reg_stage2: 0.8936  loss_mask: 0.2795  loss_rpn_cls: 0.08609  loss_rpn_loc: 0.1927  time: 1.6439  data_time: 0.2355  lr: 0.001  max_mem: 14854M
[32m[12/16 12:57:35 d2.utils.events]: [0m eta: 2:39:33  iter: 3999  total_loss: 3.717  loss_cls_stage0: 0.2267  loss_box_reg_stage0: 0.4699  loss_cls_stage1: 0.2347  loss_box_reg_stage1: 0.9253  loss_cls_stage2: 0.2711  loss_box_reg_stage2: 1.045  loss_mask: 0.2837  loss_rpn_cls: 0.0737  loss_rpn_loc: 0.2075  time: 1.6437  data_time: 0.0280  lr: 0.001  max_mem: 14854M
[32m[12/16 12:58:06 d2.utils.events]: [0m eta: 2:39:33  iter: 4019  total_loss: 3.599  loss_cls_stage0: 0.2578  loss_box_reg_stage0: 0.4777  loss_cls_stage1: 0.2517  loss_box_reg_stage1: 0.9377  loss_cls_stage2: 0.267  loss_box_reg_stage2: 1.022  loss_mask: 0.2743  loss_rpn_cls: 0.08197  loss_rpn_loc: 0.226  time: 1.6433  data_time: 0.0257  lr: 0.001  max_mem: 14854M
[32m[12/16 12:58:38 d2.utils.events]: [0m eta: 2:39:01  iter: 4039  total_loss: 3.55  loss_cls_stage0: 0.2362  loss_box_reg_stage0: 0.4697  loss_cls_stage1: 0.2547  loss_box_reg_stage1: 0.8746  loss_cls_stage2: 0.2781  loss_box_reg_stage2: 0.9708  loss_mask: 0.2593  loss_rpn_cls: 0.07872  loss_rpn_loc: 0.199  time: 1.6432  data_time: 0.0300  lr: 0.001  max_mem: 14854M
[32m[12/16 12:59:16 d2.utils.events]: [0m eta: 2:38:28  iter: 4059  total_loss: 3.538  loss_cls_stage0: 0.2212  loss_box_reg_stage0: 0.4388  loss_cls_stage1: 0.2525  loss_box_reg_stage1: 0.8864  loss_cls_stage2: 0.2732  loss_box_reg_stage2: 0.9664  loss_mask: 0.2863  loss_rpn_cls: 0.08245  loss_rpn_loc: 0.2037  time: 1.6442  data_time: 0.3361  lr: 0.001  max_mem: 14854M
[32m[12/16 12:59:47 d2.utils.events]: [0m eta: 2:38:06  iter: 4079  total_loss: 3.795  loss_cls_stage0: 0.2547  loss_box_reg_stage0: 0.4986  loss_cls_stage1: 0.2949  loss_box_reg_stage1: 0.9274  loss_cls_stage2: 0.3046  loss_box_reg_stage2: 0.912  loss_mask: 0.2968  loss_rpn_cls: 0.0836  loss_rpn_loc: 0.2208  time: 1.6439  data_time: 0.0398  lr: 0.001  max_mem: 14854M
[32m[12/16 13:00:20 d2.utils.events]: [0m eta: 2:37:36  iter: 4099  total_loss: 3.713  loss_cls_stage0: 0.2383  loss_box_reg_stage0: 0.4686  loss_cls_stage1: 0.2621  loss_box_reg_stage1: 0.8902  loss_cls_stage2: 0.2942  loss_box_reg_stage2: 0.9236  loss_mask: 0.2895  loss_rpn_cls: 0.08801  loss_rpn_loc: 0.2129  time: 1.6439  data_time: 0.1244  lr: 0.001  max_mem: 14854M
[32m[12/16 13:00:42 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.25011, not better than best score 0.25268 @ iteration 3629.
[32m[12/16 13:00:42 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:00:42 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:00:42 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:00:43 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:00:43 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:00:43 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 13:00:44 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:00:44 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:00:44 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:00:44 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:00:45 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:00:45 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 13:00:51 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4525 s/iter. Eval: 0.0397 s/iter. Total: 0.4936 s/iter. ETA=0:00:24
[32m[12/16 13:00:52 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.4121 s/iter. Eval: 0.0291 s/iter. Total: 0.4425 s/iter. ETA=0:00:22
[32m[12/16 13:00:56 d2.evaluation.evaluator]: [0mInference done 20/60. Dataloading: 0.0015 s/iter. Inference: 0.4823 s/iter. Eval: 0.0534 s/iter. Total: 0.5372 s/iter. ETA=0:00:21
[32m[12/16 13:00:57 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0015 s/iter. Inference: 0.3981 s/iter. Eval: 0.0370 s/iter. Total: 0.4367 s/iter. ETA=0:00:16
[32m[12/16 13:01:01 d2.evaluation.evaluator]: [0mInference done 31/60. Dataloading: 0.0015 s/iter. Inference: 0.4580 s/iter. Eval: 0.0506 s/iter. Total: 0.5102 s/iter. ETA=0:00:14
[32m[12/16 13:01:03 d2.evaluation.evaluator]: [0mInference done 34/61. Dataloading: 0.0015 s/iter. Inference: 0.4032 s/iter. Eval: 0.0430 s/iter. Total: 0.4478 s/iter. ETA=0:00:12
[32m[12/16 13:01:07 d2.evaluation.evaluator]: [0mInference done 42/60. Dataloading: 0.0015 s/iter. Inference: 0.4566 s/iter. Eval: 0.0461 s/iter. Total: 0.5043 s/iter. ETA=0:00:09
[32m[12/16 13:01:08 d2.evaluation.evaluator]: [0mInference done 46/61. Dataloading: 0.0015 s/iter. Inference: 0.3975 s/iter. Eval: 0.0420 s/iter. Total: 0.4410 s/iter. ETA=0:00:06
[32m[12/16 13:01:12 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4585 s/iter. Eval: 0.0432 s/iter. Total: 0.5033 s/iter. ETA=0:00:03
[32m[12/16 13:01:13 d2.evaluation.evaluator]: [0mInference done 58/61. Dataloading: 0.0015 s/iter. Inference: 0.3946 s/iter. Eval: 0.0403 s/iter. Total: 0.4365 s/iter. ETA=0:00:01
[32m[12/16 13:01:14 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.659983 (0.440357 s / iter per device, on 2 devices)
[32m[12/16 13:01:14 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:22 (0.394238 s / iter per device, on 2 devices)
[32m[12/16 13:01:14 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 13:01:14 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.30156471087534226
[32m[12/16 13:01:16 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:28.043838 (0.509888 s / iter per device, on 2 devices)
[32m[12/16 13:01:16 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.460676 s / iter per device, on 2 devices)
[32m[12/16 13:01:16 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.30156, not better than best score 0.30944 @ iteration 2661.
[32m[12/16 13:01:26 d2.utils.events]: [0m eta: 2:36:58  iter: 4119  total_loss: 3.833  loss_cls_stage0: 0.2456  loss_box_reg_stage0: 0.466  loss_cls_stage1: 0.2596  loss_box_reg_stage1: 0.9045  loss_cls_stage2: 0.2747  loss_box_reg_stage2: 1.007  loss_mask: 0.2611  loss_rpn_cls: 0.05892  loss_rpn_loc: 0.2014  time: 1.6436  data_time: 0.0293  lr: 0.001  max_mem: 14854M
[32m[12/16 13:01:57 d2.utils.events]: [0m eta: 2:36:26  iter: 4139  total_loss: 3.762  loss_cls_stage0: 0.2824  loss_box_reg_stage0: 0.496  loss_cls_stage1: 0.2857  loss_box_reg_stage1: 0.9356  loss_cls_stage2: 0.2996  loss_box_reg_stage2: 0.9558  loss_mask: 0.284  loss_rpn_cls: 0.07327  loss_rpn_loc: 0.1969  time: 1.6433  data_time: 0.0435  lr: 0.001  max_mem: 14854M
[32m[12/16 13:02:26 d2.utils.events]: [0m eta: 2:35:34  iter: 4159  total_loss: 3.704  loss_cls_stage0: 0.217  loss_box_reg_stage0: 0.4643  loss_cls_stage1: 0.2428  loss_box_reg_stage1: 0.9757  loss_cls_stage2: 0.2725  loss_box_reg_stage2: 1.036  loss_mask: 0.2856  loss_rpn_cls: 0.06067  loss_rpn_loc: 0.1975  time: 1.6423  data_time: 0.0439  lr: 0.001  max_mem: 14854M
[32m[12/16 13:02:56 d2.utils.events]: [0m eta: 2:35:00  iter: 4179  total_loss: 3.702  loss_cls_stage0: 0.2483  loss_box_reg_stage0: 0.4676  loss_cls_stage1: 0.2659  loss_box_reg_stage1: 0.8873  loss_cls_stage2: 0.2689  loss_box_reg_stage2: 0.9899  loss_mask: 0.2786  loss_rpn_cls: 0.09589  loss_rpn_loc: 0.2266  time: 1.6416  data_time: 0.0428  lr: 0.001  max_mem: 14854M
[32m[12/16 13:03:29 d2.utils.events]: [0m eta: 2:34:30  iter: 4199  total_loss: 3.63  loss_cls_stage0: 0.2528  loss_box_reg_stage0: 0.4671  loss_cls_stage1: 0.2645  loss_box_reg_stage1: 0.8874  loss_cls_stage2: 0.2845  loss_box_reg_stage2: 0.9652  loss_mask: 0.2823  loss_rpn_cls: 0.07596  loss_rpn_loc: 0.2091  time: 1.6417  data_time: 0.1262  lr: 0.001  max_mem: 14854M
[32m[12/16 13:04:00 d2.utils.events]: [0m eta: 2:33:26  iter: 4219  total_loss: 3.684  loss_cls_stage0: 0.2062  loss_box_reg_stage0: 0.4524  loss_cls_stage1: 0.22  loss_box_reg_stage1: 0.9409  loss_cls_stage2: 0.2493  loss_box_reg_stage2: 1.036  loss_mask: 0.2631  loss_rpn_cls: 0.07952  loss_rpn_loc: 0.1849  time: 1.6413  data_time: 0.0501  lr: 0.001  max_mem: 14854M
[32m[12/16 13:04:36 d2.utils.events]: [0m eta: 2:32:47  iter: 4239  total_loss: 3.942  loss_cls_stage0: 0.2558  loss_box_reg_stage0: 0.4943  loss_cls_stage1: 0.2795  loss_box_reg_stage1: 0.9747  loss_cls_stage2: 0.3029  loss_box_reg_stage2: 1.003  loss_mask: 0.2852  loss_rpn_cls: 0.09416  loss_rpn_loc: 0.2315  time: 1.6419  data_time: 0.2749  lr: 0.001  max_mem: 15256M
[32m[12/16 13:05:08 d2.utils.events]: [0m eta: 2:32:05  iter: 4259  total_loss: 3.734  loss_cls_stage0: 0.2343  loss_box_reg_stage0: 0.4802  loss_cls_stage1: 0.2568  loss_box_reg_stage1: 0.9198  loss_cls_stage2: 0.2688  loss_box_reg_stage2: 1.092  loss_mask: 0.2615  loss_rpn_cls: 0.06522  loss_rpn_loc: 0.1948  time: 1.6417  data_time: 0.0394  lr: 0.001  max_mem: 15256M
[32m[12/16 13:05:38 d2.utils.events]: [0m eta: 2:31:33  iter: 4279  total_loss: 3.657  loss_cls_stage0: 0.2268  loss_box_reg_stage0: 0.4874  loss_cls_stage1: 0.2519  loss_box_reg_stage1: 0.8892  loss_cls_stage2: 0.2567  loss_box_reg_stage2: 0.9794  loss_mask: 0.2738  loss_rpn_cls: 0.08421  loss_rpn_loc: 0.2477  time: 1.6412  data_time: 0.0265  lr: 0.001  max_mem: 15256M
[32m[12/16 13:06:10 d2.utils.events]: [0m eta: 2:30:54  iter: 4299  total_loss: 3.568  loss_cls_stage0: 0.2446  loss_box_reg_stage0: 0.4664  loss_cls_stage1: 0.2733  loss_box_reg_stage1: 0.8552  loss_cls_stage2: 0.2754  loss_box_reg_stage2: 0.9379  loss_mask: 0.2796  loss_rpn_cls: 0.07606  loss_rpn_loc: 0.1991  time: 1.6408  data_time: 0.1218  lr: 0.001  max_mem: 15256M
[32m[12/16 13:06:47 d2.utils.events]: [0m eta: 2:30:25  iter: 4319  total_loss: 3.695  loss_cls_stage0: 0.2373  loss_box_reg_stage0: 0.4532  loss_cls_stage1: 0.2628  loss_box_reg_stage1: 0.8878  loss_cls_stage2: 0.2716  loss_box_reg_stage2: 0.9762  loss_mask: 0.2653  loss_rpn_cls: 0.09519  loss_rpn_loc: 0.2134  time: 1.6418  data_time: 0.4446  lr: 0.001  max_mem: 15256M
[32m[12/16 13:07:18 d2.utils.events]: [0m eta: 2:30:05  iter: 4339  total_loss: 3.771  loss_cls_stage0: 0.2208  loss_box_reg_stage0: 0.4945  loss_cls_stage1: 0.2161  loss_box_reg_stage1: 0.9321  loss_cls_stage2: 0.2614  loss_box_reg_stage2: 1.04  loss_mask: 0.2752  loss_rpn_cls: 0.06077  loss_rpn_loc: 0.2058  time: 1.6415  data_time: 0.0238  lr: 0.001  max_mem: 15256M
[32m[12/16 13:07:48 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.25186, not better than best score 0.25268 @ iteration 3629.
[32m[12/16 13:07:49 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:07:49 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:07:49 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:07:49 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:07:49 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:07:49 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 13:07:51 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:07:51 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:07:51 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:07:51 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:07:51 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:07:51 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 13:07:57 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4524 s/iter. Eval: 0.0397 s/iter. Total: 0.4934 s/iter. ETA=0:00:24
[32m[12/16 13:07:58 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.3619 s/iter. Eval: 0.0285 s/iter. Total: 0.3917 s/iter. ETA=0:00:19
[32m[12/16 13:08:03 d2.evaluation.evaluator]: [0mInference done 22/60. Dataloading: 0.0015 s/iter. Inference: 0.4353 s/iter. Eval: 0.0529 s/iter. Total: 0.4897 s/iter. ETA=0:00:18
[32m[12/16 13:08:04 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0014 s/iter. Inference: 0.3824 s/iter. Eval: 0.0344 s/iter. Total: 0.4183 s/iter. ETA=0:00:15
[32m[12/16 13:08:08 d2.evaluation.evaluator]: [0mInference done 32/60. Dataloading: 0.0015 s/iter. Inference: 0.4467 s/iter. Eval: 0.0486 s/iter. Total: 0.4968 s/iter. ETA=0:00:13
[32m[12/16 13:08:09 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3890 s/iter. Eval: 0.0403 s/iter. Total: 0.4308 s/iter. ETA=0:00:11
[32m[12/16 13:08:13 d2.evaluation.evaluator]: [0mInference done 43/60. Dataloading: 0.0015 s/iter. Inference: 0.4404 s/iter. Eval: 0.0449 s/iter. Total: 0.4868 s/iter. ETA=0:00:08
[32m[12/16 13:08:14 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3905 s/iter. Eval: 0.0401 s/iter. Total: 0.4321 s/iter. ETA=0:00:06
[32m[12/16 13:08:18 d2.evaluation.evaluator]: [0mInference done 52/60. Dataloading: 0.0015 s/iter. Inference: 0.4577 s/iter. Eval: 0.0430 s/iter. Total: 0.5022 s/iter. ETA=0:00:04
[32m[12/16 13:08:19 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3926 s/iter. Eval: 0.0397 s/iter. Total: 0.4338 s/iter. ETA=0:00:00
[32m[12/16 13:08:20 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.489523 (0.437313 s / iter per device, on 2 devices)
[32m[12/16 13:08:20 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.392722 s / iter per device, on 2 devices)
[32m[12/16 13:08:20 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 13:08:20 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.30819087251978095
[32m[12/16 13:08:22 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.661854 (0.502943 s / iter per device, on 2 devices)
[32m[12/16 13:08:22 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.454871 s / iter per device, on 2 devices)
[32m[12/16 13:08:22 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.30819, not better than best score 0.30944 @ iteration 2661.
[32m[12/16 13:08:30 d2.utils.events]: [0m eta: 2:29:36  iter: 4359  total_loss: 3.456  loss_cls_stage0: 0.2256  loss_box_reg_stage0: 0.4199  loss_cls_stage1: 0.2541  loss_box_reg_stage1: 0.8539  loss_cls_stage2: 0.2652  loss_box_reg_stage2: 0.8531  loss_mask: 0.3  loss_rpn_cls: 0.08488  loss_rpn_loc: 0.2229  time: 1.6426  data_time: 0.3332  lr: 0.001  max_mem: 15256M
[32m[12/16 13:09:01 d2.utils.events]: [0m eta: 2:29:04  iter: 4379  total_loss: 3.898  loss_cls_stage0: 0.262  loss_box_reg_stage0: 0.4861  loss_cls_stage1: 0.2575  loss_box_reg_stage1: 0.9624  loss_cls_stage2: 0.2758  loss_box_reg_stage2: 1.005  loss_mask: 0.2715  loss_rpn_cls: 0.06422  loss_rpn_loc: 0.226  time: 1.6422  data_time: 0.0353  lr: 0.001  max_mem: 15256M
[32m[12/16 13:09:39 d2.utils.events]: [0m eta: 2:29:11  iter: 4399  total_loss: 3.572  loss_cls_stage0: 0.2306  loss_box_reg_stage0: 0.4504  loss_cls_stage1: 0.2544  loss_box_reg_stage1: 0.8671  loss_cls_stage2: 0.2618  loss_box_reg_stage2: 1.009  loss_mask: 0.2888  loss_rpn_cls: 0.06115  loss_rpn_loc: 0.1954  time: 1.6434  data_time: 0.1706  lr: 0.001  max_mem: 15256M
[32m[12/16 13:10:22 d2.utils.events]: [0m eta: 2:28:53  iter: 4419  total_loss: 3.695  loss_cls_stage0: 0.2364  loss_box_reg_stage0: 0.473  loss_cls_stage1: 0.2687  loss_box_reg_stage1: 0.9626  loss_cls_stage2: 0.276  loss_box_reg_stage2: 1.011  loss_mask: 0.2858  loss_rpn_cls: 0.0742  loss_rpn_loc: 0.2175  time: 1.6456  data_time: 0.5523  lr: 0.001  max_mem: 15256M
[32m[12/16 13:10:55 d2.utils.events]: [0m eta: 2:28:12  iter: 4439  total_loss: 3.857  loss_cls_stage0: 0.2844  loss_box_reg_stage0: 0.4707  loss_cls_stage1: 0.3007  loss_box_reg_stage1: 0.8986  loss_cls_stage2: 0.3049  loss_box_reg_stage2: 1.018  loss_mask: 0.2693  loss_rpn_cls: 0.09625  loss_rpn_loc: 0.1936  time: 1.6458  data_time: 0.1705  lr: 0.001  max_mem: 15256M
[32m[12/16 13:11:34 d2.utils.events]: [0m eta: 2:27:35  iter: 4459  total_loss: 3.857  loss_cls_stage0: 0.2409  loss_box_reg_stage0: 0.4643  loss_cls_stage1: 0.2522  loss_box_reg_stage1: 0.9462  loss_cls_stage2: 0.2842  loss_box_reg_stage2: 1.001  loss_mask: 0.2891  loss_rpn_cls: 0.07189  loss_rpn_loc: 0.2101  time: 1.6470  data_time: 0.3636  lr: 0.001  max_mem: 15256M
[32m[12/16 13:12:07 d2.utils.events]: [0m eta: 2:26:28  iter: 4479  total_loss: 3.646  loss_cls_stage0: 0.2222  loss_box_reg_stage0: 0.4513  loss_cls_stage1: 0.2511  loss_box_reg_stage1: 0.8581  loss_cls_stage2: 0.2727  loss_box_reg_stage2: 0.8753  loss_mask: 0.2792  loss_rpn_cls: 0.09017  loss_rpn_loc: 0.2158  time: 1.6471  data_time: 0.2249  lr: 0.001  max_mem: 15256M
[32m[12/16 13:12:39 d2.utils.events]: [0m eta: 2:25:53  iter: 4499  total_loss: 3.597  loss_cls_stage0: 0.2221  loss_box_reg_stage0: 0.4692  loss_cls_stage1: 0.251  loss_box_reg_stage1: 0.8813  loss_cls_stage2: 0.2782  loss_box_reg_stage2: 0.9725  loss_mask: 0.2856  loss_rpn_cls: 0.0652  loss_rpn_loc: 0.2218  time: 1.6470  data_time: 0.1685  lr: 0.001  max_mem: 15256M
[32m[12/16 13:13:13 d2.utils.events]: [0m eta: 2:25:39  iter: 4519  total_loss: 3.625  loss_cls_stage0: 0.1894  loss_box_reg_stage0: 0.4503  loss_cls_stage1: 0.2032  loss_box_reg_stage1: 0.9156  loss_cls_stage2: 0.2526  loss_box_reg_stage2: 1.046  loss_mask: 0.2706  loss_rpn_cls: 0.06333  loss_rpn_loc: 0.211  time: 1.6472  data_time: 0.1019  lr: 0.001  max_mem: 15256M
[32m[12/16 13:13:46 d2.utils.events]: [0m eta: 2:24:59  iter: 4539  total_loss: 3.638  loss_cls_stage0: 0.2356  loss_box_reg_stage0: 0.4746  loss_cls_stage1: 0.239  loss_box_reg_stage1: 0.8794  loss_cls_stage2: 0.256  loss_box_reg_stage2: 0.9795  loss_mask: 0.2823  loss_rpn_cls: 0.08715  loss_rpn_loc: 0.1944  time: 1.6471  data_time: 0.1015  lr: 0.001  max_mem: 15256M
[32m[12/16 13:14:16 d2.utils.events]: [0m eta: 2:24:13  iter: 4559  total_loss: 3.688  loss_cls_stage0: 0.2224  loss_box_reg_stage0: 0.4649  loss_cls_stage1: 0.2489  loss_box_reg_stage1: 0.8337  loss_cls_stage2: 0.2777  loss_box_reg_stage2: 0.897  loss_mask: 0.2779  loss_rpn_cls: 0.07966  loss_rpn_loc: 0.217  time: 1.6465  data_time: 0.0328  lr: 0.001  max_mem: 15256M
[32m[12/16 13:14:48 d2.utils.events]: [0m eta: 2:23:41  iter: 4579  total_loss: 3.624  loss_cls_stage0: 0.2292  loss_box_reg_stage0: 0.4472  loss_cls_stage1: 0.2395  loss_box_reg_stage1: 0.8918  loss_cls_stage2: 0.2595  loss_box_reg_stage2: 0.981  loss_mask: 0.2702  loss_rpn_cls: 0.07996  loss_rpn_loc: 0.1789  time: 1.6464  data_time: 0.0336  lr: 0.001  max_mem: 15256M
[32m[12/16 13:15:17 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.24783, not better than best score 0.25268 @ iteration 3629.
[32m[12/16 13:15:17 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:15:17 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:15:17 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:15:17 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:15:18 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:15:18 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 13:15:19 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:15:20 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:15:20 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:15:20 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:15:20 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:15:20 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 13:15:26 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0014 s/iter. Inference: 0.4932 s/iter. Eval: 0.0389 s/iter. Total: 0.5335 s/iter. ETA=0:00:26
[32m[12/16 13:15:27 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.3661 s/iter. Eval: 0.0249 s/iter. Total: 0.3923 s/iter. ETA=0:00:19
[32m[12/16 13:15:31 d2.evaluation.evaluator]: [0mInference done 21/60. Dataloading: 0.0015 s/iter. Inference: 0.4828 s/iter. Eval: 0.0533 s/iter. Total: 0.5376 s/iter. ETA=0:00:20
[32m[12/16 13:15:32 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0014 s/iter. Inference: 0.3757 s/iter. Eval: 0.0318 s/iter. Total: 0.4089 s/iter. ETA=0:00:15
[32m[12/16 13:15:36 d2.evaluation.evaluator]: [0mInference done 31/60. Dataloading: 0.0015 s/iter. Inference: 0.4761 s/iter. Eval: 0.0480 s/iter. Total: 0.5256 s/iter. ETA=0:00:15
[32m[12/16 13:15:37 d2.evaluation.evaluator]: [0mInference done 34/61. Dataloading: 0.0015 s/iter. Inference: 0.3909 s/iter. Eval: 0.0373 s/iter. Total: 0.4298 s/iter. ETA=0:00:11
[32m[12/16 13:15:42 d2.evaluation.evaluator]: [0mInference done 42/60. Dataloading: 0.0015 s/iter. Inference: 0.4711 s/iter. Eval: 0.0433 s/iter. Total: 0.5160 s/iter. ETA=0:00:09
[32m[12/16 13:15:42 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3863 s/iter. Eval: 0.0367 s/iter. Total: 0.4246 s/iter. ETA=0:00:05
[32m[12/16 13:15:47 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4662 s/iter. Eval: 0.0401 s/iter. Total: 0.5078 s/iter. ETA=0:00:03
[32m[12/16 13:15:48 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3884 s/iter. Eval: 0.0365 s/iter. Total: 0.4265 s/iter. ETA=0:00:00
[32m[12/16 13:15:49 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.045725 (0.429388 s / iter per device, on 2 devices)
[32m[12/16 13:15:49 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.388234 s / iter per device, on 2 devices)
[32m[12/16 13:15:49 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 13:15:49 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.31300705902049225
[32m[12/16 13:15:51 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:28.097569 (0.510865 s / iter per device, on 2 devices)
[32m[12/16 13:15:51 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.465098 s / iter per device, on 2 devices)
[32m[12/16 13:15:53 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.31301, better than last best score 0.30944 @ iteration 2661.
[32m[12/16 13:15:55 d2.utils.events]: [0m eta: 2:22:55  iter: 4599  total_loss: 3.71  loss_cls_stage0: 0.2404  loss_box_reg_stage0: 0.4591  loss_cls_stage1: 0.2788  loss_box_reg_stage1: 0.9033  loss_cls_stage2: 0.291  loss_box_reg_stage2: 0.952  loss_mask: 0.2645  loss_rpn_cls: 0.07118  loss_rpn_loc: 0.1813  time: 1.6459  data_time: 0.1123  lr: 0.001  max_mem: 15256M
[32m[12/16 13:16:26 d2.utils.events]: [0m eta: 2:22:16  iter: 4619  total_loss: 3.799  loss_cls_stage0: 0.218  loss_box_reg_stage0: 0.4371  loss_cls_stage1: 0.2254  loss_box_reg_stage1: 0.9695  loss_cls_stage2: 0.2695  loss_box_reg_stage2: 1.097  loss_mask: 0.2679  loss_rpn_cls: 0.06586  loss_rpn_loc: 0.2095  time: 1.6453  data_time: 0.0615  lr: 0.001  max_mem: 15256M
[32m[12/16 13:16:59 d2.utils.events]: [0m eta: 2:21:51  iter: 4639  total_loss: 3.747  loss_cls_stage0: 0.2618  loss_box_reg_stage0: 0.4587  loss_cls_stage1: 0.2548  loss_box_reg_stage1: 0.9365  loss_cls_stage2: 0.2848  loss_box_reg_stage2: 1.039  loss_mask: 0.2811  loss_rpn_cls: 0.08279  loss_rpn_loc: 0.2017  time: 1.6455  data_time: 0.1494  lr: 0.001  max_mem: 15256M
[32m[12/16 13:17:32 d2.utils.events]: [0m eta: 2:21:47  iter: 4659  total_loss: 3.639  loss_cls_stage0: 0.2425  loss_box_reg_stage0: 0.4642  loss_cls_stage1: 0.2738  loss_box_reg_stage1: 0.9051  loss_cls_stage2: 0.2893  loss_box_reg_stage2: 0.971  loss_mask: 0.2647  loss_rpn_cls: 0.08902  loss_rpn_loc: 0.2281  time: 1.6455  data_time: 0.1504  lr: 0.001  max_mem: 15256M
[32m[12/16 13:18:05 d2.utils.events]: [0m eta: 2:21:21  iter: 4679  total_loss: 3.582  loss_cls_stage0: 0.2187  loss_box_reg_stage0: 0.4352  loss_cls_stage1: 0.2479  loss_box_reg_stage1: 0.8457  loss_cls_stage2: 0.2677  loss_box_reg_stage2: 0.9578  loss_mask: 0.2715  loss_rpn_cls: 0.07489  loss_rpn_loc: 0.1923  time: 1.6454  data_time: 0.0493  lr: 0.001  max_mem: 15256M
[32m[12/16 13:18:37 d2.utils.events]: [0m eta: 2:20:39  iter: 4699  total_loss: 3.664  loss_cls_stage0: 0.2168  loss_box_reg_stage0: 0.4584  loss_cls_stage1: 0.2465  loss_box_reg_stage1: 0.8814  loss_cls_stage2: 0.2727  loss_box_reg_stage2: 1.062  loss_mask: 0.2706  loss_rpn_cls: 0.07137  loss_rpn_loc: 0.2199  time: 1.6453  data_time: 0.0346  lr: 0.001  max_mem: 15256M
[32m[12/16 13:19:08 d2.utils.events]: [0m eta: 2:19:59  iter: 4719  total_loss: 3.839  loss_cls_stage0: 0.222  loss_box_reg_stage0: 0.4779  loss_cls_stage1: 0.2375  loss_box_reg_stage1: 0.9459  loss_cls_stage2: 0.292  loss_box_reg_stage2: 1.026  loss_mask: 0.2761  loss_rpn_cls: 0.06923  loss_rpn_loc: 0.2135  time: 1.6449  data_time: 0.0324  lr: 0.001  max_mem: 15256M
[32m[12/16 13:19:41 d2.utils.events]: [0m eta: 2:19:20  iter: 4739  total_loss: 3.818  loss_cls_stage0: 0.2287  loss_box_reg_stage0: 0.4696  loss_cls_stage1: 0.2553  loss_box_reg_stage1: 0.945  loss_cls_stage2: 0.2744  loss_box_reg_stage2: 1.053  loss_mask: 0.2765  loss_rpn_cls: 0.05908  loss_rpn_loc: 0.1945  time: 1.6448  data_time: 0.0712  lr: 0.001  max_mem: 15256M
[32m[12/16 13:20:17 d2.utils.events]: [0m eta: 2:19:02  iter: 4759  total_loss: 3.949  loss_cls_stage0: 0.2498  loss_box_reg_stage0: 0.5072  loss_cls_stage1: 0.2822  loss_box_reg_stage1: 0.9788  loss_cls_stage2: 0.3092  loss_box_reg_stage2: 1.055  loss_mask: 0.2762  loss_rpn_cls: 0.08744  loss_rpn_loc: 0.2352  time: 1.6456  data_time: 0.2641  lr: 0.001  max_mem: 15256M
[32m[12/16 13:20:49 d2.utils.events]: [0m eta: 2:18:36  iter: 4779  total_loss: 3.633  loss_cls_stage0: 0.2308  loss_box_reg_stage0: 0.4716  loss_cls_stage1: 0.2446  loss_box_reg_stage1: 0.9141  loss_cls_stage2: 0.2835  loss_box_reg_stage2: 1.045  loss_mask: 0.2723  loss_rpn_cls: 0.06761  loss_rpn_loc: 0.213  time: 1.6454  data_time: 0.0251  lr: 0.001  max_mem: 15256M
[32m[12/16 13:21:19 d2.utils.events]: [0m eta: 2:17:59  iter: 4799  total_loss: 3.635  loss_cls_stage0: 0.2382  loss_box_reg_stage0: 0.448  loss_cls_stage1: 0.2664  loss_box_reg_stage1: 0.8526  loss_cls_stage2: 0.2837  loss_box_reg_stage2: 0.9499  loss_mask: 0.2829  loss_rpn_cls: 0.1016  loss_rpn_loc: 0.2246  time: 1.6448  data_time: 0.0916  lr: 0.001  max_mem: 15256M
[32m[12/16 13:21:54 d2.utils.events]: [0m eta: 2:17:46  iter: 4819  total_loss: 3.63  loss_cls_stage0: 0.2194  loss_box_reg_stage0: 0.4561  loss_cls_stage1: 0.2466  loss_box_reg_stage1: 0.8691  loss_cls_stage2: 0.2696  loss_box_reg_stage2: 0.9569  loss_mask: 0.2664  loss_rpn_cls: 0.07853  loss_rpn_loc: 0.2209  time: 1.6452  data_time: 0.1122  lr: 0.001  max_mem: 15256M
[32m[12/16 13:22:25 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.25692, better than last best score 0.25268 @ iteration 3629.
[32m[12/16 13:22:25 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:22:25 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:22:25 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:22:26 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:22:26 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:22:26 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 13:22:27 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:22:28 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:22:28 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:22:28 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:22:28 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:22:28 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 13:22:34 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4771 s/iter. Eval: 0.0382 s/iter. Total: 0.5166 s/iter. ETA=0:00:25
[32m[12/16 13:22:35 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.3859 s/iter. Eval: 0.0249 s/iter. Total: 0.4120 s/iter. ETA=0:00:20
[32m[12/16 13:22:39 d2.evaluation.evaluator]: [0mInference done 22/60. Dataloading: 0.0014 s/iter. Inference: 0.4461 s/iter. Eval: 0.0495 s/iter. Total: 0.4971 s/iter. ETA=0:00:18
[32m[12/16 13:22:40 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0014 s/iter. Inference: 0.3913 s/iter. Eval: 0.0313 s/iter. Total: 0.4240 s/iter. ETA=0:00:16
[32m[12/16 13:22:45 d2.evaluation.evaluator]: [0mInference done 33/60. Dataloading: 0.0015 s/iter. Inference: 0.4435 s/iter. Eval: 0.0449 s/iter. Total: 0.4899 s/iter. ETA=0:00:13
[32m[12/16 13:22:46 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3935 s/iter. Eval: 0.0348 s/iter. Total: 0.4298 s/iter. ETA=0:00:11
[32m[12/16 13:22:50 d2.evaluation.evaluator]: [0mInference done 43/60. Dataloading: 0.0015 s/iter. Inference: 0.4509 s/iter. Eval: 0.0417 s/iter. Total: 0.4941 s/iter. ETA=0:00:08
[32m[12/16 13:22:51 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3898 s/iter. Eval: 0.0356 s/iter. Total: 0.4269 s/iter. ETA=0:00:05
[32m[12/16 13:22:55 d2.evaluation.evaluator]: [0mInference done 54/60. Dataloading: 0.0015 s/iter. Inference: 0.4454 s/iter. Eval: 0.0388 s/iter. Total: 0.4857 s/iter. ETA=0:00:02
[32m[12/16 13:22:56 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3898 s/iter. Eval: 0.0354 s/iter. Total: 0.4267 s/iter. ETA=0:00:00
[32m[12/16 13:22:57 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.019600 (0.428921 s / iter per device, on 2 devices)
[32m[12/16 13:22:57 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.389240 s / iter per device, on 2 devices)
[32m[12/16 13:22:57 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 13:22:57 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.3057587935304947
[32m[12/16 13:22:58 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:26.720093 (0.485820 s / iter per device, on 2 devices)
[32m[12/16 13:22:58 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:24 (0.441702 s / iter per device, on 2 devices)
[32m[12/16 13:22:58 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.30576, not better than best score 0.31301 @ iteration 4597.
[32m[12/16 13:22:58 d2.utils.events]: [0m eta: 2:17:10  iter: 4839  total_loss: 3.689  loss_cls_stage0: 0.2444  loss_box_reg_stage0: 0.4652  loss_cls_stage1: 0.2893  loss_box_reg_stage1: 0.8755  loss_cls_stage2: 0.292  loss_box_reg_stage2: 0.9399  loss_mask: 0.2748  loss_rpn_cls: 0.09119  loss_rpn_loc: 0.2185  time: 1.6448  data_time: 0.2142  lr: 0.001  max_mem: 15256M
[32m[12/16 13:23:29 d2.utils.events]: [0m eta: 2:16:41  iter: 4859  total_loss: 3.642  loss_cls_stage0: 0.2219  loss_box_reg_stage0: 0.4551  loss_cls_stage1: 0.2454  loss_box_reg_stage1: 0.9316  loss_cls_stage2: 0.2701  loss_box_reg_stage2: 0.965  loss_mask: 0.2747  loss_rpn_cls: 0.0725  loss_rpn_loc: 0.1927  time: 1.6445  data_time: 0.0498  lr: 0.001  max_mem: 15256M
[32m[12/16 13:24:01 d2.utils.events]: [0m eta: 2:16:30  iter: 4879  total_loss: 3.774  loss_cls_stage0: 0.212  loss_box_reg_stage0: 0.4274  loss_cls_stage1: 0.2416  loss_box_reg_stage1: 0.9241  loss_cls_stage2: 0.2493  loss_box_reg_stage2: 1.034  loss_mask: 0.2529  loss_rpn_cls: 0.05923  loss_rpn_loc: 0.2095  time: 1.6444  data_time: 0.0319  lr: 0.001  max_mem: 15256M
[32m[12/16 13:24:35 d2.utils.events]: [0m eta: 2:15:58  iter: 4899  total_loss: 3.663  loss_cls_stage0: 0.2168  loss_box_reg_stage0: 0.4442  loss_cls_stage1: 0.2329  loss_box_reg_stage1: 0.8941  loss_cls_stage2: 0.2584  loss_box_reg_stage2: 1.067  loss_mask: 0.2611  loss_rpn_cls: 0.06508  loss_rpn_loc: 0.204  time: 1.6446  data_time: 0.0867  lr: 0.001  max_mem: 15256M
[32m[12/16 13:25:10 d2.utils.events]: [0m eta: 2:15:47  iter: 4919  total_loss: 3.764  loss_cls_stage0: 0.2643  loss_box_reg_stage0: 0.4638  loss_cls_stage1: 0.2875  loss_box_reg_stage1: 0.905  loss_cls_stage2: 0.2962  loss_box_reg_stage2: 0.9651  loss_mask: 0.2657  loss_rpn_cls: 0.08275  loss_rpn_loc: 0.2187  time: 1.6450  data_time: 0.1376  lr: 0.001  max_mem: 15256M
[32m[12/16 13:25:42 d2.utils.events]: [0m eta: 2:15:33  iter: 4939  total_loss: 3.839  loss_cls_stage0: 0.2367  loss_box_reg_stage0: 0.4983  loss_cls_stage1: 0.2454  loss_box_reg_stage1: 0.8888  loss_cls_stage2: 0.2802  loss_box_reg_stage2: 1.014  loss_mask: 0.2869  loss_rpn_cls: 0.0753  loss_rpn_loc: 0.2072  time: 1.6448  data_time: 0.0309  lr: 0.001  max_mem: 15256M
[32m[12/16 13:26:16 d2.utils.events]: [0m eta: 2:15:05  iter: 4959  total_loss: 3.799  loss_cls_stage0: 0.2296  loss_box_reg_stage0: 0.453  loss_cls_stage1: 0.2466  loss_box_reg_stage1: 0.9448  loss_cls_stage2: 0.2576  loss_box_reg_stage2: 1.093  loss_mask: 0.2573  loss_rpn_cls: 0.07792  loss_rpn_loc: 0.2103  time: 1.6450  data_time: 0.1073  lr: 0.001  max_mem: 15256M
[32m[12/16 13:26:48 d2.utils.events]: [0m eta: 2:14:29  iter: 4979  total_loss: 3.735  loss_cls_stage0: 0.2513  loss_box_reg_stage0: 0.4723  loss_cls_stage1: 0.2785  loss_box_reg_stage1: 0.8939  loss_cls_stage2: 0.2866  loss_box_reg_stage2: 0.9185  loss_mask: 0.2813  loss_rpn_cls: 0.07904  loss_rpn_loc: 0.2148  time: 1.6448  data_time: 0.1507  lr: 0.001  max_mem: 15256M
[32m[12/16 13:27:21 d2.utils.events]: [0m eta: 2:13:20  iter: 4999  total_loss: 3.552  loss_cls_stage0: 0.1976  loss_box_reg_stage0: 0.4378  loss_cls_stage1: 0.2251  loss_box_reg_stage1: 0.9065  loss_cls_stage2: 0.2492  loss_box_reg_stage2: 1.003  loss_mask: 0.2748  loss_rpn_cls: 0.06497  loss_rpn_loc: 0.1987  time: 1.6448  data_time: 0.2669  lr: 0.001  max_mem: 15256M
[32m[12/16 13:27:54 d2.utils.events]: [0m eta: 2:13:26  iter: 5019  total_loss: 3.868  loss_cls_stage0: 0.2515  loss_box_reg_stage0: 0.5034  loss_cls_stage1: 0.2848  loss_box_reg_stage1: 0.9876  loss_cls_stage2: 0.3101  loss_box_reg_stage2: 1.02  loss_mask: 0.2768  loss_rpn_cls: 0.07969  loss_rpn_loc: 0.2193  time: 1.6449  data_time: 0.0373  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:28:31 d2.utils.events]: [0m eta: 2:12:52  iter: 5039  total_loss: 3.559  loss_cls_stage0: 0.2246  loss_box_reg_stage0: 0.4404  loss_cls_stage1: 0.2475  loss_box_reg_stage1: 0.8736  loss_cls_stage2: 0.2698  loss_box_reg_stage2: 0.9603  loss_mask: 0.2764  loss_rpn_cls: 0.07185  loss_rpn_loc: 0.2005  time: 1.6457  data_time: 0.3017  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:29:03 d2.utils.events]: [0m eta: 2:11:36  iter: 5059  total_loss: 3.641  loss_cls_stage0: 0.229  loss_box_reg_stage0: 0.4394  loss_cls_stage1: 0.2591  loss_box_reg_stage1: 0.9196  loss_cls_stage2: 0.2961  loss_box_reg_stage2: 0.9875  loss_mask: 0.3002  loss_rpn_cls: 0.0665  loss_rpn_loc: 0.2128  time: 1.6455  data_time: 0.1449  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:29:37 d2.utils.events]: [0m eta: 2:11:01  iter: 5079  total_loss: 3.546  loss_cls_stage0: 0.2269  loss_box_reg_stage0: 0.4541  loss_cls_stage1: 0.2639  loss_box_reg_stage1: 0.8971  loss_cls_stage2: 0.2856  loss_box_reg_stage2: 0.9975  loss_mask: 0.2878  loss_rpn_cls: 0.07459  loss_rpn_loc: 0.2233  time: 1.6457  data_time: 0.1284  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:29:40 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.25150, not better than best score 0.25692 @ iteration 4597.
[32m[12/16 13:29:40 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:29:41 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:29:41 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:29:41 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:29:41 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:29:41 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 13:29:42 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:29:42 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:29:42 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:29:43 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:29:43 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:29:43 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 13:29:49 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.5089 s/iter. Eval: 0.0368 s/iter. Total: 0.5470 s/iter. ETA=0:00:26
[32m[12/16 13:29:50 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.3681 s/iter. Eval: 0.0265 s/iter. Total: 0.3959 s/iter. ETA=0:00:19
[32m[12/16 13:29:54 d2.evaluation.evaluator]: [0mInference done 21/60. Dataloading: 0.0014 s/iter. Inference: 0.4743 s/iter. Eval: 0.0518 s/iter. Total: 0.5276 s/iter. ETA=0:00:20
[32m[12/16 13:29:55 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0015 s/iter. Inference: 0.3868 s/iter. Eval: 0.0327 s/iter. Total: 0.4211 s/iter. ETA=0:00:16
[32m[12/16 13:29:59 d2.evaluation.evaluator]: [0mInference done 32/60. Dataloading: 0.0015 s/iter. Inference: 0.4575 s/iter. Eval: 0.0459 s/iter. Total: 0.5050 s/iter. ETA=0:00:14
[32m[12/16 13:30:00 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3905 s/iter. Eval: 0.0372 s/iter. Total: 0.4293 s/iter. ETA=0:00:11
[32m[12/16 13:30:05 d2.evaluation.evaluator]: [0mInference done 44/60. Dataloading: 0.0015 s/iter. Inference: 0.4444 s/iter. Eval: 0.0417 s/iter. Total: 0.4876 s/iter. ETA=0:00:07
[32m[12/16 13:30:06 d2.evaluation.evaluator]: [0mInference done 46/61. Dataloading: 0.0015 s/iter. Inference: 0.4001 s/iter. Eval: 0.0379 s/iter. Total: 0.4396 s/iter. ETA=0:00:06
[32m[12/16 13:30:10 d2.evaluation.evaluator]: [0mInference done 55/60. Dataloading: 0.0015 s/iter. Inference: 0.4454 s/iter. Eval: 0.0399 s/iter. Total: 0.4869 s/iter. ETA=0:00:02
[32m[12/16 13:30:11 d2.evaluation.evaluator]: [0mInference done 58/61. Dataloading: 0.0015 s/iter. Inference: 0.4005 s/iter. Eval: 0.0365 s/iter. Total: 0.4386 s/iter. ETA=0:00:01
[32m[12/16 13:30:12 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.695618 (0.440993 s / iter per device, on 2 devices)
[32m[12/16 13:30:12 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:22 (0.399613 s / iter per device, on 2 devices)
[32m[12/16 13:30:12 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 13:30:12 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.31043429307994175
[32m[12/16 13:30:13 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:26.948136 (0.489966 s / iter per device, on 2 devices)
[32m[12/16 13:30:13 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:24 (0.444548 s / iter per device, on 2 devices)
[32m[12/16 13:30:13 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.31043, not better than best score 0.31301 @ iteration 4597.
[32m[12/16 13:30:37 d2.utils.events]: [0m eta: 2:10:02  iter: 5099  total_loss: 3.55  loss_cls_stage0: 0.2248  loss_box_reg_stage0: 0.442  loss_cls_stage1: 0.2384  loss_box_reg_stage1: 0.8911  loss_cls_stage2: 0.2403  loss_box_reg_stage2: 1.051  loss_mask: 0.278  loss_rpn_cls: 0.05854  loss_rpn_loc: 0.1985  time: 1.6446  data_time: 0.0385  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:31:12 d2.utils.events]: [0m eta: 2:09:43  iter: 5119  total_loss: 3.555  loss_cls_stage0: 0.2007  loss_box_reg_stage0: 0.4205  loss_cls_stage1: 0.2197  loss_box_reg_stage1: 0.8907  loss_cls_stage2: 0.2535  loss_box_reg_stage2: 1.006  loss_mask: 0.2585  loss_rpn_cls: 0.06215  loss_rpn_loc: 0.1967  time: 1.6451  data_time: 0.2333  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:31:49 d2.utils.events]: [0m eta: 2:08:58  iter: 5139  total_loss: 3.564  loss_cls_stage0: 0.2093  loss_box_reg_stage0: 0.4377  loss_cls_stage1: 0.2494  loss_box_reg_stage1: 0.8858  loss_cls_stage2: 0.2616  loss_box_reg_stage2: 1.04  loss_mask: 0.2667  loss_rpn_cls: 0.0567  loss_rpn_loc: 0.1778  time: 1.6459  data_time: 0.3226  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:32:20 d2.utils.events]: [0m eta: 2:08:30  iter: 5159  total_loss: 3.683  loss_cls_stage0: 0.2023  loss_box_reg_stage0: 0.4349  loss_cls_stage1: 0.2286  loss_box_reg_stage1: 0.9185  loss_cls_stage2: 0.24  loss_box_reg_stage2: 1.104  loss_mask: 0.259  loss_rpn_cls: 0.04643  loss_rpn_loc: 0.1543  time: 1.6455  data_time: 0.0303  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:32:50 d2.utils.events]: [0m eta: 2:07:55  iter: 5179  total_loss: 3.761  loss_cls_stage0: 0.2523  loss_box_reg_stage0: 0.4658  loss_cls_stage1: 0.2621  loss_box_reg_stage1: 0.9072  loss_cls_stage2: 0.2877  loss_box_reg_stage2: 1.053  loss_mask: 0.2663  loss_rpn_cls: 0.06489  loss_rpn_loc: 0.1807  time: 1.6448  data_time: 0.0293  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:33:21 d2.utils.events]: [0m eta: 2:07:22  iter: 5199  total_loss: 3.647  loss_cls_stage0: 0.2032  loss_box_reg_stage0: 0.4523  loss_cls_stage1: 0.2405  loss_box_reg_stage1: 0.9102  loss_cls_stage2: 0.2581  loss_box_reg_stage2: 0.981  loss_mask: 0.2839  loss_rpn_cls: 0.08326  loss_rpn_loc: 0.194  time: 1.6445  data_time: 0.1735  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:34:00 d2.utils.events]: [0m eta: 2:06:51  iter: 5219  total_loss: 3.444  loss_cls_stage0: 0.2372  loss_box_reg_stage0: 0.4243  loss_cls_stage1: 0.2695  loss_box_reg_stage1: 0.841  loss_cls_stage2: 0.272  loss_box_reg_stage2: 0.9162  loss_mask: 0.2575  loss_rpn_cls: 0.06993  loss_rpn_loc: 0.1984  time: 1.6456  data_time: 0.3828  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:34:32 d2.utils.events]: [0m eta: 2:06:23  iter: 5239  total_loss: 3.592  loss_cls_stage0: 0.2101  loss_box_reg_stage0: 0.4201  loss_cls_stage1: 0.2349  loss_box_reg_stage1: 0.8983  loss_cls_stage2: 0.2662  loss_box_reg_stage2: 0.9824  loss_mask: 0.2729  loss_rpn_cls: 0.06718  loss_rpn_loc: 0.1921  time: 1.6455  data_time: 0.1197  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:35:06 d2.utils.events]: [0m eta: 2:06:04  iter: 5259  total_loss: 3.507  loss_cls_stage0: 0.2132  loss_box_reg_stage0: 0.42  loss_cls_stage1: 0.2207  loss_box_reg_stage1: 0.8435  loss_cls_stage2: 0.2635  loss_box_reg_stage2: 0.9579  loss_mask: 0.2671  loss_rpn_cls: 0.07789  loss_rpn_loc: 0.1976  time: 1.6458  data_time: 0.1610  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:35:40 d2.utils.events]: [0m eta: 2:05:34  iter: 5279  total_loss: 3.732  loss_cls_stage0: 0.2386  loss_box_reg_stage0: 0.4731  loss_cls_stage1: 0.2622  loss_box_reg_stage1: 0.9163  loss_cls_stage2: 0.279  loss_box_reg_stage2: 0.9963  loss_mask: 0.278  loss_rpn_cls: 0.08604  loss_rpn_loc: 0.2145  time: 1.6460  data_time: 0.1689  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:36:14 d2.utils.events]: [0m eta: 2:05:09  iter: 5299  total_loss: 3.585  loss_cls_stage0: 0.2331  loss_box_reg_stage0: 0.4385  loss_cls_stage1: 0.2737  loss_box_reg_stage1: 0.8781  loss_cls_stage2: 0.2717  loss_box_reg_stage2: 0.9842  loss_mask: 0.2845  loss_rpn_cls: 0.07467  loss_rpn_loc: 0.2036  time: 1.6460  data_time: 0.0566  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:36:46 d2.utils.events]: [0m eta: 2:04:32  iter: 5319  total_loss: 3.568  loss_cls_stage0: 0.1992  loss_box_reg_stage0: 0.4517  loss_cls_stage1: 0.2446  loss_box_reg_stage1: 0.9088  loss_cls_stage2: 0.266  loss_box_reg_stage2: 0.9686  loss_mask: 0.2849  loss_rpn_cls: 0.05324  loss_rpn_loc: 0.1795  time: 1.6459  data_time: 0.0515  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:36:52 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.25239, not better than best score 0.25692 @ iteration 4597.
[32m[12/16 13:36:52 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:36:52 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:36:52 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:36:52 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:36:53 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:36:53 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 13:36:54 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:36:54 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:36:54 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:36:54 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:36:55 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:36:55 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 13:37:01 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4987 s/iter. Eval: 0.0370 s/iter. Total: 0.5371 s/iter. ETA=0:00:26
[32m[12/16 13:37:02 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0012 s/iter. Inference: 0.4068 s/iter. Eval: 0.0263 s/iter. Total: 0.4343 s/iter. ETA=0:00:21
[32m[12/16 13:37:06 d2.evaluation.evaluator]: [0mInference done 20/60. Dataloading: 0.0014 s/iter. Inference: 0.5124 s/iter. Eval: 0.0510 s/iter. Total: 0.5649 s/iter. ETA=0:00:22
[32m[12/16 13:37:07 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0014 s/iter. Inference: 0.4004 s/iter. Eval: 0.0326 s/iter. Total: 0.4345 s/iter. ETA=0:00:16
[32m[12/16 13:37:11 d2.evaluation.evaluator]: [0mInference done 31/60. Dataloading: 0.0015 s/iter. Inference: 0.4756 s/iter. Eval: 0.0478 s/iter. Total: 0.5249 s/iter. ETA=0:00:15
[32m[12/16 13:37:13 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3949 s/iter. Eval: 0.0374 s/iter. Total: 0.4339 s/iter. ETA=0:00:11
[32m[12/16 13:37:17 d2.evaluation.evaluator]: [0mInference done 42/60. Dataloading: 0.0015 s/iter. Inference: 0.4681 s/iter. Eval: 0.0435 s/iter. Total: 0.5132 s/iter. ETA=0:00:09
[32m[12/16 13:37:18 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3947 s/iter. Eval: 0.0375 s/iter. Total: 0.4337 s/iter. ETA=0:00:06
[32m[12/16 13:37:22 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4634 s/iter. Eval: 0.0404 s/iter. Total: 0.5054 s/iter. ETA=0:00:03
[32m[12/16 13:37:23 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3932 s/iter. Eval: 0.0372 s/iter. Total: 0.4319 s/iter. ETA=0:00:00
[32m[12/16 13:37:24 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.377109 (0.435306 s / iter per device, on 2 devices)
[32m[12/16 13:37:24 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:22 (0.393345 s / iter per device, on 2 devices)
[32m[12/16 13:37:24 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 13:37:24 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.30814935520238396
[32m[12/16 13:37:26 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.968427 (0.508517 s / iter per device, on 2 devices)
[32m[12/16 13:37:26 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.462417 s / iter per device, on 2 devices)
[32m[12/16 13:37:26 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.30815, not better than best score 0.31301 @ iteration 4597.
[32m[12/16 13:37:52 d2.utils.events]: [0m eta: 2:03:53  iter: 5339  total_loss: 3.822  loss_cls_stage0: 0.254  loss_box_reg_stage0: 0.4555  loss_cls_stage1: 0.2726  loss_box_reg_stage1: 0.9661  loss_cls_stage2: 0.287  loss_box_reg_stage2: 1.063  loss_mask: 0.2789  loss_rpn_cls: 0.06563  loss_rpn_loc: 0.2189  time: 1.6459  data_time: 0.1630  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:38:23 d2.utils.events]: [0m eta: 2:03:08  iter: 5359  total_loss: 3.464  loss_cls_stage0: 0.2306  loss_box_reg_stage0: 0.4468  loss_cls_stage1: 0.2548  loss_box_reg_stage1: 0.8412  loss_cls_stage2: 0.2656  loss_box_reg_stage2: 1.032  loss_mask: 0.2499  loss_rpn_cls: 0.05139  loss_rpn_loc: 0.1766  time: 1.6455  data_time: 0.0276  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:38:55 d2.utils.events]: [0m eta: 2:02:36  iter: 5379  total_loss: 3.587  loss_cls_stage0: 0.2069  loss_box_reg_stage0: 0.4131  loss_cls_stage1: 0.2345  loss_box_reg_stage1: 0.905  loss_cls_stage2: 0.2617  loss_box_reg_stage2: 1.057  loss_mask: 0.265  loss_rpn_cls: 0.05407  loss_rpn_loc: 0.1944  time: 1.6452  data_time: 0.0301  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:39:30 d2.utils.events]: [0m eta: 2:01:59  iter: 5399  total_loss: 3.724  loss_cls_stage0: 0.2367  loss_box_reg_stage0: 0.4355  loss_cls_stage1: 0.262  loss_box_reg_stage1: 0.9153  loss_cls_stage2: 0.2791  loss_box_reg_stage2: 1.006  loss_mask: 0.2731  loss_rpn_cls: 0.07945  loss_rpn_loc: 0.2068  time: 1.6458  data_time: 0.2534  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:40:06 d2.utils.events]: [0m eta: 2:01:29  iter: 5419  total_loss: 3.581  loss_cls_stage0: 0.2572  loss_box_reg_stage0: 0.4351  loss_cls_stage1: 0.2723  loss_box_reg_stage1: 0.8293  loss_cls_stage2: 0.2762  loss_box_reg_stage2: 0.8985  loss_mask: 0.2836  loss_rpn_cls: 0.09853  loss_rpn_loc: 0.2245  time: 1.6462  data_time: 0.1716  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:40:39 d2.utils.events]: [0m eta: 2:00:58  iter: 5439  total_loss: 3.65  loss_cls_stage0: 0.2258  loss_box_reg_stage0: 0.4397  loss_cls_stage1: 0.2422  loss_box_reg_stage1: 0.8736  loss_cls_stage2: 0.2631  loss_box_reg_stage2: 0.9551  loss_mask: 0.2674  loss_rpn_cls: 0.0772  loss_rpn_loc: 0.2168  time: 1.6462  data_time: 0.0935  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:41:18 d2.utils.events]: [0m eta: 2:00:27  iter: 5459  total_loss: 3.409  loss_cls_stage0: 0.1931  loss_box_reg_stage0: 0.4238  loss_cls_stage1: 0.2213  loss_box_reg_stage1: 0.8488  loss_cls_stage2: 0.2486  loss_box_reg_stage2: 0.9819  loss_mask: 0.2558  loss_rpn_cls: 0.05142  loss_rpn_loc: 0.1871  time: 1.6474  data_time: 0.3278  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:41:50 d2.utils.events]: [0m eta: 2:00:15  iter: 5479  total_loss: 3.443  loss_cls_stage0: 0.2159  loss_box_reg_stage0: 0.4313  loss_cls_stage1: 0.2395  loss_box_reg_stage1: 0.8875  loss_cls_stage2: 0.2624  loss_box_reg_stage2: 1.011  loss_mask: 0.2764  loss_rpn_cls: 0.06332  loss_rpn_loc: 0.1999  time: 1.6472  data_time: 0.0403  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:42:22 d2.utils.events]: [0m eta: 1:59:50  iter: 5499  total_loss: 3.567  loss_cls_stage0: 0.2167  loss_box_reg_stage0: 0.4402  loss_cls_stage1: 0.24  loss_box_reg_stage1: 0.8999  loss_cls_stage2: 0.2637  loss_box_reg_stage2: 1.019  loss_mask: 0.2706  loss_rpn_cls: 0.07454  loss_rpn_loc: 0.1866  time: 1.6471  data_time: 0.0371  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:42:57 d2.utils.events]: [0m eta: 1:59:16  iter: 5519  total_loss: 3.609  loss_cls_stage0: 0.1895  loss_box_reg_stage0: 0.4206  loss_cls_stage1: 0.1974  loss_box_reg_stage1: 0.9058  loss_cls_stage2: 0.2325  loss_box_reg_stage2: 1.037  loss_mask: 0.2735  loss_rpn_cls: 0.07974  loss_rpn_loc: 0.2139  time: 1.6474  data_time: 0.2321  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:43:27 d2.utils.events]: [0m eta: 1:58:41  iter: 5539  total_loss: 3.784  loss_cls_stage0: 0.2324  loss_box_reg_stage0: 0.4747  loss_cls_stage1: 0.2543  loss_box_reg_stage1: 0.9173  loss_cls_stage2: 0.2734  loss_box_reg_stage2: 1.077  loss_mask: 0.2661  loss_rpn_cls: 0.08032  loss_rpn_loc: 0.1851  time: 1.6469  data_time: 0.0303  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:43:59 d2.utils.events]: [0m eta: 1:58:02  iter: 5559  total_loss: 3.77  loss_cls_stage0: 0.2534  loss_box_reg_stage0: 0.458  loss_cls_stage1: 0.2828  loss_box_reg_stage1: 0.9199  loss_cls_stage2: 0.2767  loss_box_reg_stage2: 0.9873  loss_mask: 0.273  loss_rpn_cls: 0.08587  loss_rpn_loc: 0.2191  time: 1.6466  data_time: 0.1246  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:44:10 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.25245, not better than best score 0.25692 @ iteration 4597.
[32m[12/16 13:44:10 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:44:11 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:44:11 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:44:11 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:44:11 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:44:11 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 13:44:12 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:44:12 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:44:12 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:44:13 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:44:13 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:44:13 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 13:44:19 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0012 s/iter. Inference: 0.4875 s/iter. Eval: 0.0361 s/iter. Total: 0.5249 s/iter. ETA=0:00:25
[32m[12/16 13:44:20 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0012 s/iter. Inference: 0.3666 s/iter. Eval: 0.0265 s/iter. Total: 0.3943 s/iter. ETA=0:00:19
[32m[12/16 13:44:24 d2.evaluation.evaluator]: [0mInference done 22/60. Dataloading: 0.0014 s/iter. Inference: 0.4404 s/iter. Eval: 0.0502 s/iter. Total: 0.4920 s/iter. ETA=0:00:18
[32m[12/16 13:44:25 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0015 s/iter. Inference: 0.3945 s/iter. Eval: 0.0328 s/iter. Total: 0.4289 s/iter. ETA=0:00:16
[32m[12/16 13:44:29 d2.evaluation.evaluator]: [0mInference done 33/60. Dataloading: 0.0015 s/iter. Inference: 0.4437 s/iter. Eval: 0.0460 s/iter. Total: 0.4913 s/iter. ETA=0:00:13
[32m[12/16 13:44:31 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3938 s/iter. Eval: 0.0380 s/iter. Total: 0.4334 s/iter. ETA=0:00:11
[32m[12/16 13:44:34 d2.evaluation.evaluator]: [0mInference done 43/60. Dataloading: 0.0015 s/iter. Inference: 0.4502 s/iter. Eval: 0.0428 s/iter. Total: 0.4945 s/iter. ETA=0:00:08
[32m[12/16 13:44:36 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3920 s/iter. Eval: 0.0378 s/iter. Total: 0.4314 s/iter. ETA=0:00:06
[32m[12/16 13:44:40 d2.evaluation.evaluator]: [0mInference done 54/60. Dataloading: 0.0015 s/iter. Inference: 0.4486 s/iter. Eval: 0.0401 s/iter. Total: 0.4902 s/iter. ETA=0:00:02
[32m[12/16 13:44:41 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3910 s/iter. Eval: 0.0376 s/iter. Total: 0.4302 s/iter. ETA=0:00:00
[32m[12/16 13:44:42 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.237382 (0.432810 s / iter per device, on 2 devices)
[32m[12/16 13:44:42 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.390494 s / iter per device, on 2 devices)
[32m[12/16 13:44:42 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 13:44:42 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.3120442508030072
[32m[12/16 13:44:43 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.267392 (0.495771 s / iter per device, on 2 devices)
[32m[12/16 13:44:43 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:24 (0.449676 s / iter per device, on 2 devices)
[32m[12/16 13:44:43 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.31204, not better than best score 0.31301 @ iteration 4597.
[32m[12/16 13:45:05 d2.utils.events]: [0m eta: 1:57:35  iter: 5579  total_loss: 3.52  loss_cls_stage0: 0.2026  loss_box_reg_stage0: 0.4249  loss_cls_stage1: 0.2062  loss_box_reg_stage1: 0.8253  loss_cls_stage2: 0.2302  loss_box_reg_stage2: 0.9971  loss_mask: 0.2688  loss_rpn_cls: 0.06332  loss_rpn_loc: 0.198  time: 1.6468  data_time: 0.0333  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:45:44 d2.utils.events]: [0m eta: 1:57:06  iter: 5599  total_loss: 3.542  loss_cls_stage0: 0.1991  loss_box_reg_stage0: 0.4431  loss_cls_stage1: 0.2066  loss_box_reg_stage1: 0.909  loss_cls_stage2: 0.2515  loss_box_reg_stage2: 0.9684  loss_mask: 0.2774  loss_rpn_cls: 0.04905  loss_rpn_loc: 0.1843  time: 1.6478  data_time: 0.4317  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:46:16 d2.utils.events]: [0m eta: 1:56:46  iter: 5619  total_loss: 3.684  loss_cls_stage0: 0.24  loss_box_reg_stage0: 0.4495  loss_cls_stage1: 0.2369  loss_box_reg_stage1: 0.89  loss_cls_stage2: 0.2418  loss_box_reg_stage2: 1.031  loss_mask: 0.2747  loss_rpn_cls: 0.06875  loss_rpn_loc: 0.177  time: 1.6476  data_time: 0.0362  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:46:47 d2.utils.events]: [0m eta: 1:56:04  iter: 5639  total_loss: 3.613  loss_cls_stage0: 0.2587  loss_box_reg_stage0: 0.4532  loss_cls_stage1: 0.253  loss_box_reg_stage1: 0.8996  loss_cls_stage2: 0.2521  loss_box_reg_stage2: 0.9303  loss_mask: 0.2752  loss_rpn_cls: 0.069  loss_rpn_loc: 0.2112  time: 1.6472  data_time: 0.0372  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:47:20 d2.utils.events]: [0m eta: 1:55:46  iter: 5659  total_loss: 3.653  loss_cls_stage0: 0.2108  loss_box_reg_stage0: 0.4506  loss_cls_stage1: 0.2303  loss_box_reg_stage1: 0.9004  loss_cls_stage2: 0.2605  loss_box_reg_stage2: 0.9756  loss_mask: 0.2935  loss_rpn_cls: 0.0673  loss_rpn_loc: 0.1871  time: 1.6473  data_time: 0.0686  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:47:54 d2.utils.events]: [0m eta: 1:55:16  iter: 5679  total_loss: 3.507  loss_cls_stage0: 0.21  loss_box_reg_stage0: 0.4176  loss_cls_stage1: 0.216  loss_box_reg_stage1: 0.8671  loss_cls_stage2: 0.2388  loss_box_reg_stage2: 1.01  loss_mask: 0.26  loss_rpn_cls: 0.04744  loss_rpn_loc: 0.1849  time: 1.6475  data_time: 0.1062  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:48:26 d2.utils.events]: [0m eta: 1:54:38  iter: 5699  total_loss: 3.43  loss_cls_stage0: 0.1966  loss_box_reg_stage0: 0.412  loss_cls_stage1: 0.2168  loss_box_reg_stage1: 0.8307  loss_cls_stage2: 0.2414  loss_box_reg_stage2: 1.004  loss_mask: 0.2647  loss_rpn_cls: 0.07611  loss_rpn_loc: 0.1925  time: 1.6473  data_time: 0.1041  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:48:58 d2.utils.events]: [0m eta: 1:54:06  iter: 5719  total_loss: 3.742  loss_cls_stage0: 0.2147  loss_box_reg_stage0: 0.4584  loss_cls_stage1: 0.2299  loss_box_reg_stage1: 0.9366  loss_cls_stage2: 0.2705  loss_box_reg_stage2: 1.07  loss_mask: 0.2589  loss_rpn_cls: 0.06151  loss_rpn_loc: 0.1789  time: 1.6471  data_time: 0.1025  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:49:35 d2.utils.events]: [0m eta: 1:53:29  iter: 5739  total_loss: 3.594  loss_cls_stage0: 0.2169  loss_box_reg_stage0: 0.4332  loss_cls_stage1: 0.2611  loss_box_reg_stage1: 0.8543  loss_cls_stage2: 0.2718  loss_box_reg_stage2: 0.8745  loss_mask: 0.2874  loss_rpn_cls: 0.08263  loss_rpn_loc: 0.2173  time: 1.6478  data_time: 0.2946  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:50:05 d2.utils.events]: [0m eta: 1:52:48  iter: 5759  total_loss: 3.64  loss_cls_stage0: 0.2236  loss_box_reg_stage0: 0.4378  loss_cls_stage1: 0.2215  loss_box_reg_stage1: 0.8951  loss_cls_stage2: 0.2706  loss_box_reg_stage2: 1.022  loss_mask: 0.2636  loss_rpn_cls: 0.05182  loss_rpn_loc: 0.2061  time: 1.6474  data_time: 0.0233  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:50:41 d2.utils.events]: [0m eta: 1:52:20  iter: 5779  total_loss: 3.638  loss_cls_stage0: 0.2537  loss_box_reg_stage0: 0.4513  loss_cls_stage1: 0.295  loss_box_reg_stage1: 0.8857  loss_cls_stage2: 0.3054  loss_box_reg_stage2: 0.9484  loss_mask: 0.2726  loss_rpn_cls: 0.1004  loss_rpn_loc: 0.2039  time: 1.6479  data_time: 0.2833  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:51:15 d2.utils.events]: [0m eta: 1:52:04  iter: 5799  total_loss: 3.591  loss_cls_stage0: 0.2292  loss_box_reg_stage0: 0.4583  loss_cls_stage1: 0.2563  loss_box_reg_stage1: 0.8625  loss_cls_stage2: 0.2739  loss_box_reg_stage2: 0.9759  loss_mask: 0.2655  loss_rpn_cls: 0.07927  loss_rpn_loc: 0.1994  time: 1.6480  data_time: 0.1385  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:51:26 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.25388, not better than best score 0.25692 @ iteration 4597.
[32m[12/16 13:51:26 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:51:26 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:51:26 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:51:26 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:51:27 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:51:27 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 13:51:28 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:51:28 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:51:28 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:51:28 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:51:29 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:51:29 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 13:51:35 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4607 s/iter. Eval: 0.0359 s/iter. Total: 0.4979 s/iter. ETA=0:00:24
[32m[12/16 13:51:36 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.4329 s/iter. Eval: 0.0262 s/iter. Total: 0.4603 s/iter. ETA=0:00:23
[32m[12/16 13:51:40 d2.evaluation.evaluator]: [0mInference done 20/60. Dataloading: 0.0015 s/iter. Inference: 0.4849 s/iter. Eval: 0.0506 s/iter. Total: 0.5370 s/iter. ETA=0:00:21
[32m[12/16 13:51:41 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0014 s/iter. Inference: 0.4005 s/iter. Eval: 0.0328 s/iter. Total: 0.4348 s/iter. ETA=0:00:16
[32m[12/16 13:51:45 d2.evaluation.evaluator]: [0mInference done 30/60. Dataloading: 0.0015 s/iter. Inference: 0.4743 s/iter. Eval: 0.0466 s/iter. Total: 0.5225 s/iter. ETA=0:00:15
[32m[12/16 13:51:47 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3911 s/iter. Eval: 0.0386 s/iter. Total: 0.4313 s/iter. ETA=0:00:11
[32m[12/16 13:51:51 d2.evaluation.evaluator]: [0mInference done 40/60. Dataloading: 0.0015 s/iter. Inference: 0.4832 s/iter. Eval: 0.0436 s/iter. Total: 0.5284 s/iter. ETA=0:00:10
[32m[12/16 13:51:52 d2.evaluation.evaluator]: [0mInference done 46/61. Dataloading: 0.0015 s/iter. Inference: 0.3974 s/iter. Eval: 0.0388 s/iter. Total: 0.4378 s/iter. ETA=0:00:06
[32m[12/16 13:51:56 d2.evaluation.evaluator]: [0mInference done 51/60. Dataloading: 0.0015 s/iter. Inference: 0.4764 s/iter. Eval: 0.0409 s/iter. Total: 0.5188 s/iter. ETA=0:00:04
[32m[12/16 13:51:57 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3935 s/iter. Eval: 0.0378 s/iter. Total: 0.4329 s/iter. ETA=0:00:00
[32m[12/16 13:51:58 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.363343 (0.435060 s / iter per device, on 2 devices)
[32m[12/16 13:51:58 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:22 (0.393007 s / iter per device, on 2 devices)
[32m[12/16 13:51:58 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 13:51:58 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.31103059985036957
[32m[12/16 13:52:01 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:28.542269 (0.518950 s / iter per device, on 2 devices)
[32m[12/16 13:52:01 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:26 (0.473218 s / iter per device, on 2 devices)
[32m[12/16 13:52:01 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.31103, not better than best score 0.31301 @ iteration 4597.
[32m[12/16 13:52:18 d2.utils.events]: [0m eta: 1:50:54  iter: 5819  total_loss: 3.655  loss_cls_stage0: 0.2108  loss_box_reg_stage0: 0.451  loss_cls_stage1: 0.2173  loss_box_reg_stage1: 0.9261  loss_cls_stage2: 0.2544  loss_box_reg_stage2: 1.103  loss_mask: 0.2637  loss_rpn_cls: 0.05448  loss_rpn_loc: 0.1996  time: 1.6472  data_time: 0.0288  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:52:49 d2.utils.events]: [0m eta: 1:50:32  iter: 5839  total_loss: 3.484  loss_cls_stage0: 0.2019  loss_box_reg_stage0: 0.4103  loss_cls_stage1: 0.2227  loss_box_reg_stage1: 0.844  loss_cls_stage2: 0.2468  loss_box_reg_stage2: 1.024  loss_mask: 0.2702  loss_rpn_cls: 0.05249  loss_rpn_loc: 0.1772  time: 1.6470  data_time: 0.0256  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:53:21 d2.utils.events]: [0m eta: 1:49:52  iter: 5859  total_loss: 3.675  loss_cls_stage0: 0.2382  loss_box_reg_stage0: 0.4783  loss_cls_stage1: 0.241  loss_box_reg_stage1: 0.9024  loss_cls_stage2: 0.2756  loss_box_reg_stage2: 0.9878  loss_mask: 0.2774  loss_rpn_cls: 0.06709  loss_rpn_loc: 0.1949  time: 1.6467  data_time: 0.0711  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:53:54 d2.utils.events]: [0m eta: 1:49:08  iter: 5879  total_loss: 3.852  loss_cls_stage0: 0.2423  loss_box_reg_stage0: 0.4553  loss_cls_stage1: 0.2471  loss_box_reg_stage1: 0.9184  loss_cls_stage2: 0.2474  loss_box_reg_stage2: 1.086  loss_mask: 0.2611  loss_rpn_cls: 0.05884  loss_rpn_loc: 0.2026  time: 1.6468  data_time: 0.0579  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:54:27 d2.utils.events]: [0m eta: 1:48:31  iter: 5899  total_loss: 3.724  loss_cls_stage0: 0.2273  loss_box_reg_stage0: 0.4457  loss_cls_stage1: 0.2477  loss_box_reg_stage1: 0.9249  loss_cls_stage2: 0.2735  loss_box_reg_stage2: 1.041  loss_mask: 0.273  loss_rpn_cls: 0.07596  loss_rpn_loc: 0.2022  time: 1.6468  data_time: 0.0446  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:54:58 d2.utils.events]: [0m eta: 1:47:49  iter: 5919  total_loss: 3.556  loss_cls_stage0: 0.2056  loss_box_reg_stage0: 0.4368  loss_cls_stage1: 0.2351  loss_box_reg_stage1: 0.9009  loss_cls_stage2: 0.2456  loss_box_reg_stage2: 0.9719  loss_mask: 0.2678  loss_rpn_cls: 0.04889  loss_rpn_loc: 0.1816  time: 1.6465  data_time: 0.0261  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:55:31 d2.utils.events]: [0m eta: 1:47:11  iter: 5939  total_loss: 3.516  loss_cls_stage0: 0.2206  loss_box_reg_stage0: 0.4288  loss_cls_stage1: 0.2447  loss_box_reg_stage1: 0.8721  loss_cls_stage2: 0.276  loss_box_reg_stage2: 0.8634  loss_mask: 0.2707  loss_rpn_cls: 0.09031  loss_rpn_loc: 0.1925  time: 1.6464  data_time: 0.0475  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:56:02 d2.utils.events]: [0m eta: 1:46:30  iter: 5959  total_loss: 3.412  loss_cls_stage0: 0.2321  loss_box_reg_stage0: 0.4167  loss_cls_stage1: 0.2554  loss_box_reg_stage1: 0.7778  loss_cls_stage2: 0.2694  loss_box_reg_stage2: 0.9281  loss_mask: 0.2685  loss_rpn_cls: 0.06884  loss_rpn_loc: 0.2064  time: 1.6462  data_time: 0.0726  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:56:35 d2.utils.events]: [0m eta: 1:46:14  iter: 5979  total_loss: 3.516  loss_cls_stage0: 0.1947  loss_box_reg_stage0: 0.4488  loss_cls_stage1: 0.2208  loss_box_reg_stage1: 0.8803  loss_cls_stage2: 0.2523  loss_box_reg_stage2: 1.026  loss_mask: 0.2686  loss_rpn_cls: 0.04961  loss_rpn_loc: 0.1715  time: 1.6462  data_time: 0.0755  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:57:11 d2.utils.events]: [0m eta: 1:45:53  iter: 5999  total_loss: 3.721  loss_cls_stage0: 0.2388  loss_box_reg_stage0: 0.4403  loss_cls_stage1: 0.267  loss_box_reg_stage1: 0.8609  loss_cls_stage2: 0.2997  loss_box_reg_stage2: 0.9754  loss_mask: 0.2784  loss_rpn_cls: 0.0785  loss_rpn_loc: 0.2055  time: 1.6467  data_time: 0.2176  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:57:45 d2.utils.events]: [0m eta: 1:45:02  iter: 6019  total_loss: 3.617  loss_cls_stage0: 0.1948  loss_box_reg_stage0: 0.4461  loss_cls_stage1: 0.2403  loss_box_reg_stage1: 0.9344  loss_cls_stage2: 0.2622  loss_box_reg_stage2: 0.9635  loss_mask: 0.2822  loss_rpn_cls: 0.06507  loss_rpn_loc: 0.193  time: 1.6469  data_time: 0.1188  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:58:19 d2.utils.events]: [0m eta: 1:44:25  iter: 6039  total_loss: 3.718  loss_cls_stage0: 0.1963  loss_box_reg_stage0: 0.4407  loss_cls_stage1: 0.2232  loss_box_reg_stage1: 0.9282  loss_cls_stage2: 0.25  loss_box_reg_stage2: 1.066  loss_mask: 0.2783  loss_rpn_cls: 0.05753  loss_rpn_loc: 0.2116  time: 1.6469  data_time: 0.1260  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:58:34 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.25329, not better than best score 0.25692 @ iteration 4597.
[32m[12/16 13:58:35 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:58:35 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:58:35 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:58:35 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:58:35 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:58:35 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 13:58:37 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:58:37 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 13:58:37 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 13:58:37 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 13:58:37 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 13:58:37 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 13:58:43 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4975 s/iter. Eval: 0.0363 s/iter. Total: 0.5352 s/iter. ETA=0:00:26
[32m[12/16 13:58:45 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.3827 s/iter. Eval: 0.0264 s/iter. Total: 0.4105 s/iter. ETA=0:00:20
[32m[12/16 13:58:49 d2.evaluation.evaluator]: [0mInference done 22/60. Dataloading: 0.0015 s/iter. Inference: 0.4602 s/iter. Eval: 0.0503 s/iter. Total: 0.5121 s/iter. ETA=0:00:19
[32m[12/16 13:58:50 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0014 s/iter. Inference: 0.3886 s/iter. Eval: 0.0327 s/iter. Total: 0.4229 s/iter. ETA=0:00:16
[32m[12/16 13:58:54 d2.evaluation.evaluator]: [0mInference done 32/60. Dataloading: 0.0015 s/iter. Inference: 0.4636 s/iter. Eval: 0.0464 s/iter. Total: 0.5116 s/iter. ETA=0:00:14
[32m[12/16 13:58:55 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3876 s/iter. Eval: 0.0378 s/iter. Total: 0.4270 s/iter. ETA=0:00:11
[32m[12/16 13:58:59 d2.evaluation.evaluator]: [0mInference done 42/60. Dataloading: 0.0015 s/iter. Inference: 0.4654 s/iter. Eval: 0.0435 s/iter. Total: 0.5105 s/iter. ETA=0:00:09
[32m[12/16 13:59:00 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3886 s/iter. Eval: 0.0378 s/iter. Total: 0.4280 s/iter. ETA=0:00:05
[32m[12/16 13:59:05 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4643 s/iter. Eval: 0.0404 s/iter. Total: 0.5062 s/iter. ETA=0:00:03
[32m[12/16 13:59:05 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3900 s/iter. Eval: 0.0376 s/iter. Total: 0.4292 s/iter. ETA=0:00:00
[32m[12/16 13:59:06 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.183751 (0.431853 s / iter per device, on 2 devices)
[32m[12/16 13:59:06 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.389515 s / iter per device, on 2 devices)
[32m[12/16 13:59:06 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 13:59:06 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.3081597518709866
[32m[12/16 13:59:08 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:28.035028 (0.509728 s / iter per device, on 2 devices)
[32m[12/16 13:59:08 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.463651 s / iter per device, on 2 devices)
[32m[12/16 13:59:08 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.30816, not better than best score 0.31301 @ iteration 4597.
[32m[12/16 13:59:24 d2.utils.events]: [0m eta: 1:44:07  iter: 6059  total_loss: 3.433  loss_cls_stage0: 0.1904  loss_box_reg_stage0: 0.3941  loss_cls_stage1: 0.197  loss_box_reg_stage1: 0.8668  loss_cls_stage2: 0.2282  loss_box_reg_stage2: 1.007  loss_mask: 0.2429  loss_rpn_cls: 0.05418  loss_rpn_loc: 0.1575  time: 1.6467  data_time: 0.0430  lr: 0.0001  max_mem: 15256M
[32m[12/16 13:59:57 d2.utils.events]: [0m eta: 1:43:41  iter: 6079  total_loss: 3.546  loss_cls_stage0: 0.2025  loss_box_reg_stage0: 0.4341  loss_cls_stage1: 0.2173  loss_box_reg_stage1: 0.9198  loss_cls_stage2: 0.2466  loss_box_reg_stage2: 1.045  loss_mask: 0.2782  loss_rpn_cls: 0.05377  loss_rpn_loc: 0.206  time: 1.6467  data_time: 0.0440  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:00:28 d2.utils.events]: [0m eta: 1:43:29  iter: 6099  total_loss: 3.555  loss_cls_stage0: 0.2141  loss_box_reg_stage0: 0.421  loss_cls_stage1: 0.2213  loss_box_reg_stage1: 0.8533  loss_cls_stage2: 0.2597  loss_box_reg_stage2: 1.01  loss_mask: 0.2544  loss_rpn_cls: 0.05852  loss_rpn_loc: 0.1944  time: 1.6463  data_time: 0.0327  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:00:59 d2.utils.events]: [0m eta: 1:42:47  iter: 6119  total_loss: 3.512  loss_cls_stage0: 0.211  loss_box_reg_stage0: 0.4394  loss_cls_stage1: 0.2226  loss_box_reg_stage1: 0.8707  loss_cls_stage2: 0.259  loss_box_reg_stage2: 0.991  loss_mask: 0.2705  loss_rpn_cls: 0.05532  loss_rpn_loc: 0.2005  time: 1.6461  data_time: 0.0545  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:01:33 d2.utils.events]: [0m eta: 1:42:28  iter: 6139  total_loss: 3.605  loss_cls_stage0: 0.2147  loss_box_reg_stage0: 0.472  loss_cls_stage1: 0.2623  loss_box_reg_stage1: 0.8729  loss_cls_stage2: 0.2759  loss_box_reg_stage2: 1.022  loss_mask: 0.2779  loss_rpn_cls: 0.08644  loss_rpn_loc: 0.2142  time: 1.6462  data_time: 0.1317  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:02:07 d2.utils.events]: [0m eta: 1:42:08  iter: 6159  total_loss: 3.536  loss_cls_stage0: 0.2036  loss_box_reg_stage0: 0.4501  loss_cls_stage1: 0.2004  loss_box_reg_stage1: 0.9079  loss_cls_stage2: 0.2293  loss_box_reg_stage2: 1.002  loss_mask: 0.255  loss_rpn_cls: 0.04868  loss_rpn_loc: 0.1583  time: 1.6463  data_time: 0.0431  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:02:45 d2.utils.events]: [0m eta: 1:41:39  iter: 6179  total_loss: 3.753  loss_cls_stage0: 0.2353  loss_box_reg_stage0: 0.4469  loss_cls_stage1: 0.2662  loss_box_reg_stage1: 0.9314  loss_cls_stage2: 0.2835  loss_box_reg_stage2: 0.9852  loss_mask: 0.2741  loss_rpn_cls: 0.08068  loss_rpn_loc: 0.2163  time: 1.6472  data_time: 0.4736  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:03:21 d2.utils.events]: [0m eta: 1:41:34  iter: 6199  total_loss: 3.353  loss_cls_stage0: 0.2162  loss_box_reg_stage0: 0.4029  loss_cls_stage1: 0.2272  loss_box_reg_stage1: 0.8127  loss_cls_stage2: 0.2453  loss_box_reg_stage2: 0.9564  loss_mask: 0.2642  loss_rpn_cls: 0.07954  loss_rpn_loc: 0.2221  time: 1.6476  data_time: 0.1789  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:03:50 d2.utils.events]: [0m eta: 1:40:35  iter: 6219  total_loss: 3.794  loss_cls_stage0: 0.2368  loss_box_reg_stage0: 0.469  loss_cls_stage1: 0.2825  loss_box_reg_stage1: 0.9016  loss_cls_stage2: 0.2712  loss_box_reg_stage2: 1.021  loss_mask: 0.2892  loss_rpn_cls: 0.05957  loss_rpn_loc: 0.2043  time: 1.6471  data_time: 0.0313  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:04:22 d2.utils.events]: [0m eta: 1:40:10  iter: 6239  total_loss: 3.694  loss_cls_stage0: 0.2004  loss_box_reg_stage0: 0.4525  loss_cls_stage1: 0.2397  loss_box_reg_stage1: 0.925  loss_cls_stage2: 0.2651  loss_box_reg_stage2: 1.097  loss_mask: 0.2617  loss_rpn_cls: 0.06458  loss_rpn_loc: 0.1792  time: 1.6469  data_time: 0.0717  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:04:54 d2.utils.events]: [0m eta: 1:39:28  iter: 6259  total_loss: 3.632  loss_cls_stage0: 0.207  loss_box_reg_stage0: 0.4216  loss_cls_stage1: 0.2417  loss_box_reg_stage1: 0.8735  loss_cls_stage2: 0.2697  loss_box_reg_stage2: 0.9851  loss_mask: 0.2754  loss_rpn_cls: 0.07796  loss_rpn_loc: 0.2113  time: 1.6467  data_time: 0.0429  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:05:26 d2.utils.events]: [0m eta: 1:38:49  iter: 6279  total_loss: 3.456  loss_cls_stage0: 0.2373  loss_box_reg_stage0: 0.417  loss_cls_stage1: 0.2363  loss_box_reg_stage1: 0.8655  loss_cls_stage2: 0.2503  loss_box_reg_stage2: 0.9645  loss_mask: 0.2621  loss_rpn_cls: 0.06171  loss_rpn_loc: 0.1826  time: 1.6466  data_time: 0.2421  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:05:47 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.25262, not better than best score 0.25692 @ iteration 4597.
[32m[12/16 14:05:47 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:05:47 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 14:05:47 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 14:05:47 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 14:05:47 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:05:47 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 14:05:49 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:05:49 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 14:05:49 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 14:05:49 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 14:05:49 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:05:49 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 14:05:56 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0012 s/iter. Inference: 0.5340 s/iter. Eval: 0.0360 s/iter. Total: 0.5712 s/iter. ETA=0:00:27
[32m[12/16 14:05:57 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.4514 s/iter. Eval: 0.0269 s/iter. Total: 0.4795 s/iter. ETA=0:00:23
[32m[12/16 14:06:01 d2.evaluation.evaluator]: [0mInference done 21/60. Dataloading: 0.0014 s/iter. Inference: 0.4764 s/iter. Eval: 0.0523 s/iter. Total: 0.5302 s/iter. ETA=0:00:20
[32m[12/16 14:06:02 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0014 s/iter. Inference: 0.4061 s/iter. Eval: 0.0330 s/iter. Total: 0.4406 s/iter. ETA=0:00:16
[32m[12/16 14:06:06 d2.evaluation.evaluator]: [0mInference done 32/60. Dataloading: 0.0015 s/iter. Inference: 0.4641 s/iter. Eval: 0.0467 s/iter. Total: 0.5124 s/iter. ETA=0:00:14
[32m[12/16 14:06:07 d2.evaluation.evaluator]: [0mInference done 34/61. Dataloading: 0.0015 s/iter. Inference: 0.4064 s/iter. Eval: 0.0385 s/iter. Total: 0.4465 s/iter. ETA=0:00:12
[32m[12/16 14:06:12 d2.evaluation.evaluator]: [0mInference done 44/60. Dataloading: 0.0015 s/iter. Inference: 0.4493 s/iter. Eval: 0.0423 s/iter. Total: 0.4932 s/iter. ETA=0:00:07
[32m[12/16 14:06:12 d2.evaluation.evaluator]: [0mInference done 46/61. Dataloading: 0.0015 s/iter. Inference: 0.4040 s/iter. Eval: 0.0384 s/iter. Total: 0.4440 s/iter. ETA=0:00:06
[32m[12/16 14:06:17 d2.evaluation.evaluator]: [0mInference done 54/60. Dataloading: 0.0015 s/iter. Inference: 0.4590 s/iter. Eval: 0.0402 s/iter. Total: 0.5007 s/iter. ETA=0:00:03
[32m[12/16 14:06:18 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3987 s/iter. Eval: 0.0375 s/iter. Total: 0.4378 s/iter. ETA=0:00:00
[32m[12/16 14:06:19 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.686284 (0.440826 s / iter per device, on 2 devices)
[32m[12/16 14:06:19 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:22 (0.398611 s / iter per device, on 2 devices)
[32m[12/16 14:06:19 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 14:06:19 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.31110511631468574
[32m[12/16 14:06:20 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.769115 (0.504893 s / iter per device, on 2 devices)
[32m[12/16 14:06:20 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.458624 s / iter per device, on 2 devices)
[32m[12/16 14:06:20 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.31111, not better than best score 0.31301 @ iteration 4597.
[32m[12/16 14:06:34 d2.utils.events]: [0m eta: 1:38:24  iter: 6299  total_loss: 3.691  loss_cls_stage0: 0.2081  loss_box_reg_stage0: 0.4481  loss_cls_stage1: 0.2467  loss_box_reg_stage1: 0.9104  loss_cls_stage2: 0.2497  loss_box_reg_stage2: 1.062  loss_mask: 0.2741  loss_rpn_cls: 0.04681  loss_rpn_loc: 0.1919  time: 1.6468  data_time: 0.0488  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:07:10 d2.utils.events]: [0m eta: 1:37:52  iter: 6319  total_loss: 3.578  loss_cls_stage0: 0.2243  loss_box_reg_stage0: 0.4507  loss_cls_stage1: 0.2449  loss_box_reg_stage1: 0.7922  loss_cls_stage2: 0.2541  loss_box_reg_stage2: 0.939  loss_mask: 0.2872  loss_rpn_cls: 0.07373  loss_rpn_loc: 0.2014  time: 1.6473  data_time: 0.3464  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:07:41 d2.utils.events]: [0m eta: 1:37:21  iter: 6339  total_loss: 3.533  loss_cls_stage0: 0.1858  loss_box_reg_stage0: 0.4409  loss_cls_stage1: 0.2254  loss_box_reg_stage1: 0.908  loss_cls_stage2: 0.2563  loss_box_reg_stage2: 1.039  loss_mask: 0.2683  loss_rpn_cls: 0.036  loss_rpn_loc: 0.1621  time: 1.6470  data_time: 0.0253  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:08:17 d2.utils.events]: [0m eta: 1:36:51  iter: 6359  total_loss: 3.582  loss_cls_stage0: 0.2076  loss_box_reg_stage0: 0.46  loss_cls_stage1: 0.2615  loss_box_reg_stage1: 0.8949  loss_cls_stage2: 0.2614  loss_box_reg_stage2: 0.9747  loss_mask: 0.2681  loss_rpn_cls: 0.06866  loss_rpn_loc: 0.1941  time: 1.6475  data_time: 0.3294  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:08:50 d2.utils.events]: [0m eta: 1:36:41  iter: 6379  total_loss: 3.732  loss_cls_stage0: 0.2358  loss_box_reg_stage0: 0.4632  loss_cls_stage1: 0.2678  loss_box_reg_stage1: 0.8969  loss_cls_stage2: 0.2855  loss_box_reg_stage2: 1  loss_mask: 0.2674  loss_rpn_cls: 0.0939  loss_rpn_loc: 0.2296  time: 1.6475  data_time: 0.1203  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:09:23 d2.utils.events]: [0m eta: 1:36:09  iter: 6399  total_loss: 3.719  loss_cls_stage0: 0.2259  loss_box_reg_stage0: 0.4598  loss_cls_stage1: 0.2542  loss_box_reg_stage1: 0.8945  loss_cls_stage2: 0.2688  loss_box_reg_stage2: 1.029  loss_mask: 0.2697  loss_rpn_cls: 0.05782  loss_rpn_loc: 0.1816  time: 1.6475  data_time: 0.0969  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:09:58 d2.utils.events]: [0m eta: 1:35:13  iter: 6419  total_loss: 3.433  loss_cls_stage0: 0.2196  loss_box_reg_stage0: 0.4192  loss_cls_stage1: 0.2365  loss_box_reg_stage1: 0.8398  loss_cls_stage2: 0.2505  loss_box_reg_stage2: 0.952  loss_mask: 0.2365  loss_rpn_cls: 0.05726  loss_rpn_loc: 0.18  time: 1.6478  data_time: 0.1771  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:10:29 d2.utils.events]: [0m eta: 1:34:41  iter: 6439  total_loss: 3.586  loss_cls_stage0: 0.2236  loss_box_reg_stage0: 0.446  loss_cls_stage1: 0.2304  loss_box_reg_stage1: 0.9193  loss_cls_stage2: 0.2611  loss_box_reg_stage2: 1.017  loss_mask: 0.2747  loss_rpn_cls: 0.06098  loss_rpn_loc: 0.2157  time: 1.6475  data_time: 0.1306  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:10:59 d2.utils.events]: [0m eta: 1:34:09  iter: 6459  total_loss: 3.531  loss_cls_stage0: 0.1962  loss_box_reg_stage0: 0.4302  loss_cls_stage1: 0.212  loss_box_reg_stage1: 0.8652  loss_cls_stage2: 0.2511  loss_box_reg_stage2: 0.9915  loss_mask: 0.2745  loss_rpn_cls: 0.0578  loss_rpn_loc: 0.1733  time: 1.6471  data_time: 0.0335  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:11:30 d2.utils.events]: [0m eta: 1:33:19  iter: 6479  total_loss: 3.61  loss_cls_stage0: 0.2229  loss_box_reg_stage0: 0.4511  loss_cls_stage1: 0.2387  loss_box_reg_stage1: 0.8792  loss_cls_stage2: 0.2622  loss_box_reg_stage2: 0.9108  loss_mask: 0.2826  loss_rpn_cls: 0.07339  loss_rpn_loc: 0.1877  time: 1.6467  data_time: 0.0873  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:12:01 d2.utils.events]: [0m eta: 1:32:24  iter: 6499  total_loss: 3.569  loss_cls_stage0: 0.2178  loss_box_reg_stage0: 0.4297  loss_cls_stage1: 0.2608  loss_box_reg_stage1: 0.825  loss_cls_stage2: 0.2698  loss_box_reg_stage2: 0.9983  loss_mask: 0.2609  loss_rpn_cls: 0.05625  loss_rpn_loc: 0.1673  time: 1.6465  data_time: 0.0394  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:12:35 d2.utils.events]: [0m eta: 1:31:59  iter: 6519  total_loss: 3.75  loss_cls_stage0: 0.271  loss_box_reg_stage0: 0.4624  loss_cls_stage1: 0.2786  loss_box_reg_stage1: 0.8627  loss_cls_stage2: 0.2962  loss_box_reg_stage2: 0.9073  loss_mask: 0.2918  loss_rpn_cls: 0.08484  loss_rpn_loc: 0.245  time: 1.6466  data_time: 0.0462  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:12:56 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.25387, not better than best score 0.25692 @ iteration 4597.
[32m[12/16 14:12:56 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:12:56 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 14:12:56 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 14:12:56 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 14:12:56 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:12:56 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 14:12:58 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:12:58 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 14:12:58 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 14:12:58 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 14:12:58 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:12:59 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 14:13:04 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4740 s/iter. Eval: 0.0372 s/iter. Total: 0.5124 s/iter. ETA=0:00:25
[32m[12/16 14:13:06 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0012 s/iter. Inference: 0.3711 s/iter. Eval: 0.0278 s/iter. Total: 0.4001 s/iter. ETA=0:00:20
[32m[12/16 14:13:10 d2.evaluation.evaluator]: [0mInference done 21/60. Dataloading: 0.0014 s/iter. Inference: 0.4680 s/iter. Eval: 0.0522 s/iter. Total: 0.5217 s/iter. ETA=0:00:20
[32m[12/16 14:13:11 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0014 s/iter. Inference: 0.3945 s/iter. Eval: 0.0332 s/iter. Total: 0.4292 s/iter. ETA=0:00:16
[32m[12/16 14:13:15 d2.evaluation.evaluator]: [0mInference done 31/60. Dataloading: 0.0014 s/iter. Inference: 0.4785 s/iter. Eval: 0.0478 s/iter. Total: 0.5278 s/iter. ETA=0:00:15
[32m[12/16 14:13:16 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3897 s/iter. Eval: 0.0380 s/iter. Total: 0.4291 s/iter. ETA=0:00:11
[32m[12/16 14:13:20 d2.evaluation.evaluator]: [0mInference done 42/60. Dataloading: 0.0015 s/iter. Inference: 0.4707 s/iter. Eval: 0.0436 s/iter. Total: 0.5158 s/iter. ETA=0:00:09
[32m[12/16 14:13:22 d2.evaluation.evaluator]: [0mInference done 48/61. Dataloading: 0.0015 s/iter. Inference: 0.3856 s/iter. Eval: 0.0377 s/iter. Total: 0.4248 s/iter. ETA=0:00:05
[32m[12/16 14:13:26 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4642 s/iter. Eval: 0.0404 s/iter. Total: 0.5061 s/iter. ETA=0:00:03
[32m[12/16 14:13:27 d2.evaluation.evaluator]: [0mInference done 60/61. Dataloading: 0.0015 s/iter. Inference: 0.3879 s/iter. Eval: 0.0374 s/iter. Total: 0.4268 s/iter. ETA=0:00:00
[32m[12/16 14:13:27 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.096746 (0.430299 s / iter per device, on 2 devices)
[32m[12/16 14:13:27 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.387709 s / iter per device, on 2 devices)
[32m[12/16 14:13:27 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 14:13:27 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.30934830331805097
[32m[12/16 14:13:29 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.949162 (0.508167 s / iter per device, on 2 devices)
[32m[12/16 14:13:29 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.462035 s / iter per device, on 2 devices)
[32m[12/16 14:13:29 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.30935, not better than best score 0.31301 @ iteration 4597.
[32m[12/16 14:13:39 d2.utils.events]: [0m eta: 1:31:27  iter: 6539  total_loss: 3.552  loss_cls_stage0: 0.2036  loss_box_reg_stage0: 0.4377  loss_cls_stage1: 0.2218  loss_box_reg_stage1: 0.8872  loss_cls_stage2: 0.2471  loss_box_reg_stage2: 0.9963  loss_mask: 0.2687  loss_rpn_cls: 0.06888  loss_rpn_loc: 0.1798  time: 1.6463  data_time: 0.0280  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:14:17 d2.utils.events]: [0m eta: 1:31:29  iter: 6559  total_loss: 3.453  loss_cls_stage0: 0.2093  loss_box_reg_stage0: 0.4231  loss_cls_stage1: 0.2271  loss_box_reg_stage1: 0.8776  loss_cls_stage2: 0.2626  loss_box_reg_stage2: 0.9565  loss_mask: 0.2682  loss_rpn_cls: 0.06525  loss_rpn_loc: 0.2006  time: 1.6470  data_time: 0.3399  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:14:49 d2.utils.events]: [0m eta: 1:30:51  iter: 6579  total_loss: 3.675  loss_cls_stage0: 0.234  loss_box_reg_stage0: 0.4441  loss_cls_stage1: 0.2338  loss_box_reg_stage1: 0.8679  loss_cls_stage2: 0.2572  loss_box_reg_stage2: 0.935  loss_mask: 0.2764  loss_rpn_cls: 0.08455  loss_rpn_loc: 0.1864  time: 1.6469  data_time: 0.0605  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:15:21 d2.utils.events]: [0m eta: 1:30:23  iter: 6599  total_loss: 3.643  loss_cls_stage0: 0.2138  loss_box_reg_stage0: 0.4359  loss_cls_stage1: 0.228  loss_box_reg_stage1: 0.9089  loss_cls_stage2: 0.2694  loss_box_reg_stage2: 1.003  loss_mask: 0.2659  loss_rpn_cls: 0.06849  loss_rpn_loc: 0.1943  time: 1.6468  data_time: 0.0419  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:15:53 d2.utils.events]: [0m eta: 1:29:45  iter: 6619  total_loss: 3.579  loss_cls_stage0: 0.207  loss_box_reg_stage0: 0.4389  loss_cls_stage1: 0.2114  loss_box_reg_stage1: 0.9065  loss_cls_stage2: 0.251  loss_box_reg_stage2: 1.044  loss_mask: 0.2659  loss_rpn_cls: 0.04857  loss_rpn_loc: 0.1722  time: 1.6465  data_time: 0.0351  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:16:31 d2.utils.events]: [0m eta: 1:29:24  iter: 6639  total_loss: 3.504  loss_cls_stage0: 0.2005  loss_box_reg_stage0: 0.4181  loss_cls_stage1: 0.2216  loss_box_reg_stage1: 0.9007  loss_cls_stage2: 0.2288  loss_box_reg_stage2: 1.03  loss_mask: 0.2591  loss_rpn_cls: 0.06095  loss_rpn_loc: 0.1776  time: 1.6473  data_time: 0.3429  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:17:04 d2.utils.events]: [0m eta: 1:28:25  iter: 6659  total_loss: 3.555  loss_cls_stage0: 0.2127  loss_box_reg_stage0: 0.4461  loss_cls_stage1: 0.2354  loss_box_reg_stage1: 0.819  loss_cls_stage2: 0.2509  loss_box_reg_stage2: 1.03  loss_mask: 0.2612  loss_rpn_cls: 0.05495  loss_rpn_loc: 0.2248  time: 1.6473  data_time: 0.1952  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:17:36 d2.utils.events]: [0m eta: 1:28:01  iter: 6679  total_loss: 3.635  loss_cls_stage0: 0.2286  loss_box_reg_stage0: 0.4505  loss_cls_stage1: 0.2578  loss_box_reg_stage1: 0.8506  loss_cls_stage2: 0.2871  loss_box_reg_stage2: 0.9665  loss_mask: 0.2787  loss_rpn_cls: 0.06009  loss_rpn_loc: 0.2067  time: 1.6473  data_time: 0.0350  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:18:11 d2.utils.events]: [0m eta: 1:27:37  iter: 6699  total_loss: 3.417  loss_cls_stage0: 0.2388  loss_box_reg_stage0: 0.4502  loss_cls_stage1: 0.2589  loss_box_reg_stage1: 0.8306  loss_cls_stage2: 0.269  loss_box_reg_stage2: 0.9679  loss_mask: 0.278  loss_rpn_cls: 0.07221  loss_rpn_loc: 0.2132  time: 1.6475  data_time: 0.1520  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:18:42 d2.utils.events]: [0m eta: 1:27:05  iter: 6719  total_loss: 3.508  loss_cls_stage0: 0.1938  loss_box_reg_stage0: 0.4294  loss_cls_stage1: 0.2235  loss_box_reg_stage1: 0.8932  loss_cls_stage2: 0.2484  loss_box_reg_stage2: 0.9824  loss_mask: 0.2848  loss_rpn_cls: 0.07767  loss_rpn_loc: 0.1698  time: 1.6472  data_time: 0.0801  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:19:15 d2.utils.events]: [0m eta: 1:26:40  iter: 6739  total_loss: 3.781  loss_cls_stage0: 0.2098  loss_box_reg_stage0: 0.4452  loss_cls_stage1: 0.2257  loss_box_reg_stage1: 0.9146  loss_cls_stage2: 0.2571  loss_box_reg_stage2: 1.036  loss_mask: 0.2638  loss_rpn_cls: 0.07933  loss_rpn_loc: 0.2148  time: 1.6472  data_time: 0.0858  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:19:47 d2.utils.events]: [0m eta: 1:26:13  iter: 6759  total_loss: 3.55  loss_cls_stage0: 0.2241  loss_box_reg_stage0: 0.4501  loss_cls_stage1: 0.236  loss_box_reg_stage1: 0.8461  loss_cls_stage2: 0.2603  loss_box_reg_stage2: 1.024  loss_mask: 0.2503  loss_rpn_cls: 0.06783  loss_rpn_loc: 0.1629  time: 1.6470  data_time: 0.0316  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:20:13 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.25566, not better than best score 0.25692 @ iteration 4597.
[32m[12/16 14:20:14 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:20:14 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 14:20:14 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 14:20:14 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 14:20:14 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:20:14 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 14:20:16 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:20:16 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 14:20:16 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 14:20:16 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 14:20:16 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:20:16 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 14:20:22 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.5073 s/iter. Eval: 0.0362 s/iter. Total: 0.5448 s/iter. ETA=0:00:26
[32m[12/16 14:20:24 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0012 s/iter. Inference: 0.4207 s/iter. Eval: 0.0259 s/iter. Total: 0.4479 s/iter. ETA=0:00:22
[32m[12/16 14:20:28 d2.evaluation.evaluator]: [0mInference done 21/60. Dataloading: 0.0014 s/iter. Inference: 0.4755 s/iter. Eval: 0.0519 s/iter. Total: 0.5289 s/iter. ETA=0:00:20
[32m[12/16 14:20:29 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0014 s/iter. Inference: 0.3992 s/iter. Eval: 0.0326 s/iter. Total: 0.4333 s/iter. ETA=0:00:16
[32m[12/16 14:20:33 d2.evaluation.evaluator]: [0mInference done 32/60. Dataloading: 0.0015 s/iter. Inference: 0.4532 s/iter. Eval: 0.0462 s/iter. Total: 0.5010 s/iter. ETA=0:00:14
[32m[12/16 14:20:34 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3965 s/iter. Eval: 0.0376 s/iter. Total: 0.4357 s/iter. ETA=0:00:11
[32m[12/16 14:20:38 d2.evaluation.evaluator]: [0mInference done 42/60. Dataloading: 0.0015 s/iter. Inference: 0.4596 s/iter. Eval: 0.0433 s/iter. Total: 0.5044 s/iter. ETA=0:00:09
[32m[12/16 14:20:39 d2.evaluation.evaluator]: [0mInference done 46/61. Dataloading: 0.0015 s/iter. Inference: 0.4017 s/iter. Eval: 0.0380 s/iter. Total: 0.4413 s/iter. ETA=0:00:06
[32m[12/16 14:20:43 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4578 s/iter. Eval: 0.0402 s/iter. Total: 0.4996 s/iter. ETA=0:00:03
[32m[12/16 14:20:45 d2.evaluation.evaluator]: [0mInference done 58/61. Dataloading: 0.0015 s/iter. Inference: 0.4052 s/iter. Eval: 0.0365 s/iter. Total: 0.4433 s/iter. ETA=0:00:01
[32m[12/16 14:20:46 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.942280 (0.445398 s / iter per device, on 2 devices)
[32m[12/16 14:20:46 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:22 (0.403658 s / iter per device, on 2 devices)
[32m[12/16 14:20:46 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 14:20:46 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.3106141968323278
[32m[12/16 14:20:47 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.725488 (0.504100 s / iter per device, on 2 devices)
[32m[12/16 14:20:47 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.458580 s / iter per device, on 2 devices)
[32m[12/16 14:20:47 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.31061, not better than best score 0.31301 @ iteration 4597.
[32m[12/16 14:20:53 d2.utils.events]: [0m eta: 1:25:41  iter: 6779  total_loss: 3.559  loss_cls_stage0: 0.2227  loss_box_reg_stage0: 0.4425  loss_cls_stage1: 0.2718  loss_box_reg_stage1: 0.8746  loss_cls_stage2: 0.2758  loss_box_reg_stage2: 0.9891  loss_mask: 0.2641  loss_rpn_cls: 0.06107  loss_rpn_loc: 0.2026  time: 1.6471  data_time: 0.1588  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:21:28 d2.utils.events]: [0m eta: 1:25:16  iter: 6799  total_loss: 3.576  loss_cls_stage0: 0.1932  loss_box_reg_stage0: 0.4024  loss_cls_stage1: 0.2305  loss_box_reg_stage1: 0.8837  loss_cls_stage2: 0.2344  loss_box_reg_stage2: 1.061  loss_mask: 0.2439  loss_rpn_cls: 0.09105  loss_rpn_loc: 0.1945  time: 1.6473  data_time: 0.1204  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:22:00 d2.utils.events]: [0m eta: 1:25:00  iter: 6819  total_loss: 3.691  loss_cls_stage0: 0.1932  loss_box_reg_stage0: 0.4453  loss_cls_stage1: 0.2226  loss_box_reg_stage1: 0.9192  loss_cls_stage2: 0.2615  loss_box_reg_stage2: 1.061  loss_mask: 0.2737  loss_rpn_cls: 0.04646  loss_rpn_loc: 0.1781  time: 1.6471  data_time: 0.0281  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:22:30 d2.utils.events]: [0m eta: 1:24:25  iter: 6839  total_loss: 3.635  loss_cls_stage0: 0.2092  loss_box_reg_stage0: 0.4699  loss_cls_stage1: 0.2398  loss_box_reg_stage1: 0.8898  loss_cls_stage2: 0.2614  loss_box_reg_stage2: 0.9491  loss_mask: 0.2862  loss_rpn_cls: 0.06517  loss_rpn_loc: 0.2115  time: 1.6468  data_time: 0.0428  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:23:03 d2.utils.events]: [0m eta: 1:23:57  iter: 6859  total_loss: 3.467  loss_cls_stage0: 0.2217  loss_box_reg_stage0: 0.4243  loss_cls_stage1: 0.2522  loss_box_reg_stage1: 0.8078  loss_cls_stage2: 0.2792  loss_box_reg_stage2: 0.9108  loss_mask: 0.257  loss_rpn_cls: 0.08541  loss_rpn_loc: 0.2132  time: 1.6468  data_time: 0.0691  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:23:34 d2.utils.events]: [0m eta: 1:23:24  iter: 6879  total_loss: 3.669  loss_cls_stage0: 0.2208  loss_box_reg_stage0: 0.4489  loss_cls_stage1: 0.2422  loss_box_reg_stage1: 0.9199  loss_cls_stage2: 0.2519  loss_box_reg_stage2: 1.027  loss_mask: 0.2837  loss_rpn_cls: 0.06466  loss_rpn_loc: 0.1933  time: 1.6465  data_time: 0.0433  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:24:06 d2.utils.events]: [0m eta: 1:22:52  iter: 6899  total_loss: 3.62  loss_cls_stage0: 0.211  loss_box_reg_stage0: 0.4401  loss_cls_stage1: 0.2406  loss_box_reg_stage1: 0.8752  loss_cls_stage2: 0.2578  loss_box_reg_stage2: 1.012  loss_mask: 0.2706  loss_rpn_cls: 0.06957  loss_rpn_loc: 0.1973  time: 1.6464  data_time: 0.0538  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:24:39 d2.utils.events]: [0m eta: 1:22:19  iter: 6919  total_loss: 3.54  loss_cls_stage0: 0.2035  loss_box_reg_stage0: 0.4494  loss_cls_stage1: 0.2135  loss_box_reg_stage1: 0.9149  loss_cls_stage2: 0.2598  loss_box_reg_stage2: 1.02  loss_mask: 0.2724  loss_rpn_cls: 0.04612  loss_rpn_loc: 0.1812  time: 1.6463  data_time: 0.0995  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:25:09 d2.utils.events]: [0m eta: 1:21:45  iter: 6939  total_loss: 3.549  loss_cls_stage0: 0.2155  loss_box_reg_stage0: 0.3995  loss_cls_stage1: 0.2451  loss_box_reg_stage1: 0.8429  loss_cls_stage2: 0.2469  loss_box_reg_stage2: 1.056  loss_mask: 0.2544  loss_rpn_cls: 0.06141  loss_rpn_loc: 0.2106  time: 1.6459  data_time: 0.0360  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:25:50 d2.utils.events]: [0m eta: 1:21:16  iter: 6959  total_loss: 3.348  loss_cls_stage0: 0.2005  loss_box_reg_stage0: 0.4024  loss_cls_stage1: 0.2207  loss_box_reg_stage1: 0.8278  loss_cls_stage2: 0.2316  loss_box_reg_stage2: 1.018  loss_mask: 0.2642  loss_rpn_cls: 0.07938  loss_rpn_loc: 0.1912  time: 1.6471  data_time: 0.6948  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:26:28 d2.utils.events]: [0m eta: 1:20:41  iter: 6979  total_loss: 3.721  loss_cls_stage0: 0.2449  loss_box_reg_stage0: 0.4622  loss_cls_stage1: 0.2719  loss_box_reg_stage1: 0.9257  loss_cls_stage2: 0.2844  loss_box_reg_stage2: 0.9735  loss_mask: 0.2805  loss_rpn_cls: 0.07539  loss_rpn_loc: 0.2119  time: 1.6478  data_time: 0.3992  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:26:59 d2.utils.events]: [0m eta: 1:20:08  iter: 6999  total_loss: 3.671  loss_cls_stage0: 0.2045  loss_box_reg_stage0: 0.4712  loss_cls_stage1: 0.2245  loss_box_reg_stage1: 0.9393  loss_cls_stage2: 0.2697  loss_box_reg_stage2: 1.069  loss_mask: 0.2728  loss_rpn_cls: 0.05261  loss_rpn_loc: 0.1729  time: 1.6475  data_time: 0.0245  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:27:29 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.25417, not better than best score 0.25692 @ iteration 4597.
[32m[12/16 14:27:29 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:27:29 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 14:27:29 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 14:27:29 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 14:27:30 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:27:30 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 14:27:31 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:27:31 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 14:27:31 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 14:27:31 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 14:27:32 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:27:32 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 14:27:38 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4660 s/iter. Eval: 0.0368 s/iter. Total: 0.5041 s/iter. ETA=0:00:24
[32m[12/16 14:27:39 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.3751 s/iter. Eval: 0.0267 s/iter. Total: 0.4031 s/iter. ETA=0:00:20
[32m[12/16 14:27:44 d2.evaluation.evaluator]: [0mInference done 22/60. Dataloading: 0.0015 s/iter. Inference: 0.4848 s/iter. Eval: 0.0506 s/iter. Total: 0.5369 s/iter. ETA=0:00:20
[32m[12/16 14:27:44 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0015 s/iter. Inference: 0.3898 s/iter. Eval: 0.0330 s/iter. Total: 0.4243 s/iter. ETA=0:00:16
[32m[12/16 14:27:49 d2.evaluation.evaluator]: [0mInference done 33/60. Dataloading: 0.0015 s/iter. Inference: 0.4691 s/iter. Eval: 0.0461 s/iter. Total: 0.5167 s/iter. ETA=0:00:13
[32m[12/16 14:27:50 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3959 s/iter. Eval: 0.0379 s/iter. Total: 0.4354 s/iter. ETA=0:00:11
[32m[12/16 14:27:55 d2.evaluation.evaluator]: [0mInference done 44/60. Dataloading: 0.0015 s/iter. Inference: 0.4647 s/iter. Eval: 0.0421 s/iter. Total: 0.5085 s/iter. ETA=0:00:08
[32m[12/16 14:27:55 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3964 s/iter. Eval: 0.0378 s/iter. Total: 0.4358 s/iter. ETA=0:00:06
[32m[12/16 14:28:00 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3926 s/iter. Eval: 0.0376 s/iter. Total: 0.4318 s/iter. ETA=0:00:00
[32m[12/16 14:28:00 d2.evaluation.evaluator]: [0mInference done 55/60. Dataloading: 0.0015 s/iter. Inference: 0.4642 s/iter. Eval: 0.0403 s/iter. Total: 0.5061 s/iter. ETA=0:00:02
[32m[12/16 14:28:01 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.296410 (0.433864 s / iter per device, on 2 devices)
[32m[12/16 14:28:01 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.391819 s / iter per device, on 2 devices)
[32m[12/16 14:28:01 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 14:28:01 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.31234725476761077
[32m[12/16 14:28:03 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.865251 (0.506641 s / iter per device, on 2 devices)
[32m[12/16 14:28:03 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.460538 s / iter per device, on 2 devices)
[32m[12/16 14:28:03 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.31235, not better than best score 0.31301 @ iteration 4597.
[32m[12/16 14:28:06 d2.utils.events]: [0m eta: 1:19:34  iter: 7019  total_loss: 3.54  loss_cls_stage0: 0.2112  loss_box_reg_stage0: 0.4201  loss_cls_stage1: 0.2439  loss_box_reg_stage1: 0.8602  loss_cls_stage2: 0.263  loss_box_reg_stage2: 0.9446  loss_mask: 0.2705  loss_rpn_cls: 0.09034  loss_rpn_loc: 0.2124  time: 1.6475  data_time: 0.1187  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:28:38 d2.utils.events]: [0m eta: 1:19:02  iter: 7039  total_loss: 3.496  loss_cls_stage0: 0.2121  loss_box_reg_stage0: 0.4444  loss_cls_stage1: 0.2253  loss_box_reg_stage1: 0.8941  loss_cls_stage2: 0.2513  loss_box_reg_stage2: 1.067  loss_mask: 0.266  loss_rpn_cls: 0.05928  loss_rpn_loc: 0.174  time: 1.6474  data_time: 0.1234  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:29:11 d2.utils.events]: [0m eta: 1:18:32  iter: 7059  total_loss: 3.682  loss_cls_stage0: 0.2339  loss_box_reg_stage0: 0.4463  loss_cls_stage1: 0.2671  loss_box_reg_stage1: 0.8842  loss_cls_stage2: 0.2716  loss_box_reg_stage2: 0.9891  loss_mask: 0.2797  loss_rpn_cls: 0.07293  loss_rpn_loc: 0.2051  time: 1.6474  data_time: 0.0306  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:29:42 d2.utils.events]: [0m eta: 1:17:55  iter: 7079  total_loss: 3.468  loss_cls_stage0: 0.2241  loss_box_reg_stage0: 0.4297  loss_cls_stage1: 0.2371  loss_box_reg_stage1: 0.833  loss_cls_stage2: 0.2539  loss_box_reg_stage2: 1.004  loss_mask: 0.2562  loss_rpn_cls: 0.06019  loss_rpn_loc: 0.1889  time: 1.6471  data_time: 0.0371  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:30:13 d2.utils.events]: [0m eta: 1:17:26  iter: 7099  total_loss: 3.597  loss_cls_stage0: 0.2253  loss_box_reg_stage0: 0.4505  loss_cls_stage1: 0.2406  loss_box_reg_stage1: 0.879  loss_cls_stage2: 0.2632  loss_box_reg_stage2: 0.9758  loss_mask: 0.2692  loss_rpn_cls: 0.06134  loss_rpn_loc: 0.1795  time: 1.6468  data_time: 0.0757  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:30:46 d2.utils.events]: [0m eta: 1:17:00  iter: 7119  total_loss: 3.558  loss_cls_stage0: 0.206  loss_box_reg_stage0: 0.4562  loss_cls_stage1: 0.2373  loss_box_reg_stage1: 0.8816  loss_cls_stage2: 0.2452  loss_box_reg_stage2: 0.957  loss_mask: 0.2826  loss_rpn_cls: 0.07525  loss_rpn_loc: 0.2056  time: 1.6468  data_time: 0.1060  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:31:28 d2.utils.events]: [0m eta: 1:16:26  iter: 7139  total_loss: 3.528  loss_cls_stage0: 0.2038  loss_box_reg_stage0: 0.4264  loss_cls_stage1: 0.2244  loss_box_reg_stage1: 0.922  loss_cls_stage2: 0.2445  loss_box_reg_stage2: 1.013  loss_mask: 0.2628  loss_rpn_cls: 0.06181  loss_rpn_loc: 0.1841  time: 1.6481  data_time: 0.5422  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:32:02 d2.utils.events]: [0m eta: 1:15:54  iter: 7159  total_loss: 3.628  loss_cls_stage0: 0.2235  loss_box_reg_stage0: 0.4435  loss_cls_stage1: 0.2509  loss_box_reg_stage1: 0.9579  loss_cls_stage2: 0.2748  loss_box_reg_stage2: 1.022  loss_mask: 0.2721  loss_rpn_cls: 0.084  loss_rpn_loc: 0.2182  time: 1.6482  data_time: 0.1288  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:32:34 d2.utils.events]: [0m eta: 1:15:22  iter: 7179  total_loss: 3.581  loss_cls_stage0: 0.2094  loss_box_reg_stage0: 0.4361  loss_cls_stage1: 0.2307  loss_box_reg_stage1: 0.8951  loss_cls_stage2: 0.2553  loss_box_reg_stage2: 0.9891  loss_mask: 0.2686  loss_rpn_cls: 0.07162  loss_rpn_loc: 0.2065  time: 1.6482  data_time: 0.0713  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:33:08 d2.utils.events]: [0m eta: 1:14:44  iter: 7199  total_loss: 3.581  loss_cls_stage0: 0.2339  loss_box_reg_stage0: 0.4536  loss_cls_stage1: 0.2563  loss_box_reg_stage1: 0.9241  loss_cls_stage2: 0.2946  loss_box_reg_stage2: 0.9941  loss_mask: 0.287  loss_rpn_cls: 0.06881  loss_rpn_loc: 0.1803  time: 1.6483  data_time: 0.1136  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:33:41 d2.utils.events]: [0m eta: 1:14:24  iter: 7219  total_loss: 3.721  loss_cls_stage0: 0.2434  loss_box_reg_stage0: 0.4332  loss_cls_stage1: 0.2371  loss_box_reg_stage1: 0.8937  loss_cls_stage2: 0.2605  loss_box_reg_stage2: 0.9992  loss_mask: 0.2726  loss_rpn_cls: 0.06284  loss_rpn_loc: 0.2073  time: 1.6482  data_time: 0.0508  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:34:20 d2.utils.events]: [0m eta: 1:13:57  iter: 7239  total_loss: 3.441  loss_cls_stage0: 0.2338  loss_box_reg_stage0: 0.4031  loss_cls_stage1: 0.2611  loss_box_reg_stage1: 0.8113  loss_cls_stage2: 0.2919  loss_box_reg_stage2: 0.9024  loss_mask: 0.2563  loss_rpn_cls: 0.08888  loss_rpn_loc: 0.1937  time: 1.6491  data_time: 0.4806  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:34:52 d2.engine.hooks]: [0mSaved best model as latest eval score for MaP IoU is 0.25700, better than last best score 0.25692 @ iteration 4597.
[32m[12/16 14:34:52 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:34:52 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 14:34:52 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 14:34:52 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 14:34:53 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:34:53 d2.evaluation.evaluator]: [0mStart inference on 60 batches
[32m[12/16 14:34:54 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:34:54 d2.data.dataset_mapper]: [0m[DatasetMapper] Augmentations used in inference: [ResizeShortestEdge(short_edge_length=(1040, 1040), max_size=1408, sample_style='choice')]
[32m[12/16 14:34:54 d2.data.common]: [0mSerializing 121 elements to byte tensors and concatenating them all ...
[32m[12/16 14:34:54 d2.data.common]: [0mSerialized dataset takes 1.73 MiB
[32m[12/16 14:34:55 d2.data.datasets.coco]: [0mLoaded 121 images in COCO format from ../cell_data/annotations_val.json
[32m[12/16 14:34:55 d2.evaluation.evaluator]: [0mStart inference on 61 batches
[32m[12/16 14:35:01 d2.evaluation.evaluator]: [0mInference done 11/60. Dataloading: 0.0013 s/iter. Inference: 0.4897 s/iter. Eval: 0.0372 s/iter. Total: 0.5282 s/iter. ETA=0:00:25
[32m[12/16 14:35:02 d2.evaluation.evaluator]: [0mInference done 11/61. Dataloading: 0.0013 s/iter. Inference: 0.3740 s/iter. Eval: 0.0270 s/iter. Total: 0.4024 s/iter. ETA=0:00:20
[32m[12/16 14:35:06 d2.evaluation.evaluator]: [0mInference done 22/60. Dataloading: 0.0015 s/iter. Inference: 0.4461 s/iter. Eval: 0.0508 s/iter. Total: 0.4985 s/iter. ETA=0:00:18
[32m[12/16 14:35:07 d2.evaluation.evaluator]: [0mInference done 23/61. Dataloading: 0.0014 s/iter. Inference: 0.3914 s/iter. Eval: 0.0331 s/iter. Total: 0.4260 s/iter. ETA=0:00:16
[32m[12/16 14:35:11 d2.evaluation.evaluator]: [0mInference done 32/60. Dataloading: 0.0015 s/iter. Inference: 0.4631 s/iter. Eval: 0.0467 s/iter. Total: 0.5114 s/iter. ETA=0:00:14
[32m[12/16 14:35:13 d2.evaluation.evaluator]: [0mInference done 35/61. Dataloading: 0.0015 s/iter. Inference: 0.3926 s/iter. Eval: 0.0381 s/iter. Total: 0.4322 s/iter. ETA=0:00:11
[32m[12/16 14:35:17 d2.evaluation.evaluator]: [0mInference done 43/60. Dataloading: 0.0015 s/iter. Inference: 0.4555 s/iter. Eval: 0.0430 s/iter. Total: 0.5000 s/iter. ETA=0:00:08
[32m[12/16 14:35:18 d2.evaluation.evaluator]: [0mInference done 47/61. Dataloading: 0.0015 s/iter. Inference: 0.3923 s/iter. Eval: 0.0382 s/iter. Total: 0.4320 s/iter. ETA=0:00:06
[32m[12/16 14:35:22 d2.evaluation.evaluator]: [0mInference done 53/60. Dataloading: 0.0015 s/iter. Inference: 0.4590 s/iter. Eval: 0.0407 s/iter. Total: 0.5012 s/iter. ETA=0:00:03
[32m[12/16 14:35:23 d2.evaluation.evaluator]: [0mInference done 59/61. Dataloading: 0.0015 s/iter. Inference: 0.3920 s/iter. Eval: 0.0377 s/iter. Total: 0.4313 s/iter. ETA=0:00:00
[32m[12/16 14:35:24 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:24.312363 (0.434149 s / iter per device, on 2 devices)
[32m[12/16 14:35:24 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:21 (0.391125 s / iter per device, on 2 devices)
[32m[12/16 14:35:24 d2.engine.defaults]: [0mEvaluation results for sartorius_val in csv format:
[32m[12/16 14:35:24 d2.evaluation.testing]: [0mcopypaste: MaP IoU=0.3100269978985742
[32m[12/16 14:35:25 d2.evaluation.evaluator]: [0mTotal inference time: 0:00:27.560668 (0.501103 s / iter per device, on 2 devices)
[32m[12/16 14:35:25 d2.evaluation.evaluator]: [0mTotal inference pure compute time: 0:00:25 (0.454808 s / iter per device, on 2 devices)
[32m[12/16 14:35:25 d2.engine.hooks]: [0mNot saving as latest eval score for MaP IoU is 0.31003, not better than best score 0.31301 @ iteration 4597.
[32m[12/16 14:35:25 d2.utils.events]: [0m eta: 1:13:32  iter: 7259  total_loss: 3.653  loss_cls_stage0: 0.2112  loss_box_reg_stage0: 0.4377  loss_cls_stage1: 0.2109  loss_box_reg_stage1: 0.9341  loss_cls_stage2: 0.2269  loss_box_reg_stage2: 1.062  loss_mask: 0.2684  loss_rpn_cls: 0.0518  loss_rpn_loc: 0.198  time: 1.6489  data_time: 0.0350  lr: 0.0001  max_mem: 15256M
[32m[12/16 14:35:58 d2.utils.events]: [0m eta: 1:13:13  iter: 7279  total_loss: 3.623  loss_cls_stage0: 0.2263  loss_box_reg_stage0: 0.4535  loss_cls_stage1: 0.2339  loss_box_reg_stage1: 0.9228  loss_cls_stage2: 0.2521  loss_box_reg_stage2: 0.9621  loss_mask: 0.2762  loss_rpn_cls: 0.09067  loss_rpn_loc: 0.2103  time: 1.6490  data_time: 0.0290  lr: 0.0001  max_mem: 15256M
